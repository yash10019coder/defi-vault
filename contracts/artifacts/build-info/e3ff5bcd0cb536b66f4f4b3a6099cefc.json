{
	"id": "e3ff5bcd0cb536b66f4f4b3a6099cefc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC4626Vault.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract ERC4626Vault is ERC20, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    IERC20 public immutable token0;\n    IERC20 public immutable token1;\n\n    uint256 public totalAssets0;\n    uint256 public totalAssets1;\n\n    constructor(address _token0, address _token1) ERC20(\"ERC4626 Vault Token\", \"VAULT4626\") {\n        token0 = IERC20(_token0);\n        token1 = IERC20(_token1);\n    }\n\n    /// @notice Deposit tokens into the vault and receive vault shares\n    function deposit(uint256 amount0, uint256 amount1) external nonReentrant returns (uint256 shares) {\n        require(amount0 > 0 && amount1 > 0, \"Invalid amounts\");\n\n        // Transfer the underlying tokens from user to vault\n        token0.safeTransferFrom(msg.sender, address(this), amount0);\n        token1.safeTransferFrom(msg.sender, address(this), amount1);\n\n        // Calculate how many shares to mint based on the deposit amounts\n        if (totalSupply() == 0) {\n            shares = sqrt(amount0 * amount1);\n        } else {\n            shares = min(\n                (amount0 * totalSupply()) / totalAssets0,\n                (amount1 * totalSupply()) / totalAssets1\n            );\n        }\n\n        // Update vault asset balances\n        totalAssets0 += amount0;\n        totalAssets1 += amount1;\n\n        // Mint vault shares to the depositor\n        _mint(msg.sender, shares);\n\n        emit Deposit(msg.sender, amount0, amount1, shares);\n    }\n\n    /// @notice Withdraw tokens by burning shares\n    function withdraw(uint256 shares) external nonReentrant returns (uint256 amount0, uint256 amount1) {\n        require(shares > 0, \"Invalid share amount\");\n\n        // Calculate the underlying amounts to withdraw based on the share amount\n        uint256 supply = totalSupply();\n        amount0 = (shares * totalAssets0) / supply;\n        amount1 = (shares * totalAssets1) / supply;\n\n        // Burn the user's shares\n        _burn(msg.sender, shares);\n\n        // Update vault asset balances\n        totalAssets0 -= amount0;\n        totalAssets1 -= amount1;\n\n        // Transfer the underlying tokens back to the user\n        token0.safeTransfer(msg.sender, amount0);\n        token1.safeTransfer(msg.sender, amount1);\n\n        emit Withdraw(msg.sender, shares, amount0, amount1);\n    }\n\n    /// @notice Calculate the total value of assets in the vault\n    function totalAssets() public view returns (uint256 total0, uint256 total1) {\n        total0 = totalAssets0;\n        total1 = totalAssets1;\n    }\n\n    /// @notice Utility function to calculate the square root of a number\n    function sqrt(uint y) private pure returns (uint z) {\n        if (y > 3) {\n            z = y;\n            uint x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n        return z;\n    }\n\n    /// @notice Utility function to calculate the minimum of two numbers\n    function min(uint x, uint y) private pure returns (uint) {\n        return x < y ? x : y;\n    }\n\n    event Deposit(address indexed user, uint256 amount0, uint256 amount1, uint256 shares);\n    event Withdraw(address indexed user, uint256 shares, uint256 amount0, uint256 amount1);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/ERC4626Vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/ERC4626Vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1375,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC4626Vault.sol": {
				"ERC4626Vault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "total0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "total1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssets0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssets1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC4626Vault.sol\":297:3524  contract ERC4626Vault is ERC20, ReentrancyGuard {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/ERC4626Vault.sol\":524:687  constructor(address _token0, address _token1) ERC20(\"ERC4626 Vault Token\", \"VAULT4626\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x13\n  dup2\n  mstore\n  0x20\n  add\n  0x45524334363236205661756c7420546f6b656e00000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x5641554c54343632360000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x05\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC4626Vault.sol\":638:645  _token0 */\n  dup2\n    /* \"contracts/ERC4626Vault.sol\":622:646  token0 = IERC20(_token0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC4626Vault.sol\":672:679  _token1 */\n  dup1\n    /* \"contracts/ERC4626Vault.sol\":656:680  token1 = IERC20(_token1) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC4626Vault.sol\":524:687  constructor(address _token0, address _token1) ERC20(\"ERC4626 Vault Token\", \"VAULT4626\") {... */\n  pop\n  pop\n    /* \"contracts/ERC4626Vault.sol\":297:3524  contract ERC4626Vault is ERC20, ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"#utility.yul\":88:205   */\ntag_15:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_17:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_18:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_47\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_17\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_19:\n    /* \"#utility.yul\":641:665   */\n  tag_49\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_50:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_20:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_52\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_55\n  tag_15\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":949:1068   */\ntag_54:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_56\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_57\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_20\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_21:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_22:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_23:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_24:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_62:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2065:2149   */\ntag_63:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_25:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_26:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_27:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_28:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_69\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_27\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2780:2819   */\n  tag_70\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_29:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_30:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_31:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_74\n    /* \"#utility.yul\":3169:3203   */\n  tag_75\n    /* \"#utility.yul\":3178:3202   */\n  tag_76\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_29\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3169:3203   */\n  tag_30\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3151:3204   */\n  tag_29\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_32:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_33:\n    /* \"#utility.yul\":3407:3446   */\n  tag_79\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_31\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3468:3559   */\n  tag_80\n    /* \"#utility.yul\":3517:3558   */\n  tag_81\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_28\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_34:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_35:\n    /* \"#utility.yul\":3728:3760   */\n  tag_84\n  tag_34\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3769:3834   */\n  tag_85\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_33\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_36:\n    /* \"#utility.yul\":3906:4026   */\ntag_87:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_90\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_35\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_37:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_93\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_25\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4257:4286   */\n  tag_94\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_26\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_95:\n    /* \"#utility.yul\":4484:4564   */\n  tag_96\n    /* \"#utility.yul\":4540:4562   */\n  tag_97\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_26\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_36\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_92:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_38:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_39:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_100\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_38\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_40:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_102\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_39\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_9:\n    /* \"#utility.yul\":5301:5338   */\n  tag_104\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_21\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_106\n  tag_22\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5389:5445   */\ntag_105:\n    /* \"#utility.yul\":5469:5507   */\n  tag_107\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_24\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5554:5621   */\n  tag_108\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_37\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_110\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_111:\n    /* \"#utility.yul\":6495:6562   */\n  tag_112\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_40\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_109)\n    /* \"#utility.yul\":5716:6334   */\ntag_110:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_113\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_25\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_114:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_118\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_39\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_117:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_109:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC4626Vault.sol\":297:3524  contract ERC4626Vault is ERC20, ReentrancyGuard {... */\ntag_13:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xa28835ba3c54770eeca06aee201050aa6ab9853d25ff061db7a5d5c64dba92c9\")\n  0x00\n  assignImmutable(\"0x1a3bd91ca38d55aad30794f24b2d314f16615510cf4a23e04e9b6a3273ecd813\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC4626Vault.sol\":297:3524  contract ERC4626Vault is ERC20, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa6e61855\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x0dfe1681\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01e1d114\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x02d2cec4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC4626Vault.sol\":2631:2776  function totalAssets() public view returns (uint256 total0, uint256 total1) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC4626Vault.sol\":490:517  uint256 public totalAssets1 */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC4626Vault.sol\":384:414  IERC20 public immutable token0 */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC4626Vault.sol\":1776:2560  function withdraw(uint256 shares) external nonReentrant returns (uint256 amount0, uint256 amount1) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC4626Vault.sol\":457:484  uint256 public totalAssets0 */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC4626Vault.sol\":420:450  IERC20 public immutable token1 */\n    tag_16:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC4626Vault.sol\":764:1720  function deposit(uint256 amount0, uint256 amount1) external nonReentrant returns (uint256 shares) {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC4626Vault.sol\":2631:2776  function totalAssets() public view returns (uint256 total0, uint256 total1) {... */\n    tag_23:\n        /* \"contracts/ERC4626Vault.sol\":2675:2689  uint256 total0 */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":2691:2705  uint256 total1 */\n      dup1\n        /* \"contracts/ERC4626Vault.sol\":2726:2738  totalAssets0 */\n      sload(0x06)\n        /* \"contracts/ERC4626Vault.sol\":2717:2738  total0 = totalAssets0 */\n      swap2\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2757:2769  totalAssets1 */\n      sload(0x07)\n        /* \"contracts/ERC4626Vault.sol\":2748:2769  total1 = totalAssets1 */\n      swap1\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2631:2776  function totalAssets() public view returns (uint256 total0, uint256 total1) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/ERC4626Vault.sol\":490:517  uint256 public totalAssets1 */\n    tag_27:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC4626Vault.sol\":384:414  IERC20 public immutable token0 */\n    tag_41:\n      immutable(\"0x1a3bd91ca38d55aad30794f24b2d314f16615510cf4a23e04e9b6a3273ecd813\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC4626Vault.sol\":1776:2560  function withdraw(uint256 shares) external nonReentrant returns (uint256 amount0, uint256 amount1) {... */\n    tag_55:\n        /* \"contracts/ERC4626Vault.sol\":1841:1856  uint256 amount0 */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":1858:1873  uint256 amount1 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_110:\n        /* \"contracts/ERC4626Vault.sol\":1902:1903  0 */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":1893:1899  shares */\n      dup4\n        /* \"contracts/ERC4626Vault.sol\":1893:1903  shares > 0 */\n      gt\n        /* \"contracts/ERC4626Vault.sol\":1885:1928  require(shares > 0, \"Invalid share amount\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/ERC4626Vault.sol\":2021:2035  uint256 supply */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":2038:2051  totalSupply() */\n      tag_116\n        /* \"contracts/ERC4626Vault.sol\":2038:2049  totalSupply */\n      tag_45\n        /* \"contracts/ERC4626Vault.sol\":2038:2051  totalSupply() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/ERC4626Vault.sol\":2021:2051  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2097:2103  supply */\n      dup1\n        /* \"contracts/ERC4626Vault.sol\":2081:2093  totalAssets0 */\n      sload(0x06)\n        /* \"contracts/ERC4626Vault.sol\":2072:2078  shares */\n      dup6\n        /* \"contracts/ERC4626Vault.sol\":2072:2093  shares * totalAssets0 */\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"contracts/ERC4626Vault.sol\":2071:2103  (shares * totalAssets0) / supply */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/ERC4626Vault.sol\":2061:2103  amount0 = (shares * totalAssets0) / supply */\n      swap3\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2149:2155  supply */\n      dup1\n        /* \"contracts/ERC4626Vault.sol\":2133:2145  totalAssets1 */\n      sload(0x07)\n        /* \"contracts/ERC4626Vault.sol\":2124:2130  shares */\n      dup6\n        /* \"contracts/ERC4626Vault.sol\":2124:2145  shares * totalAssets1 */\n      tag_121\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_121:\n        /* \"contracts/ERC4626Vault.sol\":2123:2155  (shares * totalAssets1) / supply */\n      tag_122\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC4626Vault.sol\":2113:2155  amount1 = (shares * totalAssets1) / supply */\n      swap2\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2200:2225  _burn(msg.sender, shares) */\n      tag_123\n        /* \"contracts/ERC4626Vault.sol\":2206:2216  msg.sender */\n      caller\n        /* \"contracts/ERC4626Vault.sol\":2218:2224  shares */\n      dup6\n        /* \"contracts/ERC4626Vault.sol\":2200:2205  _burn */\n      tag_124\n        /* \"contracts/ERC4626Vault.sol\":2200:2225  _burn(msg.sender, shares) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/ERC4626Vault.sol\":2291:2298  amount0 */\n      dup3\n        /* \"contracts/ERC4626Vault.sol\":2275:2287  totalAssets0 */\n      0x06\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":2275:2298  totalAssets0 -= amount0 */\n      dup3\n      dup3\n      sload\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2324:2331  amount1 */\n      dup2\n        /* \"contracts/ERC4626Vault.sol\":2308:2320  totalAssets1 */\n      0x07\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":2308:2331  totalAssets1 -= amount1 */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_127:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2401:2441  token0.safeTransfer(msg.sender, amount0) */\n      tag_128\n        /* \"contracts/ERC4626Vault.sol\":2421:2431  msg.sender */\n      caller\n        /* \"contracts/ERC4626Vault.sol\":2433:2440  amount0 */\n      dup5\n        /* \"contracts/ERC4626Vault.sol\":2401:2407  token0 */\n      immutable(\"0x1a3bd91ca38d55aad30794f24b2d314f16615510cf4a23e04e9b6a3273ecd813\")\n        /* \"contracts/ERC4626Vault.sol\":2401:2420  token0.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_129\n      swap1\n        /* \"contracts/ERC4626Vault.sol\":2401:2441  token0.safeTransfer(msg.sender, amount0) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"contracts/ERC4626Vault.sol\":2451:2491  token1.safeTransfer(msg.sender, amount1) */\n      tag_130\n        /* \"contracts/ERC4626Vault.sol\":2471:2481  msg.sender */\n      caller\n        /* \"contracts/ERC4626Vault.sol\":2483:2490  amount1 */\n      dup4\n        /* \"contracts/ERC4626Vault.sol\":2451:2457  token1 */\n      immutable(\"0xa28835ba3c54770eeca06aee201050aa6ab9853d25ff061db7a5d5c64dba92c9\")\n        /* \"contracts/ERC4626Vault.sol\":2451:2470  token1.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_129\n      swap1\n        /* \"contracts/ERC4626Vault.sol\":2451:2491  token1.safeTransfer(msg.sender, amount1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"contracts/ERC4626Vault.sol\":2516:2526  msg.sender */\n      caller\n        /* \"contracts/ERC4626Vault.sol\":2507:2553  Withdraw(msg.sender, shares, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca94\n        /* \"contracts/ERC4626Vault.sol\":2528:2534  shares */\n      dup6\n        /* \"contracts/ERC4626Vault.sol\":2536:2543  amount0 */\n      dup6\n        /* \"contracts/ERC4626Vault.sol\":2545:2552  amount1 */\n      dup6\n        /* \"contracts/ERC4626Vault.sol\":2507:2553  Withdraw(msg.sender, shares, amount0, amount1) */\n      mload(0x40)\n      tag_131\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ERC4626Vault.sol\":1875:2560  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/ERC4626Vault.sol\":1776:2560  function withdraw(uint256 shares) external nonReentrant returns (uint256 amount0, uint256 amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_92\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_92\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC4626Vault.sol\":457:484  uint256 public totalAssets0 */\n    tag_70:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC4626Vault.sol\":420:450  IERC20 public immutable token1 */\n    tag_77:\n      immutable(\"0xa28835ba3c54770eeca06aee201050aa6ab9853d25ff061db7a5d5c64dba92c9\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC4626Vault.sol\":764:1720  function deposit(uint256 amount0, uint256 amount1) external nonReentrant returns (uint256 shares) {... */\n    tag_87:\n        /* \"contracts/ERC4626Vault.sol\":846:860  uint256 shares */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_148\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/ERC4626Vault.sol\":890:891  0 */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":880:887  amount0 */\n      dup4\n        /* \"contracts/ERC4626Vault.sol\":880:891  amount0 > 0 */\n      gt\n        /* \"contracts/ERC4626Vault.sol\":880:906  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n        /* \"contracts/ERC4626Vault.sol\":905:906  0 */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":895:902  amount1 */\n      dup3\n        /* \"contracts/ERC4626Vault.sol\":895:906  amount1 > 0 */\n      gt\n        /* \"contracts/ERC4626Vault.sol\":880:906  amount0 > 0 && amount1 > 0 */\n    tag_150:\n        /* \"contracts/ERC4626Vault.sol\":872:926  require(amount0 > 0 && amount1 > 0, \"Invalid amounts\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/ERC4626Vault.sol\":998:1057  token0.safeTransferFrom(msg.sender, address(this), amount0) */\n      tag_154\n        /* \"contracts/ERC4626Vault.sol\":1022:1032  msg.sender */\n      caller\n        /* \"contracts/ERC4626Vault.sol\":1042:1046  this */\n      address\n        /* \"contracts/ERC4626Vault.sol\":1049:1056  amount0 */\n      dup6\n        /* \"contracts/ERC4626Vault.sol\":998:1004  token0 */\n      immutable(\"0x1a3bd91ca38d55aad30794f24b2d314f16615510cf4a23e04e9b6a3273ecd813\")\n        /* \"contracts/ERC4626Vault.sol\":998:1021  token0.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_155\n      swap1\n        /* \"contracts/ERC4626Vault.sol\":998:1057  token0.safeTransferFrom(msg.sender, address(this), amount0) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/ERC4626Vault.sol\":1067:1126  token1.safeTransferFrom(msg.sender, address(this), amount1) */\n      tag_156\n        /* \"contracts/ERC4626Vault.sol\":1091:1101  msg.sender */\n      caller\n        /* \"contracts/ERC4626Vault.sol\":1111:1115  this */\n      address\n        /* \"contracts/ERC4626Vault.sol\":1118:1125  amount1 */\n      dup5\n        /* \"contracts/ERC4626Vault.sol\":1067:1073  token1 */\n      immutable(\"0xa28835ba3c54770eeca06aee201050aa6ab9853d25ff061db7a5d5c64dba92c9\")\n        /* \"contracts/ERC4626Vault.sol\":1067:1090  token1.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_155\n      swap1\n        /* \"contracts/ERC4626Vault.sol\":1067:1126  token1.safeTransferFrom(msg.sender, address(this), amount1) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/ERC4626Vault.sol\":1232:1233  0 */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":1215:1228  totalSupply() */\n      tag_157\n        /* \"contracts/ERC4626Vault.sol\":1215:1226  totalSupply */\n      tag_45\n        /* \"contracts/ERC4626Vault.sol\":1215:1228  totalSupply() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/ERC4626Vault.sol\":1215:1233  totalSupply() == 0 */\n      sub\n        /* \"contracts/ERC4626Vault.sol\":1211:1465  if (totalSupply() == 0) {... */\n      tag_158\n      jumpi\n        /* \"contracts/ERC4626Vault.sol\":1258:1281  sqrt(amount0 * amount1) */\n      tag_159\n        /* \"contracts/ERC4626Vault.sol\":1273:1280  amount1 */\n      dup3\n        /* \"contracts/ERC4626Vault.sol\":1263:1270  amount0 */\n      dup5\n        /* \"contracts/ERC4626Vault.sol\":1263:1280  amount0 * amount1 */\n      tag_160\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_160:\n        /* \"contracts/ERC4626Vault.sol\":1258:1262  sqrt */\n      tag_161\n        /* \"contracts/ERC4626Vault.sol\":1258:1281  sqrt(amount0 * amount1) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/ERC4626Vault.sol\":1249:1281  shares = sqrt(amount0 * amount1) */\n      swap1\n      pop\n        /* \"contracts/ERC4626Vault.sol\":1211:1465  if (totalSupply() == 0) {... */\n      jump(tag_162)\n    tag_158:\n        /* \"contracts/ERC4626Vault.sol\":1321:1454  min(... */\n      tag_163\n        /* \"contracts/ERC4626Vault.sol\":1370:1382  totalAssets0 */\n      sload(0x06)\n        /* \"contracts/ERC4626Vault.sol\":1353:1366  totalSupply() */\n      tag_164\n        /* \"contracts/ERC4626Vault.sol\":1353:1364  totalSupply */\n      tag_45\n        /* \"contracts/ERC4626Vault.sol\":1353:1366  totalSupply() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/ERC4626Vault.sol\":1343:1350  amount0 */\n      dup6\n        /* \"contracts/ERC4626Vault.sol\":1343:1366  amount0 * totalSupply() */\n      tag_165\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_165:\n        /* \"contracts/ERC4626Vault.sol\":1342:1382  (amount0 * totalSupply()) / totalAssets0 */\n      tag_166\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_166:\n        /* \"contracts/ERC4626Vault.sol\":1428:1440  totalAssets1 */\n      sload(0x07)\n        /* \"contracts/ERC4626Vault.sol\":1411:1424  totalSupply() */\n      tag_167\n        /* \"contracts/ERC4626Vault.sol\":1411:1422  totalSupply */\n      tag_45\n        /* \"contracts/ERC4626Vault.sol\":1411:1424  totalSupply() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/ERC4626Vault.sol\":1401:1408  amount1 */\n      dup6\n        /* \"contracts/ERC4626Vault.sol\":1401:1424  amount1 * totalSupply() */\n      tag_168\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_168:\n        /* \"contracts/ERC4626Vault.sol\":1400:1440  (amount1 * totalSupply()) / totalAssets1 */\n      tag_169\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_169:\n        /* \"contracts/ERC4626Vault.sol\":1321:1324  min */\n      tag_170\n        /* \"contracts/ERC4626Vault.sol\":1321:1454  min(... */\n      jump\t// in\n    tag_163:\n        /* \"contracts/ERC4626Vault.sol\":1312:1454  shares = min(... */\n      swap1\n      pop\n        /* \"contracts/ERC4626Vault.sol\":1211:1465  if (totalSupply() == 0) {... */\n    tag_162:\n        /* \"contracts/ERC4626Vault.sol\":1530:1537  amount0 */\n      dup3\n        /* \"contracts/ERC4626Vault.sol\":1514:1526  totalAssets0 */\n      0x06\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":1514:1537  totalAssets0 += amount0 */\n      dup3\n      dup3\n      sload\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC4626Vault.sol\":1563:1570  amount1 */\n      dup2\n        /* \"contracts/ERC4626Vault.sol\":1547:1559  totalAssets1 */\n      0x07\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":1547:1570  totalAssets1 += amount1 */\n      dup3\n      dup3\n      sload\n      tag_173\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_173:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC4626Vault.sol\":1627:1652  _mint(msg.sender, shares) */\n      tag_174\n        /* \"contracts/ERC4626Vault.sol\":1633:1643  msg.sender */\n      caller\n        /* \"contracts/ERC4626Vault.sol\":1645:1651  shares */\n      dup3\n        /* \"contracts/ERC4626Vault.sol\":1627:1632  _mint */\n      tag_175\n        /* \"contracts/ERC4626Vault.sol\":1627:1652  _mint(msg.sender, shares) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/ERC4626Vault.sol\":1676:1686  msg.sender */\n      caller\n        /* \"contracts/ERC4626Vault.sol\":1668:1713  Deposit(msg.sender, amount0, amount1, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e\n        /* \"contracts/ERC4626Vault.sol\":1688:1695  amount0 */\n      dup5\n        /* \"contracts/ERC4626Vault.sol\":1697:1704  amount1 */\n      dup5\n        /* \"contracts/ERC4626Vault.sol\":1706:1712  shares */\n      dup5\n        /* \"contracts/ERC4626Vault.sol\":1668:1713  Deposit(msg.sender, amount0, amount1, shares) */\n      mload(0x40)\n      tag_176\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_177\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/ERC4626Vault.sol\":764:1720  function deposit(uint256 amount0, uint256 amount1) external nonReentrant returns (uint256 shares) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x05\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_205\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x05\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_211\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC4626Vault.sol\":2856:3165  function sqrt(uint y) private pure returns (uint z) {... */\n    tag_161:\n        /* \"contracts/ERC4626Vault.sol\":2900:2906  uint z */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":2926:2927  3 */\n      0x03\n        /* \"contracts/ERC4626Vault.sol\":2922:2923  y */\n      dup3\n        /* \"contracts/ERC4626Vault.sol\":2922:2927  y > 3 */\n      gt\n        /* \"contracts/ERC4626Vault.sol\":2918:3141  if (y > 3) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/ERC4626Vault.sol\":2947:2948  y */\n      dup2\n        /* \"contracts/ERC4626Vault.sol\":2943:2948  z = y */\n      swap1\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2962:2968  uint x */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":2979:2980  1 */\n      0x01\n        /* \"contracts/ERC4626Vault.sol\":2975:2976  2 */\n      0x02\n        /* \"contracts/ERC4626Vault.sol\":2971:2972  y */\n      dup5\n        /* \"contracts/ERC4626Vault.sol\":2971:2976  y / 2 */\n      tag_215\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_215:\n        /* \"contracts/ERC4626Vault.sol\":2971:2980  y / 2 + 1 */\n      tag_216\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_216:\n        /* \"contracts/ERC4626Vault.sol\":2962:2980  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2994:3083  while (x < z) {... */\n    tag_217:\n        /* \"contracts/ERC4626Vault.sol\":3005:3006  z */\n      dup2\n        /* \"contracts/ERC4626Vault.sol\":3001:3002  x */\n      dup2\n        /* \"contracts/ERC4626Vault.sol\":3001:3006  x < z */\n      lt\n        /* \"contracts/ERC4626Vault.sol\":2994:3083  while (x < z) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"contracts/ERC4626Vault.sol\":3030:3031  x */\n      dup1\n        /* \"contracts/ERC4626Vault.sol\":3026:3031  z = x */\n      swap2\n      pop\n        /* \"contracts/ERC4626Vault.sol\":3067:3068  2 */\n      0x02\n        /* \"contracts/ERC4626Vault.sol\":3062:3063  x */\n      dup2\n        /* \"contracts/ERC4626Vault.sol\":3058:3059  x */\n      dup3\n        /* \"contracts/ERC4626Vault.sol\":3054:3055  y */\n      dup6\n        /* \"contracts/ERC4626Vault.sol\":3054:3059  y / x */\n      tag_219\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_219:\n        /* \"contracts/ERC4626Vault.sol\":3054:3063  y / x + x */\n      tag_220\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_220:\n        /* \"contracts/ERC4626Vault.sol\":3053:3068  (y / x + x) / 2 */\n      tag_221\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_221:\n        /* \"contracts/ERC4626Vault.sol\":3049:3068  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2994:3083  while (x < z) {... */\n      jump(tag_217)\n    tag_218:\n        /* \"contracts/ERC4626Vault.sol\":2929:3093  {... */\n      pop\n        /* \"contracts/ERC4626Vault.sol\":2918:3141  if (y > 3) {... */\n      jump(tag_222)\n    tag_214:\n        /* \"contracts/ERC4626Vault.sol\":3108:3109  0 */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":3103:3104  y */\n      dup3\n        /* \"contracts/ERC4626Vault.sol\":3103:3109  y != 0 */\n      eq\n        /* \"contracts/ERC4626Vault.sol\":3099:3141  if (y != 0) {... */\n      tag_223\n      jumpi\n        /* \"contracts/ERC4626Vault.sol\":3129:3130  1 */\n      0x01\n        /* \"contracts/ERC4626Vault.sol\":3125:3130  z = 1 */\n      swap1\n      pop\n        /* \"contracts/ERC4626Vault.sol\":3099:3141  if (y != 0) {... */\n    tag_223:\n        /* \"contracts/ERC4626Vault.sol\":2918:3141  if (y > 3) {... */\n    tag_222:\n        /* \"contracts/ERC4626Vault.sol\":2856:3165  function sqrt(uint y) private pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC4626Vault.sol\":3244:3338  function min(uint x, uint y) private pure returns (uint) {... */\n    tag_170:\n        /* \"contracts/ERC4626Vault.sol\":3295:3299  uint */\n      0x00\n        /* \"contracts/ERC4626Vault.sol\":3322:3323  y */\n      dup2\n        /* \"contracts/ERC4626Vault.sol\":3318:3319  x */\n      dup4\n        /* \"contracts/ERC4626Vault.sol\":3318:3323  x < y */\n      lt\n        /* \"contracts/ERC4626Vault.sol\":3318:3331  x < y ? x : y */\n      tag_225\n      jumpi\n        /* \"contracts/ERC4626Vault.sol\":3330:3331  y */\n      dup2\n        /* \"contracts/ERC4626Vault.sol\":3318:3331  x < y ? x : y */\n      jump(tag_226)\n    tag_225:\n        /* \"contracts/ERC4626Vault.sol\":3326:3327  x */\n      dup3\n        /* \"contracts/ERC4626Vault.sol\":3318:3331  x < y ? x : y */\n    tag_226:\n        /* \"contracts/ERC4626Vault.sol\":3311:3331  return x < y ? x : y */\n      swap1\n      pop\n        /* \"contracts/ERC4626Vault.sol\":3244:3338  function min(uint x, uint y) private pure returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_237\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_240\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_240:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_241)\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_245)\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_246\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_249\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_250\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_256\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_257\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_261\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_265\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_264)\n    tag_265:\n      0x60\n      swap2\n      pop\n    tag_264:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_266\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_267\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_270\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_272)\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_273\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_268)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_268:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_279:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_280:\n        /* \"#utility.yul\":177:201   */\n      tag_320\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_279\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:546   */\n    tag_25:\n        /* \"#utility.yul\":335:339   */\n      0x00\n        /* \"#utility.yul\":373:375   */\n      0x40\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":358:376   */\n      add\n        /* \"#utility.yul\":350:376   */\n      swap1\n      pop\n        /* \"#utility.yul\":386:457   */\n      tag_322\n        /* \"#utility.yul\":454:455   */\n      0x00\n        /* \"#utility.yul\":443:452   */\n      dup4\n        /* \"#utility.yul\":439:456   */\n      add\n        /* \"#utility.yul\":430:436   */\n      dup6\n        /* \"#utility.yul\":386:457   */\n      tag_280\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":467:539   */\n      tag_323\n        /* \"#utility.yul\":535:537   */\n      0x20\n        /* \"#utility.yul\":524:533   */\n      dup4\n        /* \"#utility.yul\":520:538   */\n      add\n        /* \"#utility.yul\":511:517   */\n      dup5\n        /* \"#utility.yul\":467:539   */\n      tag_280\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":214:546   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:774   */\n    tag_29:\n        /* \"#utility.yul\":645:649   */\n      0x00\n        /* \"#utility.yul\":683:685   */\n      0x20\n        /* \"#utility.yul\":672:681   */\n      dup3\n        /* \"#utility.yul\":668:686   */\n      add\n        /* \"#utility.yul\":660:686   */\n      swap1\n      pop\n        /* \"#utility.yul\":696:767   */\n      tag_325\n        /* \"#utility.yul\":764:765   */\n      0x00\n        /* \"#utility.yul\":753:762   */\n      dup4\n        /* \"#utility.yul\":749:766   */\n      add\n        /* \"#utility.yul\":740:746   */\n      dup5\n        /* \"#utility.yul\":696:767   */\n      tag_280\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":552:774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":780:879   */\n    tag_281:\n        /* \"#utility.yul\":832:838   */\n      0x00\n        /* \"#utility.yul\":866:871   */\n      dup2\n        /* \"#utility.yul\":860:872   */\n      mload\n        /* \"#utility.yul\":850:872   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":885:1054   */\n    tag_282:\n        /* \"#utility.yul\":969:980   */\n      0x00\n        /* \"#utility.yul\":1003:1009   */\n      dup3\n        /* \"#utility.yul\":998:1001   */\n      dup3\n        /* \"#utility.yul\":991:1010   */\n      mstore\n        /* \"#utility.yul\":1043:1047   */\n      0x20\n        /* \"#utility.yul\":1038:1041   */\n      dup3\n        /* \"#utility.yul\":1034:1048   */\n      add\n        /* \"#utility.yul\":1019:1048   */\n      swap1\n      pop\n        /* \"#utility.yul\":885:1054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1060:1199   */\n    tag_283:\n        /* \"#utility.yul\":1149:1155   */\n      dup3\n        /* \"#utility.yul\":1144:1147   */\n      dup2\n        /* \"#utility.yul\":1139:1142   */\n      dup4\n        /* \"#utility.yul\":1133:1156   */\n      mcopy\n        /* \"#utility.yul\":1190:1191   */\n      0x00\n        /* \"#utility.yul\":1181:1187   */\n      dup4\n        /* \"#utility.yul\":1176:1179   */\n      dup4\n        /* \"#utility.yul\":1172:1188   */\n      add\n        /* \"#utility.yul\":1165:1192   */\n      mstore\n        /* \"#utility.yul\":1060:1199   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1205:1307   */\n    tag_284:\n        /* \"#utility.yul\":1246:1252   */\n      0x00\n        /* \"#utility.yul\":1297:1299   */\n      0x1f\n        /* \"#utility.yul\":1293:1300   */\n      not\n        /* \"#utility.yul\":1288:1290   */\n      0x1f\n        /* \"#utility.yul\":1281:1286   */\n      dup4\n        /* \"#utility.yul\":1277:1291   */\n      add\n        /* \"#utility.yul\":1273:1301   */\n      and\n        /* \"#utility.yul\":1263:1301   */\n      swap1\n      pop\n        /* \"#utility.yul\":1205:1307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1313:1690   */\n    tag_285:\n        /* \"#utility.yul\":1401:1404   */\n      0x00\n        /* \"#utility.yul\":1429:1468   */\n      tag_331\n        /* \"#utility.yul\":1462:1467   */\n      dup3\n        /* \"#utility.yul\":1429:1468   */\n      tag_281\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1484:1555   */\n      tag_332\n        /* \"#utility.yul\":1548:1554   */\n      dup2\n        /* \"#utility.yul\":1543:1546   */\n      dup6\n        /* \"#utility.yul\":1484:1555   */\n      tag_282\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1477:1555   */\n      swap4\n      pop\n        /* \"#utility.yul\":1564:1629   */\n      tag_333\n        /* \"#utility.yul\":1622:1628   */\n      dup2\n        /* \"#utility.yul\":1617:1620   */\n      dup6\n        /* \"#utility.yul\":1610:1614   */\n      0x20\n        /* \"#utility.yul\":1603:1608   */\n      dup7\n        /* \"#utility.yul\":1599:1615   */\n      add\n        /* \"#utility.yul\":1564:1629   */\n      tag_283\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1654:1683   */\n      tag_334\n        /* \"#utility.yul\":1676:1682   */\n      dup2\n        /* \"#utility.yul\":1654:1683   */\n      tag_284\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1649:1652   */\n      dup5\n        /* \"#utility.yul\":1645:1684   */\n      add\n        /* \"#utility.yul\":1638:1684   */\n      swap2\n      pop\n        /* \"#utility.yul\":1405:1690   */\n      pop\n        /* \"#utility.yul\":1313:1690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1696:2009   */\n    tag_33:\n        /* \"#utility.yul\":1809:1813   */\n      0x00\n        /* \"#utility.yul\":1847:1849   */\n      0x20\n        /* \"#utility.yul\":1836:1845   */\n      dup3\n        /* \"#utility.yul\":1832:1850   */\n      add\n        /* \"#utility.yul\":1824:1850   */\n      swap1\n      pop\n        /* \"#utility.yul\":1896:1905   */\n      dup2\n        /* \"#utility.yul\":1890:1894   */\n      dup2\n        /* \"#utility.yul\":1886:1906   */\n      sub\n        /* \"#utility.yul\":1882:1883   */\n      0x00\n        /* \"#utility.yul\":1871:1880   */\n      dup4\n        /* \"#utility.yul\":1867:1884   */\n      add\n        /* \"#utility.yul\":1860:1907   */\n      mstore\n        /* \"#utility.yul\":1924:2002   */\n      tag_336\n        /* \"#utility.yul\":1997:2001   */\n      dup2\n        /* \"#utility.yul\":1988:1994   */\n      dup5\n        /* \"#utility.yul\":1924:2002   */\n      tag_285\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1916:2002   */\n      swap1\n      pop\n        /* \"#utility.yul\":1696:2009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2096:2213   */\n    tag_287:\n        /* \"#utility.yul\":2205:2206   */\n      0x00\n        /* \"#utility.yul\":2202:2203   */\n      dup1\n        /* \"#utility.yul\":2195:2207   */\n      revert\n        /* \"#utility.yul\":2342:2468   */\n    tag_289:\n        /* \"#utility.yul\":2379:2386   */\n      0x00\n        /* \"#utility.yul\":2419:2461   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2412:2417   */\n      dup3\n        /* \"#utility.yul\":2408:2462   */\n      and\n        /* \"#utility.yul\":2397:2462   */\n      swap1\n      pop\n        /* \"#utility.yul\":2342:2468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2474:2570   */\n    tag_290:\n        /* \"#utility.yul\":2511:2518   */\n      0x00\n        /* \"#utility.yul\":2540:2564   */\n      tag_342\n        /* \"#utility.yul\":2558:2563   */\n      dup3\n        /* \"#utility.yul\":2540:2564   */\n      tag_289\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2529:2564   */\n      swap1\n      pop\n        /* \"#utility.yul\":2474:2570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2576:2698   */\n    tag_291:\n        /* \"#utility.yul\":2649:2673   */\n      tag_344\n        /* \"#utility.yul\":2667:2672   */\n      dup2\n        /* \"#utility.yul\":2649:2673   */\n      tag_290\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2642:2647   */\n      dup2\n        /* \"#utility.yul\":2639:2674   */\n      eq\n        /* \"#utility.yul\":2629:2692   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":2688:2689   */\n      0x00\n        /* \"#utility.yul\":2685:2686   */\n      dup1\n        /* \"#utility.yul\":2678:2690   */\n      revert\n        /* \"#utility.yul\":2629:2692   */\n    tag_345:\n        /* \"#utility.yul\":2576:2698   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2704:2843   */\n    tag_292:\n        /* \"#utility.yul\":2750:2755   */\n      0x00\n        /* \"#utility.yul\":2788:2794   */\n      dup2\n        /* \"#utility.yul\":2775:2795   */\n      calldataload\n        /* \"#utility.yul\":2766:2795   */\n      swap1\n      pop\n        /* \"#utility.yul\":2804:2837   */\n      tag_347\n        /* \"#utility.yul\":2831:2836   */\n      dup2\n        /* \"#utility.yul\":2804:2837   */\n      tag_291\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2704:2843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2849:2971   */\n    tag_293:\n        /* \"#utility.yul\":2922:2946   */\n      tag_349\n        /* \"#utility.yul\":2940:2945   */\n      dup2\n        /* \"#utility.yul\":2922:2946   */\n      tag_279\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2915:2920   */\n      dup2\n        /* \"#utility.yul\":2912:2947   */\n      eq\n        /* \"#utility.yul\":2902:2965   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":2961:2962   */\n      0x00\n        /* \"#utility.yul\":2958:2959   */\n      dup1\n        /* \"#utility.yul\":2951:2963   */\n      revert\n        /* \"#utility.yul\":2902:2965   */\n    tag_350:\n        /* \"#utility.yul\":2849:2971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2977:3116   */\n    tag_294:\n        /* \"#utility.yul\":3023:3028   */\n      0x00\n        /* \"#utility.yul\":3061:3067   */\n      dup2\n        /* \"#utility.yul\":3048:3068   */\n      calldataload\n        /* \"#utility.yul\":3039:3068   */\n      swap1\n      pop\n        /* \"#utility.yul\":3077:3110   */\n      tag_352\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3077:3110   */\n      tag_293\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2977:3116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3122:3596   */\n    tag_36:\n        /* \"#utility.yul\":3190:3196   */\n      0x00\n        /* \"#utility.yul\":3198:3204   */\n      dup1\n        /* \"#utility.yul\":3247:3249   */\n      0x40\n        /* \"#utility.yul\":3235:3244   */\n      dup4\n        /* \"#utility.yul\":3226:3233   */\n      dup6\n        /* \"#utility.yul\":3222:3245   */\n      sub\n        /* \"#utility.yul\":3218:3250   */\n      slt\n        /* \"#utility.yul\":3215:3334   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":3253:3332   */\n      tag_355\n      tag_287\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3215:3334   */\n    tag_354:\n        /* \"#utility.yul\":3373:3374   */\n      0x00\n        /* \"#utility.yul\":3398:3451   */\n      tag_356\n        /* \"#utility.yul\":3443:3450   */\n      dup6\n        /* \"#utility.yul\":3434:3440   */\n      dup3\n        /* \"#utility.yul\":3423:3432   */\n      dup7\n        /* \"#utility.yul\":3419:3441   */\n      add\n        /* \"#utility.yul\":3398:3451   */\n      tag_292\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3388:3451   */\n      swap3\n      pop\n        /* \"#utility.yul\":3344:3461   */\n      pop\n        /* \"#utility.yul\":3500:3502   */\n      0x20\n        /* \"#utility.yul\":3526:3579   */\n      tag_357\n        /* \"#utility.yul\":3571:3578   */\n      dup6\n        /* \"#utility.yul\":3562:3568   */\n      dup3\n        /* \"#utility.yul\":3551:3560   */\n      dup7\n        /* \"#utility.yul\":3547:3569   */\n      add\n        /* \"#utility.yul\":3526:3579   */\n      tag_294\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3516:3579   */\n      swap2\n      pop\n        /* \"#utility.yul\":3471:3589   */\n      pop\n        /* \"#utility.yul\":3122:3596   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3602:3692   */\n    tag_295:\n        /* \"#utility.yul\":3636:3643   */\n      0x00\n        /* \"#utility.yul\":3679:3684   */\n      dup2\n        /* \"#utility.yul\":3672:3685   */\n      iszero\n        /* \"#utility.yul\":3665:3686   */\n      iszero\n        /* \"#utility.yul\":3654:3686   */\n      swap1\n      pop\n        /* \"#utility.yul\":3602:3692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3698:3807   */\n    tag_296:\n        /* \"#utility.yul\":3779:3800   */\n      tag_360\n        /* \"#utility.yul\":3794:3799   */\n      dup2\n        /* \"#utility.yul\":3779:3800   */\n      tag_295\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3774:3777   */\n      dup3\n        /* \"#utility.yul\":3767:3801   */\n      mstore\n        /* \"#utility.yul\":3698:3807   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3813:4023   */\n    tag_39:\n        /* \"#utility.yul\":3900:3904   */\n      0x00\n        /* \"#utility.yul\":3938:3940   */\n      0x20\n        /* \"#utility.yul\":3927:3936   */\n      dup3\n        /* \"#utility.yul\":3923:3941   */\n      add\n        /* \"#utility.yul\":3915:3941   */\n      swap1\n      pop\n        /* \"#utility.yul\":3951:4016   */\n      tag_362\n        /* \"#utility.yul\":4013:4014   */\n      0x00\n        /* \"#utility.yul\":4002:4011   */\n      dup4\n        /* \"#utility.yul\":3998:4015   */\n      add\n        /* \"#utility.yul\":3989:3995   */\n      dup5\n        /* \"#utility.yul\":3951:4016   */\n      tag_296\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3813:4023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4029:4089   */\n    tag_297:\n        /* \"#utility.yul\":4057:4060   */\n      0x00\n        /* \"#utility.yul\":4078:4083   */\n      dup2\n        /* \"#utility.yul\":4071:4083   */\n      swap1\n      pop\n        /* \"#utility.yul\":4029:4089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4095:4237   */\n    tag_298:\n        /* \"#utility.yul\":4145:4154   */\n      0x00\n        /* \"#utility.yul\":4178:4231   */\n      tag_365\n        /* \"#utility.yul\":4196:4230   */\n      tag_366\n        /* \"#utility.yul\":4205:4229   */\n      tag_367\n        /* \"#utility.yul\":4223:4228   */\n      dup5\n        /* \"#utility.yul\":4205:4229   */\n      tag_289\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4196:4230   */\n      tag_297\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4178:4231   */\n      tag_289\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4165:4231   */\n      swap1\n      pop\n        /* \"#utility.yul\":4095:4237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4243:4369   */\n    tag_299:\n        /* \"#utility.yul\":4293:4302   */\n      0x00\n        /* \"#utility.yul\":4326:4363   */\n      tag_369\n        /* \"#utility.yul\":4357:4362   */\n      dup3\n        /* \"#utility.yul\":4326:4363   */\n      tag_298\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4313:4363   */\n      swap1\n      pop\n        /* \"#utility.yul\":4243:4369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4375:4515   */\n    tag_300:\n        /* \"#utility.yul\":4439:4448   */\n      0x00\n        /* \"#utility.yul\":4472:4509   */\n      tag_371\n        /* \"#utility.yul\":4503:4508   */\n      dup3\n        /* \"#utility.yul\":4472:4509   */\n      tag_299\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4459:4509   */\n      swap1\n      pop\n        /* \"#utility.yul\":4375:4515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4521:4680   */\n    tag_301:\n        /* \"#utility.yul\":4622:4673   */\n      tag_373\n        /* \"#utility.yul\":4667:4672   */\n      dup2\n        /* \"#utility.yul\":4622:4673   */\n      tag_300\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4617:4620   */\n      dup3\n        /* \"#utility.yul\":4610:4674   */\n      mstore\n        /* \"#utility.yul\":4521:4680   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4686:4936   */\n    tag_43:\n        /* \"#utility.yul\":4793:4797   */\n      0x00\n        /* \"#utility.yul\":4831:4833   */\n      0x20\n        /* \"#utility.yul\":4820:4829   */\n      dup3\n        /* \"#utility.yul\":4816:4834   */\n      add\n        /* \"#utility.yul\":4808:4834   */\n      swap1\n      pop\n        /* \"#utility.yul\":4844:4929   */\n      tag_375\n        /* \"#utility.yul\":4926:4927   */\n      0x00\n        /* \"#utility.yul\":4915:4924   */\n      dup4\n        /* \"#utility.yul\":4911:4928   */\n      add\n        /* \"#utility.yul\":4902:4908   */\n      dup5\n        /* \"#utility.yul\":4844:4929   */\n      tag_301\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4686:4936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4942:5561   */\n    tag_49:\n        /* \"#utility.yul\":5019:5025   */\n      0x00\n        /* \"#utility.yul\":5027:5033   */\n      dup1\n        /* \"#utility.yul\":5035:5041   */\n      0x00\n        /* \"#utility.yul\":5084:5086   */\n      0x60\n        /* \"#utility.yul\":5072:5081   */\n      dup5\n        /* \"#utility.yul\":5063:5070   */\n      dup7\n        /* \"#utility.yul\":5059:5082   */\n      sub\n        /* \"#utility.yul\":5055:5087   */\n      slt\n        /* \"#utility.yul\":5052:5171   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":5090:5169   */\n      tag_378\n      tag_287\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5052:5171   */\n    tag_377:\n        /* \"#utility.yul\":5210:5211   */\n      0x00\n        /* \"#utility.yul\":5235:5288   */\n      tag_379\n        /* \"#utility.yul\":5280:5287   */\n      dup7\n        /* \"#utility.yul\":5271:5277   */\n      dup3\n        /* \"#utility.yul\":5260:5269   */\n      dup8\n        /* \"#utility.yul\":5256:5278   */\n      add\n        /* \"#utility.yul\":5235:5288   */\n      tag_292\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5225:5288   */\n      swap4\n      pop\n        /* \"#utility.yul\":5181:5298   */\n      pop\n        /* \"#utility.yul\":5337:5339   */\n      0x20\n        /* \"#utility.yul\":5363:5416   */\n      tag_380\n        /* \"#utility.yul\":5408:5415   */\n      dup7\n        /* \"#utility.yul\":5399:5405   */\n      dup3\n        /* \"#utility.yul\":5388:5397   */\n      dup8\n        /* \"#utility.yul\":5384:5406   */\n      add\n        /* \"#utility.yul\":5363:5416   */\n      tag_292\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5353:5416   */\n      swap3\n      pop\n        /* \"#utility.yul\":5308:5426   */\n      pop\n        /* \"#utility.yul\":5465:5467   */\n      0x40\n        /* \"#utility.yul\":5491:5544   */\n      tag_381\n        /* \"#utility.yul\":5536:5543   */\n      dup7\n        /* \"#utility.yul\":5527:5533   */\n      dup3\n        /* \"#utility.yul\":5516:5525   */\n      dup8\n        /* \"#utility.yul\":5512:5534   */\n      add\n        /* \"#utility.yul\":5491:5544   */\n      tag_294\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5481:5544   */\n      swap2\n      pop\n        /* \"#utility.yul\":5436:5554   */\n      pop\n        /* \"#utility.yul\":4942:5561   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5567:5896   */\n    tag_54:\n        /* \"#utility.yul\":5626:5632   */\n      0x00\n        /* \"#utility.yul\":5675:5677   */\n      0x20\n        /* \"#utility.yul\":5663:5672   */\n      dup3\n        /* \"#utility.yul\":5654:5661   */\n      dup5\n        /* \"#utility.yul\":5650:5673   */\n      sub\n        /* \"#utility.yul\":5646:5678   */\n      slt\n        /* \"#utility.yul\":5643:5762   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":5681:5760   */\n      tag_384\n      tag_287\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5643:5762   */\n    tag_383:\n        /* \"#utility.yul\":5801:5802   */\n      0x00\n        /* \"#utility.yul\":5826:5879   */\n      tag_385\n        /* \"#utility.yul\":5871:5878   */\n      dup5\n        /* \"#utility.yul\":5862:5868   */\n      dup3\n        /* \"#utility.yul\":5851:5860   */\n      dup6\n        /* \"#utility.yul\":5847:5869   */\n      add\n        /* \"#utility.yul\":5826:5879   */\n      tag_294\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5816:5879   */\n      swap2\n      pop\n        /* \"#utility.yul\":5772:5889   */\n      pop\n        /* \"#utility.yul\":5567:5896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5902:5988   */\n    tag_302:\n        /* \"#utility.yul\":5937:5944   */\n      0x00\n        /* \"#utility.yul\":5977:5981   */\n      0xff\n        /* \"#utility.yul\":5970:5975   */\n      dup3\n        /* \"#utility.yul\":5966:5982   */\n      and\n        /* \"#utility.yul\":5955:5982   */\n      swap1\n      pop\n        /* \"#utility.yul\":5902:5988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6106   */\n    tag_303:\n        /* \"#utility.yul\":6077:6099   */\n      tag_388\n        /* \"#utility.yul\":6093:6098   */\n      dup2\n        /* \"#utility.yul\":6077:6099   */\n      tag_302\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6072:6075   */\n      dup3\n        /* \"#utility.yul\":6065:6100   */\n      mstore\n        /* \"#utility.yul\":5994:6106   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6112:6326   */\n    tag_60:\n        /* \"#utility.yul\":6201:6205   */\n      0x00\n        /* \"#utility.yul\":6239:6241   */\n      0x20\n        /* \"#utility.yul\":6228:6237   */\n      dup3\n        /* \"#utility.yul\":6224:6242   */\n      add\n        /* \"#utility.yul\":6216:6242   */\n      swap1\n      pop\n        /* \"#utility.yul\":6252:6319   */\n      tag_390\n        /* \"#utility.yul\":6316:6317   */\n      0x00\n        /* \"#utility.yul\":6305:6314   */\n      dup4\n        /* \"#utility.yul\":6301:6318   */\n      add\n        /* \"#utility.yul\":6292:6298   */\n      dup5\n        /* \"#utility.yul\":6252:6319   */\n      tag_303\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6112:6326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6332:6661   */\n    tag_63:\n        /* \"#utility.yul\":6391:6397   */\n      0x00\n        /* \"#utility.yul\":6440:6442   */\n      0x20\n        /* \"#utility.yul\":6428:6437   */\n      dup3\n        /* \"#utility.yul\":6419:6426   */\n      dup5\n        /* \"#utility.yul\":6415:6438   */\n      sub\n        /* \"#utility.yul\":6411:6443   */\n      slt\n        /* \"#utility.yul\":6408:6527   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":6446:6525   */\n      tag_393\n      tag_287\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6408:6527   */\n    tag_392:\n        /* \"#utility.yul\":6566:6567   */\n      0x00\n        /* \"#utility.yul\":6591:6644   */\n      tag_394\n        /* \"#utility.yul\":6636:6643   */\n      dup5\n        /* \"#utility.yul\":6627:6633   */\n      dup3\n        /* \"#utility.yul\":6616:6625   */\n      dup6\n        /* \"#utility.yul\":6612:6634   */\n      add\n        /* \"#utility.yul\":6591:6644   */\n      tag_292\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6581:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6537:6654   */\n      pop\n        /* \"#utility.yul\":6332:6661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6667:7141   */\n    tag_81:\n        /* \"#utility.yul\":6735:6741   */\n      0x00\n        /* \"#utility.yul\":6743:6749   */\n      dup1\n        /* \"#utility.yul\":6792:6794   */\n      0x40\n        /* \"#utility.yul\":6780:6789   */\n      dup4\n        /* \"#utility.yul\":6771:6778   */\n      dup6\n        /* \"#utility.yul\":6767:6790   */\n      sub\n        /* \"#utility.yul\":6763:6795   */\n      slt\n        /* \"#utility.yul\":6760:6879   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":6798:6877   */\n      tag_397\n      tag_287\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6760:6879   */\n    tag_396:\n        /* \"#utility.yul\":6918:6919   */\n      0x00\n        /* \"#utility.yul\":6943:6996   */\n      tag_398\n        /* \"#utility.yul\":6988:6995   */\n      dup6\n        /* \"#utility.yul\":6979:6985   */\n      dup3\n        /* \"#utility.yul\":6968:6977   */\n      dup7\n        /* \"#utility.yul\":6964:6986   */\n      add\n        /* \"#utility.yul\":6943:6996   */\n      tag_292\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6933:6996   */\n      swap3\n      pop\n        /* \"#utility.yul\":6889:7006   */\n      pop\n        /* \"#utility.yul\":7045:7047   */\n      0x20\n        /* \"#utility.yul\":7071:7124   */\n      tag_399\n        /* \"#utility.yul\":7116:7123   */\n      dup6\n        /* \"#utility.yul\":7107:7113   */\n      dup3\n        /* \"#utility.yul\":7096:7105   */\n      dup7\n        /* \"#utility.yul\":7092:7114   */\n      add\n        /* \"#utility.yul\":7071:7124   */\n      tag_292\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7061:7124   */\n      swap2\n      pop\n        /* \"#utility.yul\":7016:7134   */\n      pop\n        /* \"#utility.yul\":6667:7141   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7147:7621   */\n    tag_86:\n        /* \"#utility.yul\":7215:7221   */\n      0x00\n        /* \"#utility.yul\":7223:7229   */\n      dup1\n        /* \"#utility.yul\":7272:7274   */\n      0x40\n        /* \"#utility.yul\":7260:7269   */\n      dup4\n        /* \"#utility.yul\":7251:7258   */\n      dup6\n        /* \"#utility.yul\":7247:7270   */\n      sub\n        /* \"#utility.yul\":7243:7275   */\n      slt\n        /* \"#utility.yul\":7240:7359   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":7278:7357   */\n      tag_402\n      tag_287\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7240:7359   */\n    tag_401:\n        /* \"#utility.yul\":7398:7399   */\n      0x00\n        /* \"#utility.yul\":7423:7476   */\n      tag_403\n        /* \"#utility.yul\":7468:7475   */\n      dup6\n        /* \"#utility.yul\":7459:7465   */\n      dup3\n        /* \"#utility.yul\":7448:7457   */\n      dup7\n        /* \"#utility.yul\":7444:7466   */\n      add\n        /* \"#utility.yul\":7423:7476   */\n      tag_294\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7413:7476   */\n      swap3\n      pop\n        /* \"#utility.yul\":7369:7486   */\n      pop\n        /* \"#utility.yul\":7525:7527   */\n      0x20\n        /* \"#utility.yul\":7551:7604   */\n      tag_404\n        /* \"#utility.yul\":7596:7603   */\n      dup6\n        /* \"#utility.yul\":7587:7593   */\n      dup3\n        /* \"#utility.yul\":7576:7585   */\n      dup7\n        /* \"#utility.yul\":7572:7594   */\n      add\n        /* \"#utility.yul\":7551:7604   */\n      tag_294\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7541:7604   */\n      swap2\n      pop\n        /* \"#utility.yul\":7496:7614   */\n      pop\n        /* \"#utility.yul\":7147:7621   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7627:7807   */\n    tag_304:\n        /* \"#utility.yul\":7675:7752   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7672:7673   */\n      0x00\n        /* \"#utility.yul\":7665:7753   */\n      mstore\n        /* \"#utility.yul\":7772:7776   */\n      0x22\n        /* \"#utility.yul\":7769:7770   */\n      0x04\n        /* \"#utility.yul\":7762:7777   */\n      mstore\n        /* \"#utility.yul\":7796:7800   */\n      0x24\n        /* \"#utility.yul\":7793:7794   */\n      0x00\n        /* \"#utility.yul\":7786:7801   */\n      revert\n        /* \"#utility.yul\":7813:8133   */\n    tag_92:\n        /* \"#utility.yul\":7857:7863   */\n      0x00\n        /* \"#utility.yul\":7894:7895   */\n      0x02\n        /* \"#utility.yul\":7888:7892   */\n      dup3\n        /* \"#utility.yul\":7884:7896   */\n      div\n        /* \"#utility.yul\":7874:7896   */\n      swap1\n      pop\n        /* \"#utility.yul\":7941:7942   */\n      0x01\n        /* \"#utility.yul\":7935:7939   */\n      dup3\n        /* \"#utility.yul\":7931:7943   */\n      and\n        /* \"#utility.yul\":7962:7980   */\n      dup1\n        /* \"#utility.yul\":7952:8033   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":8018:8022   */\n      0x7f\n        /* \"#utility.yul\":8010:8016   */\n      dup3\n        /* \"#utility.yul\":8006:8023   */\n      and\n        /* \"#utility.yul\":7996:8023   */\n      swap2\n      pop\n        /* \"#utility.yul\":7952:8033   */\n    tag_407:\n        /* \"#utility.yul\":8080:8082   */\n      0x20\n        /* \"#utility.yul\":8072:8078   */\n      dup3\n        /* \"#utility.yul\":8069:8083   */\n      lt\n        /* \"#utility.yul\":8049:8067   */\n      dup2\n        /* \"#utility.yul\":8046:8084   */\n      sub\n        /* \"#utility.yul\":8043:8127   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":8099:8117   */\n      tag_409\n      tag_304\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8043:8127   */\n    tag_408:\n        /* \"#utility.yul\":7864:8133   */\n      pop\n        /* \"#utility.yul\":7813:8133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8139:8309   */\n    tag_305:\n        /* \"#utility.yul\":8279:8301   */\n      0x496e76616c696420736861726520616d6f756e74000000000000000000000000\n        /* \"#utility.yul\":8275:8276   */\n      0x00\n        /* \"#utility.yul\":8267:8273   */\n      dup3\n        /* \"#utility.yul\":8263:8277   */\n      add\n        /* \"#utility.yul\":8256:8302   */\n      mstore\n        /* \"#utility.yul\":8139:8309   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8315:8681   */\n    tag_306:\n        /* \"#utility.yul\":8457:8460   */\n      0x00\n        /* \"#utility.yul\":8478:8545   */\n      tag_412\n        /* \"#utility.yul\":8542:8544   */\n      0x14\n        /* \"#utility.yul\":8537:8540   */\n      dup4\n        /* \"#utility.yul\":8478:8545   */\n      tag_282\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8471:8545   */\n      swap2\n      pop\n        /* \"#utility.yul\":8554:8647   */\n      tag_413\n        /* \"#utility.yul\":8643:8646   */\n      dup3\n        /* \"#utility.yul\":8554:8647   */\n      tag_305\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8672:8674   */\n      0x20\n        /* \"#utility.yul\":8667:8670   */\n      dup3\n        /* \"#utility.yul\":8663:8675   */\n      add\n        /* \"#utility.yul\":8656:8675   */\n      swap1\n      pop\n        /* \"#utility.yul\":8315:8681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8687:9106   */\n    tag_115:\n        /* \"#utility.yul\":8853:8857   */\n      0x00\n        /* \"#utility.yul\":8891:8893   */\n      0x20\n        /* \"#utility.yul\":8880:8889   */\n      dup3\n        /* \"#utility.yul\":8876:8894   */\n      add\n        /* \"#utility.yul\":8868:8894   */\n      swap1\n      pop\n        /* \"#utility.yul\":8940:8949   */\n      dup2\n        /* \"#utility.yul\":8934:8938   */\n      dup2\n        /* \"#utility.yul\":8930:8950   */\n      sub\n        /* \"#utility.yul\":8926:8927   */\n      0x00\n        /* \"#utility.yul\":8915:8924   */\n      dup4\n        /* \"#utility.yul\":8911:8928   */\n      add\n        /* \"#utility.yul\":8904:8951   */\n      mstore\n        /* \"#utility.yul\":8968:9099   */\n      tag_415\n        /* \"#utility.yul\":9094:9098   */\n      dup2\n        /* \"#utility.yul\":8968:9099   */\n      tag_306\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8960:9099   */\n      swap1\n      pop\n        /* \"#utility.yul\":8687:9106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9112:9292   */\n    tag_307:\n        /* \"#utility.yul\":9160:9237   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9157:9158   */\n      0x00\n        /* \"#utility.yul\":9150:9238   */\n      mstore\n        /* \"#utility.yul\":9257:9261   */\n      0x11\n        /* \"#utility.yul\":9254:9255   */\n      0x04\n        /* \"#utility.yul\":9247:9262   */\n      mstore\n        /* \"#utility.yul\":9281:9285   */\n      0x24\n        /* \"#utility.yul\":9278:9279   */\n      0x00\n        /* \"#utility.yul\":9271:9286   */\n      revert\n        /* \"#utility.yul\":9298:9708   */\n    tag_118:\n        /* \"#utility.yul\":9338:9345   */\n      0x00\n        /* \"#utility.yul\":9361:9381   */\n      tag_418\n        /* \"#utility.yul\":9379:9380   */\n      dup3\n        /* \"#utility.yul\":9361:9381   */\n      tag_279\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9356:9381   */\n      swap2\n      pop\n        /* \"#utility.yul\":9395:9415   */\n      tag_419\n        /* \"#utility.yul\":9413:9414   */\n      dup4\n        /* \"#utility.yul\":9395:9415   */\n      tag_279\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":9390:9415   */\n      swap3\n      pop\n        /* \"#utility.yul\":9450:9451   */\n      dup3\n        /* \"#utility.yul\":9447:9448   */\n      dup3\n        /* \"#utility.yul\":9443:9452   */\n      mul\n        /* \"#utility.yul\":9472:9502   */\n      tag_420\n        /* \"#utility.yul\":9490:9501   */\n      dup2\n        /* \"#utility.yul\":9472:9502   */\n      tag_279\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9461:9502   */\n      swap2\n      pop\n        /* \"#utility.yul\":9651:9652   */\n      dup3\n        /* \"#utility.yul\":9642:9649   */\n      dup3\n        /* \"#utility.yul\":9638:9653   */\n      div\n        /* \"#utility.yul\":9635:9636   */\n      dup5\n        /* \"#utility.yul\":9632:9654   */\n      eq\n        /* \"#utility.yul\":9612:9613   */\n      dup4\n        /* \"#utility.yul\":9605:9614   */\n      iszero\n        /* \"#utility.yul\":9585:9668   */\n      or\n        /* \"#utility.yul\":9562:9701   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":9681:9699   */\n      tag_422\n      tag_307\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9562:9701   */\n    tag_421:\n        /* \"#utility.yul\":9346:9708   */\n      pop\n        /* \"#utility.yul\":9298:9708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9714:9894   */\n    tag_308:\n        /* \"#utility.yul\":9762:9839   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9759:9760   */\n      0x00\n        /* \"#utility.yul\":9752:9840   */\n      mstore\n        /* \"#utility.yul\":9859:9863   */\n      0x12\n        /* \"#utility.yul\":9856:9857   */\n      0x04\n        /* \"#utility.yul\":9849:9864   */\n      mstore\n        /* \"#utility.yul\":9883:9887   */\n      0x24\n        /* \"#utility.yul\":9880:9881   */\n      0x00\n        /* \"#utility.yul\":9873:9888   */\n      revert\n        /* \"#utility.yul\":9900:10085   */\n    tag_120:\n        /* \"#utility.yul\":9940:9941   */\n      0x00\n        /* \"#utility.yul\":9957:9977   */\n      tag_425\n        /* \"#utility.yul\":9975:9976   */\n      dup3\n        /* \"#utility.yul\":9957:9977   */\n      tag_279\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9952:9977   */\n      swap2\n      pop\n        /* \"#utility.yul\":9991:10011   */\n      tag_426\n        /* \"#utility.yul\":10009:10010   */\n      dup4\n        /* \"#utility.yul\":9991:10011   */\n      tag_279\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9986:10011   */\n      swap3\n      pop\n        /* \"#utility.yul\":10030:10031   */\n      dup3\n        /* \"#utility.yul\":10020:10055   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":10035:10053   */\n      tag_428\n      tag_308\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10020:10055   */\n    tag_427:\n        /* \"#utility.yul\":10077:10078   */\n      dup3\n        /* \"#utility.yul\":10074:10075   */\n      dup3\n        /* \"#utility.yul\":10070:10079   */\n      div\n        /* \"#utility.yul\":10065:10079   */\n      swap1\n      pop\n        /* \"#utility.yul\":9900:10085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10091:10285   */\n    tag_126:\n        /* \"#utility.yul\":10131:10135   */\n      0x00\n        /* \"#utility.yul\":10151:10171   */\n      tag_430\n        /* \"#utility.yul\":10169:10170   */\n      dup3\n        /* \"#utility.yul\":10151:10171   */\n      tag_279\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":10146:10171   */\n      swap2\n      pop\n        /* \"#utility.yul\":10185:10205   */\n      tag_431\n        /* \"#utility.yul\":10203:10204   */\n      dup4\n        /* \"#utility.yul\":10185:10205   */\n      tag_279\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10180:10205   */\n      swap3\n      pop\n        /* \"#utility.yul\":10229:10230   */\n      dup3\n        /* \"#utility.yul\":10226:10227   */\n      dup3\n        /* \"#utility.yul\":10222:10231   */\n      sub\n        /* \"#utility.yul\":10214:10231   */\n      swap1\n      pop\n        /* \"#utility.yul\":10253:10254   */\n      dup2\n        /* \"#utility.yul\":10247:10251   */\n      dup2\n        /* \"#utility.yul\":10244:10255   */\n      gt\n        /* \"#utility.yul\":10241:10278   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":10258:10276   */\n      tag_433\n      tag_307\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":10241:10278   */\n    tag_432:\n        /* \"#utility.yul\":10091:10285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10291:10733   */\n    tag_132:\n        /* \"#utility.yul\":10440:10444   */\n      0x00\n        /* \"#utility.yul\":10478:10480   */\n      0x60\n        /* \"#utility.yul\":10467:10476   */\n      dup3\n        /* \"#utility.yul\":10463:10481   */\n      add\n        /* \"#utility.yul\":10455:10481   */\n      swap1\n      pop\n        /* \"#utility.yul\":10491:10562   */\n      tag_435\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10548:10557   */\n      dup4\n        /* \"#utility.yul\":10544:10561   */\n      add\n        /* \"#utility.yul\":10535:10541   */\n      dup7\n        /* \"#utility.yul\":10491:10562   */\n      tag_280\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10572:10644   */\n      tag_436\n        /* \"#utility.yul\":10640:10642   */\n      0x20\n        /* \"#utility.yul\":10629:10638   */\n      dup4\n        /* \"#utility.yul\":10625:10643   */\n      add\n        /* \"#utility.yul\":10616:10622   */\n      dup6\n        /* \"#utility.yul\":10572:10644   */\n      tag_280\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10654:10726   */\n      tag_437\n        /* \"#utility.yul\":10722:10724   */\n      0x40\n        /* \"#utility.yul\":10711:10720   */\n      dup4\n        /* \"#utility.yul\":10707:10725   */\n      add\n        /* \"#utility.yul\":10698:10704   */\n      dup5\n        /* \"#utility.yul\":10654:10726   */\n      tag_280\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10291:10733   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10739:10904   */\n    tag_309:\n        /* \"#utility.yul\":10879:10896   */\n      0x496e76616c696420616d6f756e74730000000000000000000000000000000000\n        /* \"#utility.yul\":10875:10876   */\n      0x00\n        /* \"#utility.yul\":10867:10873   */\n      dup3\n        /* \"#utility.yul\":10863:10877   */\n      add\n        /* \"#utility.yul\":10856:10897   */\n      mstore\n        /* \"#utility.yul\":10739:10904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10910:11276   */\n    tag_310:\n        /* \"#utility.yul\":11052:11055   */\n      0x00\n        /* \"#utility.yul\":11073:11140   */\n      tag_440\n        /* \"#utility.yul\":11137:11139   */\n      0x0f\n        /* \"#utility.yul\":11132:11135   */\n      dup4\n        /* \"#utility.yul\":11073:11140   */\n      tag_282\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":11066:11140   */\n      swap2\n      pop\n        /* \"#utility.yul\":11149:11242   */\n      tag_441\n        /* \"#utility.yul\":11238:11241   */\n      dup3\n        /* \"#utility.yul\":11149:11242   */\n      tag_309\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11267:11269   */\n      0x20\n        /* \"#utility.yul\":11262:11265   */\n      dup3\n        /* \"#utility.yul\":11258:11270   */\n      add\n        /* \"#utility.yul\":11251:11270   */\n      swap1\n      pop\n        /* \"#utility.yul\":10910:11276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11282:11701   */\n    tag_153:\n        /* \"#utility.yul\":11448:11452   */\n      0x00\n        /* \"#utility.yul\":11486:11488   */\n      0x20\n        /* \"#utility.yul\":11475:11484   */\n      dup3\n        /* \"#utility.yul\":11471:11489   */\n      add\n        /* \"#utility.yul\":11463:11489   */\n      swap1\n      pop\n        /* \"#utility.yul\":11535:11544   */\n      dup2\n        /* \"#utility.yul\":11529:11533   */\n      dup2\n        /* \"#utility.yul\":11525:11545   */\n      sub\n        /* \"#utility.yul\":11521:11522   */\n      0x00\n        /* \"#utility.yul\":11510:11519   */\n      dup4\n        /* \"#utility.yul\":11506:11523   */\n      add\n        /* \"#utility.yul\":11499:11546   */\n      mstore\n        /* \"#utility.yul\":11563:11694   */\n      tag_443\n        /* \"#utility.yul\":11689:11693   */\n      dup2\n        /* \"#utility.yul\":11563:11694   */\n      tag_310\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11555:11694   */\n      swap1\n      pop\n        /* \"#utility.yul\":11282:11701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11707:11898   */\n    tag_172:\n        /* \"#utility.yul\":11747:11750   */\n      0x00\n        /* \"#utility.yul\":11766:11786   */\n      tag_445\n        /* \"#utility.yul\":11784:11785   */\n      dup3\n        /* \"#utility.yul\":11766:11786   */\n      tag_279\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11761:11786   */\n      swap2\n      pop\n        /* \"#utility.yul\":11800:11820   */\n      tag_446\n        /* \"#utility.yul\":11818:11819   */\n      dup4\n        /* \"#utility.yul\":11800:11820   */\n      tag_279\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11795:11820   */\n      swap3\n      pop\n        /* \"#utility.yul\":11843:11844   */\n      dup3\n        /* \"#utility.yul\":11840:11841   */\n      dup3\n        /* \"#utility.yul\":11836:11845   */\n      add\n        /* \"#utility.yul\":11829:11845   */\n      swap1\n      pop\n        /* \"#utility.yul\":11864:11867   */\n      dup1\n        /* \"#utility.yul\":11861:11862   */\n      dup3\n        /* \"#utility.yul\":11858:11868   */\n      gt\n        /* \"#utility.yul\":11855:11891   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":11871:11889   */\n      tag_448\n      tag_307\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11855:11891   */\n    tag_447:\n        /* \"#utility.yul\":11707:11898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11904:12022   */\n    tag_311:\n        /* \"#utility.yul\":11991:12015   */\n      tag_450\n        /* \"#utility.yul\":12009:12014   */\n      dup2\n        /* \"#utility.yul\":11991:12015   */\n      tag_290\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11986:11989   */\n      dup3\n        /* \"#utility.yul\":11979:12016   */\n      mstore\n        /* \"#utility.yul\":11904:12022   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12028:12470   */\n    tag_187:\n        /* \"#utility.yul\":12177:12181   */\n      0x00\n        /* \"#utility.yul\":12215:12217   */\n      0x60\n        /* \"#utility.yul\":12204:12213   */\n      dup3\n        /* \"#utility.yul\":12200:12218   */\n      add\n        /* \"#utility.yul\":12192:12218   */\n      swap1\n      pop\n        /* \"#utility.yul\":12228:12299   */\n      tag_452\n        /* \"#utility.yul\":12296:12297   */\n      0x00\n        /* \"#utility.yul\":12285:12294   */\n      dup4\n        /* \"#utility.yul\":12281:12298   */\n      add\n        /* \"#utility.yul\":12272:12278   */\n      dup7\n        /* \"#utility.yul\":12228:12299   */\n      tag_311\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":12309:12381   */\n      tag_453\n        /* \"#utility.yul\":12377:12379   */\n      0x20\n        /* \"#utility.yul\":12366:12375   */\n      dup4\n        /* \"#utility.yul\":12362:12380   */\n      add\n        /* \"#utility.yul\":12353:12359   */\n      dup6\n        /* \"#utility.yul\":12309:12381   */\n      tag_280\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12391:12463   */\n      tag_454\n        /* \"#utility.yul\":12459:12461   */\n      0x40\n        /* \"#utility.yul\":12448:12457   */\n      dup4\n        /* \"#utility.yul\":12444:12462   */\n      add\n        /* \"#utility.yul\":12435:12441   */\n      dup5\n        /* \"#utility.yul\":12391:12463   */\n      tag_280\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12028:12470   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12476:12698   */\n    tag_192:\n        /* \"#utility.yul\":12569:12573   */\n      0x00\n        /* \"#utility.yul\":12607:12609   */\n      0x20\n        /* \"#utility.yul\":12596:12605   */\n      dup3\n        /* \"#utility.yul\":12592:12610   */\n      add\n        /* \"#utility.yul\":12584:12610   */\n      swap1\n      pop\n        /* \"#utility.yul\":12620:12691   */\n      tag_456\n        /* \"#utility.yul\":12688:12689   */\n      0x00\n        /* \"#utility.yul\":12677:12686   */\n      dup4\n        /* \"#utility.yul\":12673:12690   */\n      add\n        /* \"#utility.yul\":12664:12670   */\n      dup5\n        /* \"#utility.yul\":12620:12691   */\n      tag_311\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12476:12698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12704:13036   */\n    tag_206:\n        /* \"#utility.yul\":12825:12829   */\n      0x00\n        /* \"#utility.yul\":12863:12865   */\n      0x40\n        /* \"#utility.yul\":12852:12861   */\n      dup3\n        /* \"#utility.yul\":12848:12866   */\n      add\n        /* \"#utility.yul\":12840:12866   */\n      swap1\n      pop\n        /* \"#utility.yul\":12876:12947   */\n      tag_458\n        /* \"#utility.yul\":12944:12945   */\n      0x00\n        /* \"#utility.yul\":12933:12942   */\n      dup4\n        /* \"#utility.yul\":12929:12946   */\n      add\n        /* \"#utility.yul\":12920:12926   */\n      dup6\n        /* \"#utility.yul\":12876:12947   */\n      tag_311\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12957:13029   */\n      tag_459\n        /* \"#utility.yul\":13025:13027   */\n      0x20\n        /* \"#utility.yul\":13014:13023   */\n      dup4\n        /* \"#utility.yul\":13010:13028   */\n      add\n        /* \"#utility.yul\":13001:13007   */\n      dup5\n        /* \"#utility.yul\":12957:13029   */\n      tag_280\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12704:13036   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13042:13484   */\n    tag_212:\n        /* \"#utility.yul\":13191:13195   */\n      0x00\n        /* \"#utility.yul\":13229:13231   */\n      0x60\n        /* \"#utility.yul\":13218:13227   */\n      dup3\n        /* \"#utility.yul\":13214:13232   */\n      add\n        /* \"#utility.yul\":13206:13232   */\n      swap1\n      pop\n        /* \"#utility.yul\":13242:13313   */\n      tag_461\n        /* \"#utility.yul\":13310:13311   */\n      0x00\n        /* \"#utility.yul\":13299:13308   */\n      dup4\n        /* \"#utility.yul\":13295:13312   */\n      add\n        /* \"#utility.yul\":13286:13292   */\n      dup7\n        /* \"#utility.yul\":13242:13313   */\n      tag_311\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":13323:13395   */\n      tag_462\n        /* \"#utility.yul\":13391:13393   */\n      0x20\n        /* \"#utility.yul\":13380:13389   */\n      dup4\n        /* \"#utility.yul\":13376:13394   */\n      add\n        /* \"#utility.yul\":13367:13373   */\n      dup6\n        /* \"#utility.yul\":13323:13395   */\n      tag_311\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13405:13477   */\n      tag_463\n        /* \"#utility.yul\":13473:13475   */\n      0x40\n        /* \"#utility.yul\":13462:13471   */\n      dup4\n        /* \"#utility.yul\":13458:13476   */\n      add\n        /* \"#utility.yul\":13449:13455   */\n      dup5\n        /* \"#utility.yul\":13405:13477   */\n      tag_280\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":13042:13484   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13490:13606   */\n    tag_312:\n        /* \"#utility.yul\":13560:13581   */\n      tag_465\n        /* \"#utility.yul\":13575:13580   */\n      dup2\n        /* \"#utility.yul\":13560:13581   */\n      tag_295\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13553:13558   */\n      dup2\n        /* \"#utility.yul\":13550:13582   */\n      eq\n        /* \"#utility.yul\":13540:13600   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":13596:13597   */\n      0x00\n        /* \"#utility.yul\":13593:13594   */\n      dup1\n        /* \"#utility.yul\":13586:13598   */\n      revert\n        /* \"#utility.yul\":13540:13600   */\n    tag_466:\n        /* \"#utility.yul\":13490:13606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13612:13749   */\n    tag_313:\n        /* \"#utility.yul\":13666:13671   */\n      0x00\n        /* \"#utility.yul\":13697:13703   */\n      dup2\n        /* \"#utility.yul\":13691:13704   */\n      mload\n        /* \"#utility.yul\":13682:13704   */\n      swap1\n      pop\n        /* \"#utility.yul\":13713:13743   */\n      tag_468\n        /* \"#utility.yul\":13737:13742   */\n      dup2\n        /* \"#utility.yul\":13713:13743   */\n      tag_312\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":13612:13749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13755:14100   */\n    tag_252:\n        /* \"#utility.yul\":13822:13828   */\n      0x00\n        /* \"#utility.yul\":13871:13873   */\n      0x20\n        /* \"#utility.yul\":13859:13868   */\n      dup3\n        /* \"#utility.yul\":13850:13857   */\n      dup5\n        /* \"#utility.yul\":13846:13869   */\n      sub\n        /* \"#utility.yul\":13842:13874   */\n      slt\n        /* \"#utility.yul\":13839:13958   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":13877:13956   */\n      tag_471\n      tag_287\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13839:13958   */\n    tag_470:\n        /* \"#utility.yul\":13997:13998   */\n      0x00\n        /* \"#utility.yul\":14022:14083   */\n      tag_472\n        /* \"#utility.yul\":14075:14082   */\n      dup5\n        /* \"#utility.yul\":14066:14072   */\n      dup3\n        /* \"#utility.yul\":14055:14064   */\n      dup6\n        /* \"#utility.yul\":14051:14073   */\n      add\n        /* \"#utility.yul\":14022:14083   */\n      tag_313\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14012:14083   */\n      swap2\n      pop\n        /* \"#utility.yul\":13968:14093   */\n      pop\n        /* \"#utility.yul\":13755:14100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14106:14204   */\n    tag_314:\n        /* \"#utility.yul\":14157:14163   */\n      0x00\n        /* \"#utility.yul\":14191:14196   */\n      dup2\n        /* \"#utility.yul\":14185:14197   */\n      mload\n        /* \"#utility.yul\":14175:14197   */\n      swap1\n      pop\n        /* \"#utility.yul\":14106:14204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14210:14357   */\n    tag_315:\n        /* \"#utility.yul\":14311:14322   */\n      0x00\n        /* \"#utility.yul\":14348:14351   */\n      dup2\n        /* \"#utility.yul\":14333:14351   */\n      swap1\n      pop\n        /* \"#utility.yul\":14210:14357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14363:14749   */\n    tag_316:\n        /* \"#utility.yul\":14467:14470   */\n      0x00\n        /* \"#utility.yul\":14495:14533   */\n      tag_476\n        /* \"#utility.yul\":14527:14532   */\n      dup3\n        /* \"#utility.yul\":14495:14533   */\n      tag_314\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":14549:14637   */\n      tag_477\n        /* \"#utility.yul\":14630:14636   */\n      dup2\n        /* \"#utility.yul\":14625:14628   */\n      dup6\n        /* \"#utility.yul\":14549:14637   */\n      tag_315\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":14542:14637   */\n      swap4\n      pop\n        /* \"#utility.yul\":14646:14711   */\n      tag_478\n        /* \"#utility.yul\":14704:14710   */\n      dup2\n        /* \"#utility.yul\":14699:14702   */\n      dup6\n        /* \"#utility.yul\":14692:14696   */\n      0x20\n        /* \"#utility.yul\":14685:14690   */\n      dup7\n        /* \"#utility.yul\":14681:14697   */\n      add\n        /* \"#utility.yul\":14646:14711   */\n      tag_283\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":14736:14742   */\n      dup1\n        /* \"#utility.yul\":14731:14734   */\n      dup5\n        /* \"#utility.yul\":14727:14743   */\n      add\n        /* \"#utility.yul\":14720:14743   */\n      swap2\n      pop\n        /* \"#utility.yul\":14471:14749   */\n      pop\n        /* \"#utility.yul\":14363:14749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14755:15026   */\n    tag_262:\n        /* \"#utility.yul\":14885:14888   */\n      0x00\n        /* \"#utility.yul\":14907:15000   */\n      tag_480\n        /* \"#utility.yul\":14996:14999   */\n      dup3\n        /* \"#utility.yul\":14987:14993   */\n      dup5\n        /* \"#utility.yul\":14907:15000   */\n      tag_316\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":14900:15000   */\n      swap2\n      pop\n        /* \"#utility.yul\":15017:15020   */\n      dup2\n        /* \"#utility.yul\":15010:15020   */\n      swap1\n      pop\n        /* \"#utility.yul\":14755:15026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ac1fbd6d690ef7196695b1b9e0ada3cb31cc88e775fc629936fb1553d916502064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1386": {
									"entryPoint": null,
									"id": 1386,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1481": {
									"entryPoint": null,
									"id": 1481,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6582:10",
										"nodeType": "YulBlock",
										"src": "0:6582:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "939:413:10",
													"nodeType": "YulBlock",
													"src": "939:413:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:10",
																"nodeType": "YulBlock",
																"src": "985:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:10"
																			},
																			"nativeSrc": "987:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:10"
																		},
																		"nativeSrc": "987:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:10"
																		},
																		"nativeSrc": "956:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:10",
																		"nodeType": "YulLiteral",
																		"src": "981:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:10"
																},
																"nativeSrc": "952:32:10",
																"nodeType": "YulFunctionCall",
																"src": "952:32:10"
															},
															"nativeSrc": "949:119:10",
															"nodeType": "YulIf",
															"src": "949:119:10"
														},
														{
															"nativeSrc": "1078:128:10",
															"nodeType": "YulBlock",
															"src": "1078:128:10",
															"statements": [
																{
																	"nativeSrc": "1093:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:10"
																				},
																				"nativeSrc": "1164:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:10"
																		},
																		"nativeSrc": "1132:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:10",
															"nodeType": "YulBlock",
															"src": "1216:129:10",
															"statements": [
																{
																	"nativeSrc": "1231:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nativeSrc": "1303:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:10"
																		},
																		"nativeSrc": "1271:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:10",
														"nodeType": "YulTypedName",
														"src": "901:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:10",
														"nodeType": "YulTypedName",
														"src": "912:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:10",
														"nodeType": "YulTypedName",
														"src": "924:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:10",
														"nodeType": "YulTypedName",
														"src": "932:6:10",
														"type": ""
													}
												],
												"src": "845:507:10"
											},
											{
												"body": {
													"nativeSrc": "1417:40:10",
													"nodeType": "YulBlock",
													"src": "1417:40:10",
													"statements": [
														{
															"nativeSrc": "1428:22:10",
															"nodeType": "YulAssignment",
															"src": "1428:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:10"
																},
																"nativeSrc": "1438:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:10",
														"nodeType": "YulTypedName",
														"src": "1400:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:10",
														"nodeType": "YulTypedName",
														"src": "1410:6:10",
														"type": ""
													}
												],
												"src": "1358:99:10"
											},
											{
												"body": {
													"nativeSrc": "1491:152:10",
													"nodeType": "YulBlock",
													"src": "1491:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:10"
																},
																"nativeSrc": "1501:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:10"
															},
															"nativeSrc": "1501:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:10"
																},
																"nativeSrc": "1598:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:10"
															},
															"nativeSrc": "1598:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:10"
																},
																"nativeSrc": "1622:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:10"
															},
															"nativeSrc": "1622:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:10"
											},
											{
												"body": {
													"nativeSrc": "1677:152:10",
													"nodeType": "YulBlock",
													"src": "1677:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:10"
																},
																"nativeSrc": "1687:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:10"
															},
															"nativeSrc": "1687:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:10"
																},
																"nativeSrc": "1784:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:10"
															},
															"nativeSrc": "1784:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:10"
																},
																"nativeSrc": "1808:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:10"
															},
															"nativeSrc": "1808:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:10"
											},
											{
												"body": {
													"nativeSrc": "1886:269:10",
													"nodeType": "YulBlock",
													"src": "1886:269:10",
													"statements": [
														{
															"nativeSrc": "1896:22:10",
															"nodeType": "YulAssignment",
															"src": "1896:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:10"
																},
																"nativeSrc": "1906:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:10"
																}
															]
														},
														{
															"nativeSrc": "1927:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:10"
																},
																"nativeSrc": "1953:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:10",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:10",
																"nodeType": "YulBlock",
																"src": "2004:51:10",
																"statements": [
																	{
																		"nativeSrc": "2018:27:10",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:10"
																			},
																			"nativeSrc": "2028:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:10"
																},
																"nativeSrc": "1977:26:10",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:10"
															},
															"nativeSrc": "1974:81:10",
															"nodeType": "YulIf",
															"src": "1974:81:10"
														},
														{
															"body": {
																"nativeSrc": "2107:42:10",
																"nodeType": "YulBlock",
																"src": "2107:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:10"
																			},
																			"nativeSrc": "2121:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:10"
																		},
																		"nativeSrc": "2121:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:10"
																		},
																		"nativeSrc": "2091:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:10"
																},
																"nativeSrc": "2068:38:10",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:10"
															},
															"nativeSrc": "2065:84:10",
															"nodeType": "YulIf",
															"src": "2065:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:10",
														"nodeType": "YulTypedName",
														"src": "1870:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:10",
														"nodeType": "YulTypedName",
														"src": "1879:6:10",
														"type": ""
													}
												],
												"src": "1835:320:10"
											},
											{
												"body": {
													"nativeSrc": "2215:87:10",
													"nodeType": "YulBlock",
													"src": "2215:87:10",
													"statements": [
														{
															"nativeSrc": "2225:11:10",
															"nodeType": "YulAssignment",
															"src": "2225:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:10",
																"nodeType": "YulIdentifier",
																"src": "2233:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:10"
																},
																"nativeSrc": "2246:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:10"
															},
															"nativeSrc": "2246:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:10"
														},
														{
															"nativeSrc": "2269:26:10",
															"nodeType": "YulAssignment",
															"src": "2269:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:10"
																},
																"nativeSrc": "2277:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:10",
														"nodeType": "YulTypedName",
														"src": "2202:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:10",
														"nodeType": "YulTypedName",
														"src": "2210:4:10",
														"type": ""
													}
												],
												"src": "2161:141:10"
											},
											{
												"body": {
													"nativeSrc": "2352:49:10",
													"nodeType": "YulBlock",
													"src": "2352:49:10",
													"statements": [
														{
															"nativeSrc": "2362:33:10",
															"nodeType": "YulAssignment",
															"src": "2362:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:10"
																		},
																		"nativeSrc": "2376:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:10"
																},
																"nativeSrc": "2372:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:10",
														"nodeType": "YulTypedName",
														"src": "2335:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:10",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2308:93:10"
											},
											{
												"body": {
													"nativeSrc": "2460:54:10",
													"nodeType": "YulBlock",
													"src": "2460:54:10",
													"statements": [
														{
															"nativeSrc": "2470:37:10",
															"nodeType": "YulAssignment",
															"src": "2470:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:10"
																},
																"nativeSrc": "2491:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:10",
														"nodeType": "YulTypedName",
														"src": "2435:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:10",
														"nodeType": "YulTypedName",
														"src": "2441:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:10",
														"nodeType": "YulTypedName",
														"src": "2451:8:10",
														"type": ""
													}
												],
												"src": "2407:107:10"
											},
											{
												"body": {
													"nativeSrc": "2596:317:10",
													"nodeType": "YulBlock",
													"src": "2596:317:10",
													"statements": [
														{
															"nativeSrc": "2606:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:10"
																},
																"nativeSrc": "2623:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:10",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:10",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:10"
																},
																"nativeSrc": "2662:97:10",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:10",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:10",
															"nodeType": "YulAssignment",
															"src": "2768:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:10"
																},
																"nativeSrc": "2780:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:10"
																}
															]
														},
														{
															"nativeSrc": "2828:30:10",
															"nodeType": "YulAssignment",
															"src": "2828:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:10"
																		},
																		"nativeSrc": "2848:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:10"
																},
																"nativeSrc": "2837:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:10"
																}
															]
														},
														{
															"nativeSrc": "2867:40:10",
															"nodeType": "YulAssignment",
															"src": "2867:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:10"
																		},
																		"nativeSrc": "2887:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:10"
																},
																"nativeSrc": "2877:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:10",
														"nodeType": "YulTypedName",
														"src": "2557:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:10",
														"nodeType": "YulTypedName",
														"src": "2564:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:10",
														"nodeType": "YulTypedName",
														"src": "2576:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:10",
														"nodeType": "YulTypedName",
														"src": "2589:6:10",
														"type": ""
													}
												],
												"src": "2520:393:10"
											},
											{
												"body": {
													"nativeSrc": "2964:32:10",
													"nodeType": "YulBlock",
													"src": "2964:32:10",
													"statements": [
														{
															"nativeSrc": "2974:16:10",
															"nodeType": "YulAssignment",
															"src": "2974:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:10",
																"nodeType": "YulIdentifier",
																"src": "2985:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:10",
														"nodeType": "YulTypedName",
														"src": "2946:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:10",
														"nodeType": "YulTypedName",
														"src": "2956:7:10",
														"type": ""
													}
												],
												"src": "2919:77:10"
											},
											{
												"body": {
													"nativeSrc": "3034:28:10",
													"nodeType": "YulBlock",
													"src": "3034:28:10",
													"statements": [
														{
															"nativeSrc": "3044:12:10",
															"nodeType": "YulAssignment",
															"src": "3044:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:10",
																"nodeType": "YulIdentifier",
																"src": "3051:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:10",
														"nodeType": "YulTypedName",
														"src": "3020:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:10",
														"nodeType": "YulTypedName",
														"src": "3030:3:10",
														"type": ""
													}
												],
												"src": "3002:60:10"
											},
											{
												"body": {
													"nativeSrc": "3128:82:10",
													"nodeType": "YulBlock",
													"src": "3128:82:10",
													"statements": [
														{
															"nativeSrc": "3138:66:10",
															"nodeType": "YulAssignment",
															"src": "3138:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:10"
																				},
																				"nativeSrc": "3178:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:10"
																		},
																		"nativeSrc": "3169:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:10"
																},
																"nativeSrc": "3151:53:10",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:10",
														"nodeType": "YulTypedName",
														"src": "3108:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:10",
														"nodeType": "YulTypedName",
														"src": "3118:9:10",
														"type": ""
													}
												],
												"src": "3068:142:10"
											},
											{
												"body": {
													"nativeSrc": "3263:28:10",
													"nodeType": "YulBlock",
													"src": "3263:28:10",
													"statements": [
														{
															"nativeSrc": "3273:12:10",
															"nodeType": "YulAssignment",
															"src": "3273:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:10",
																"nodeType": "YulIdentifier",
																"src": "3280:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:10",
														"nodeType": "YulTypedName",
														"src": "3249:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:10",
														"nodeType": "YulTypedName",
														"src": "3259:3:10",
														"type": ""
													}
												],
												"src": "3216:75:10"
											},
											{
												"body": {
													"nativeSrc": "3373:193:10",
													"nodeType": "YulBlock",
													"src": "3373:193:10",
													"statements": [
														{
															"nativeSrc": "3383:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:10"
																},
																"nativeSrc": "3407:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:10",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:10"
																				},
																				"nativeSrc": "3496:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:10"
																				},
																				"nativeSrc": "3517:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:10"
																		},
																		"nativeSrc": "3468:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:10"
																},
																"nativeSrc": "3455:105:10",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:10"
															},
															"nativeSrc": "3455:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:10",
														"nodeType": "YulTypedName",
														"src": "3350:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:10",
														"nodeType": "YulTypedName",
														"src": "3356:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:10",
														"nodeType": "YulTypedName",
														"src": "3364:7:10",
														"type": ""
													}
												],
												"src": "3297:269:10"
											},
											{
												"body": {
													"nativeSrc": "3621:24:10",
													"nodeType": "YulBlock",
													"src": "3621:24:10",
													"statements": [
														{
															"nativeSrc": "3631:8:10",
															"nodeType": "YulAssignment",
															"src": "3631:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:10",
																"nodeType": "YulLiteral",
																"src": "3638:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:10",
														"nodeType": "YulTypedName",
														"src": "3617:3:10",
														"type": ""
													}
												],
												"src": "3572:73:10"
											},
											{
												"body": {
													"nativeSrc": "3704:136:10",
													"nodeType": "YulBlock",
													"src": "3704:136:10",
													"statements": [
														{
															"nativeSrc": "3714:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:10"
																},
																"nativeSrc": "3728:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:10"
																},
																"nativeSrc": "3769:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:10"
															},
															"nativeSrc": "3769:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:10",
														"nodeType": "YulTypedName",
														"src": "3690:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:10",
														"nodeType": "YulTypedName",
														"src": "3696:6:10",
														"type": ""
													}
												],
												"src": "3651:189:10"
											},
											{
												"body": {
													"nativeSrc": "3896:136:10",
													"nodeType": "YulBlock",
													"src": "3896:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:10",
																"nodeType": "YulBlock",
																"src": "3963:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:10"
																			},
																			"nativeSrc": "3977:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:10"
																		},
																		"nativeSrc": "3977:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:10"
																},
																"nativeSrc": "3913:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:10"
															},
															"nativeSrc": "3906:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:10",
																"nodeType": "YulBlock",
																"src": "3928:26:10",
																"statements": [
																	{
																		"nativeSrc": "3930:22:10",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:10"
																			},
																			"nativeSrc": "3939:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:10",
																"nodeType": "YulBlock",
																"src": "3910:2:10",
																"statements": []
															},
															"src": "3906:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:10",
														"nodeType": "YulTypedName",
														"src": "3884:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:10",
														"nodeType": "YulTypedName",
														"src": "3891:3:10",
														"type": ""
													}
												],
												"src": "3846:186:10"
											},
											{
												"body": {
													"nativeSrc": "4117:464:10",
													"nodeType": "YulBlock",
													"src": "4117:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:10",
																"nodeType": "YulBlock",
																"src": "4143:431:10",
																"statements": [
																	{
																		"nativeSrc": "4157:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:10"
																			},
																			"nativeSrc": "4173:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:10",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:10"
																					},
																					"nativeSrc": "4257:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:10"
																			},
																			"nativeSrc": "4243:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:10",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:10",
																			"nodeType": "YulBlock",
																			"src": "4444:27:10",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:10",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:10",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:10"
																			},
																			"nativeSrc": "4425:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:10"
																		},
																		"nativeSrc": "4422:49:10",
																		"nodeType": "YulIf",
																		"src": "4422:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:10"
																							},
																							"nativeSrc": "4540:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:10"
																					},
																					"nativeSrc": "4526:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:10"
																			},
																			"nativeSrc": "4484:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:10"
																		},
																		"nativeSrc": "4484:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:10"
																},
																"nativeSrc": "4131:11:10",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:10"
															},
															"nativeSrc": "4128:446:10",
															"nodeType": "YulIf",
															"src": "4128:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:10",
														"nodeType": "YulTypedName",
														"src": "4093:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:10",
														"nodeType": "YulTypedName",
														"src": "4100:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:10",
														"nodeType": "YulTypedName",
														"src": "4105:10:10",
														"type": ""
													}
												],
												"src": "4038:543:10"
											},
											{
												"body": {
													"nativeSrc": "4650:54:10",
													"nodeType": "YulBlock",
													"src": "4650:54:10",
													"statements": [
														{
															"nativeSrc": "4660:37:10",
															"nodeType": "YulAssignment",
															"src": "4660:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:10"
																},
																"nativeSrc": "4681:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:10",
														"nodeType": "YulTypedName",
														"src": "4625:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:10",
														"nodeType": "YulTypedName",
														"src": "4631:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:10",
														"nodeType": "YulTypedName",
														"src": "4641:8:10",
														"type": ""
													}
												],
												"src": "4587:117:10"
											},
											{
												"body": {
													"nativeSrc": "4761:118:10",
													"nodeType": "YulBlock",
													"src": "4761:118:10",
													"statements": [
														{
															"nativeSrc": "4771:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:10"
																				},
																				"nativeSrc": "4816:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:10"
																				},
																				"nativeSrc": "4831:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:10"
																		},
																		"nativeSrc": "4787:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:10"
																},
																"nativeSrc": "4783:56:10",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:10",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:10",
															"nodeType": "YulAssignment",
															"src": "4848:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:10"
																},
																"nativeSrc": "4858:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:10",
														"nodeType": "YulTypedName",
														"src": "4738:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:10",
														"nodeType": "YulTypedName",
														"src": "4744:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:10",
														"nodeType": "YulTypedName",
														"src": "4754:6:10",
														"type": ""
													}
												],
												"src": "4710:169:10"
											},
											{
												"body": {
													"nativeSrc": "4965:214:10",
													"nodeType": "YulBlock",
													"src": "4965:214:10",
													"statements": [
														{
															"nativeSrc": "5098:37:10",
															"nodeType": "YulAssignment",
															"src": "5098:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:10"
																},
																"nativeSrc": "5106:29:10",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:10"
																}
															]
														},
														{
															"nativeSrc": "5144:29:10",
															"nodeType": "YulAssignment",
															"src": "5144:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:10"
																		},
																		"nativeSrc": "5161:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:10"
																},
																"nativeSrc": "5152:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:10",
														"nodeType": "YulTypedName",
														"src": "4946:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:10",
														"nodeType": "YulTypedName",
														"src": "4952:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:10",
														"nodeType": "YulTypedName",
														"src": "4960:4:10",
														"type": ""
													}
												],
												"src": "4884:295:10"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:10",
													"nodeType": "YulBlock",
													"src": "5276:1303:10",
													"statements": [
														{
															"nativeSrc": "5287:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:10"
																},
																"nativeSrc": "5301:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:10",
																"nodeType": "YulBlock",
																"src": "5423:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:10"
																			},
																			"nativeSrc": "5425:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:10"
																		},
																		"nativeSrc": "5425:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:10",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:10"
																},
																"nativeSrc": "5392:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:10"
															},
															"nativeSrc": "5389:56:10",
															"nodeType": "YulIf",
															"src": "5389:56:10"
														},
														{
															"nativeSrc": "5455:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:10"
																		},
																		"nativeSrc": "5495:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:10"
																},
																"nativeSrc": "5469:38:10",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:10"
																},
																"nativeSrc": "5554:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:10"
															},
															"nativeSrc": "5554:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:10"
														},
														{
															"nativeSrc": "5631:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:10",
																"nodeType": "YulLiteral",
																"src": "5648:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:10",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:10",
															"nodeType": "YulAssignment",
															"src": "5659:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:10",
																"nodeType": "YulLiteral",
																"src": "5672:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:10",
																		"nodeType": "YulBlock",
																		"src": "5723:611:10",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:10",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:10"
																							},
																							"nativeSrc": "5764:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:10"
																					},
																					"nativeSrc": "5752:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:10",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:10"
																					},
																					"nativeSrc": "5802:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:10",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:10",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:10",
																					"nodeType": "YulBlock",
																					"src": "5920:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:10"
																												},
																												"nativeSrc": "5959:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:10"
																										},
																										"nativeSrc": "5953:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:10"
																								},
																								"nativeSrc": "5938:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:10"
																							},
																							"nativeSrc": "5938:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:10"
																						},
																						{
																							"nativeSrc": "5997:24:10",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:10",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:10"
																								},
																								"nativeSrc": "6007:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:10",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:10",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:10"
																								},
																								"nativeSrc": "6051:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:10"
																					},
																					"nativeSrc": "5883:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:10"
																				},
																				"nativeSrc": "5875:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:10",
																					"nodeType": "YulBlock",
																					"src": "5898:21:10",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:10",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:10",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:10"
																								},
																								"nativeSrc": "5905:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:10",
																					"nodeType": "YulBlock",
																					"src": "5879:3:10",
																					"statements": []
																				},
																				"src": "5875:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:10",
																					"nodeType": "YulBlock",
																					"src": "6119:156:10",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:10"
																										},
																										"nativeSrc": "6160:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:10"
																								},
																								"nativeSrc": "6154:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:10",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:10",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:10"
																												},
																												"nativeSrc": "6242:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:10"
																										},
																										"nativeSrc": "6212:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:10"
																								},
																								"nativeSrc": "6197:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:10"
																							},
																							"nativeSrc": "6197:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:10"
																					},
																					"nativeSrc": "6099:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:10"
																				},
																				"nativeSrc": "6096:179:10",
																				"nodeType": "YulIf",
																				"src": "6096:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:10",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:10"
																									},
																									"nativeSrc": "6305:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:10",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:10"
																							},
																							"nativeSrc": "6301:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:10"
																					},
																					"nativeSrc": "6288:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:10"
																				},
																				"nativeSrc": "6288:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:10"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:10",
																	"nodeType": "YulCase",
																	"src": "5716:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:10",
																		"nodeType": "YulBlock",
																		"src": "6351:222:10",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:10",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:10",
																					"nodeType": "YulBlock",
																					"src": "6402:67:10",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:10",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:10"
																										},
																										"nativeSrc": "6435:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:10"
																								},
																								"nativeSrc": "6429:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:10"
																				},
																				"nativeSrc": "6392:77:10",
																				"nodeType": "YulIf",
																				"src": "6392:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:10"
																							},
																							"nativeSrc": "6495:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:10"
																					},
																					"nativeSrc": "6482:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:10"
																				},
																				"nativeSrc": "6482:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:10"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:10",
																	"nodeType": "YulCase",
																	"src": "6343:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:10"
																},
																"nativeSrc": "5693:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:10"
															},
															"nativeSrc": "5686:887:10",
															"nodeType": "YulSwitch",
															"src": "5686:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:10",
														"nodeType": "YulTypedName",
														"src": "5265:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:10",
														"nodeType": "YulTypedName",
														"src": "5271:3:10",
														"type": ""
													}
												],
												"src": "5184:1395:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b5060405161218438038061218483398181016040528101906100319190610194565b6040518060400160405280601381526020017f45524334363236205661756c7420546f6b656e000000000000000000000000008152506040518060400160405280600981526020017f5641554c5434363236000000000000000000000000000000000000000000000081525081600390816100ac919061040c565b5080600490816100bc919061040c565b50505060016005819055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050506104db565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101638261013a565b9050919050565b61017381610159565b811461017d575f80fd5b50565b5f8151905061018e8161016a565b92915050565b5f80604083850312156101aa576101a9610136565b5b5f6101b785828601610180565b92505060206101c885828601610180565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061024d57607f821691505b6020821081036102605761025f610209565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102c27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610287565b6102cc8683610287565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61031061030b610306846102e4565b6102ed565b6102e4565b9050919050565b5f819050919050565b610329836102f6565b61033d61033582610317565b848454610293565b825550505050565b5f90565b610351610345565b61035c818484610320565b505050565b5b8181101561037f576103745f82610349565b600181019050610362565b5050565b601f8211156103c45761039581610266565b61039e84610278565b810160208510156103ad578190505b6103c16103b985610278565b830182610361565b50505b505050565b5f82821c905092915050565b5f6103e45f19846008026103c9565b1980831691505092915050565b5f6103fc83836103d5565b9150826002028217905092915050565b610415826101d2565b67ffffffffffffffff81111561042e5761042d6101dc565b5b6104388254610236565b610443828285610383565b5f60209050601f831160018114610474575f8415610462578287015190505b61046c85826103f1565b8655506104d3565b601f19841661048286610266565b5f5b828110156104a957848901518255600182019150602085019450602081019050610484565b868310156104c657848901516104c2601f8916826103d5565b8355505b6001600288020188555050505b505050505050565b60805160a051611c6c6105185f395f818161059e01528181610749015261089801525f818161042c01528181610553015261084b0152611c6c5ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c8063313ce56711610095578063a9059cbb11610064578063a9059cbb146102b4578063d21220a7146102e4578063dd62ed3e14610302578063e2bbb15814610332576100fe565b8063313ce5671461022a57806370a082311461024857806395d89b4114610278578063a6e6185514610296576100fe565b80630dfe1681116100d15780630dfe16811461018d57806318160ddd146101ab57806323b872dd146101c95780632e1a7d4d146101f9576100fe565b806301e1d1141461010257806302d2cec41461012157806306fdde031461013f578063095ea7b31461015d575b5f80fd5b61010a610362565b6040516101189291906114a8565b60405180910390f35b610129610372565b60405161013691906114cf565b60405180910390f35b610147610378565b6040516101549190611558565b60405180910390f35b61017760048036038101906101729190611600565b610408565b6040516101849190611658565b60405180910390f35b61019561042a565b6040516101a291906116cc565b60405180910390f35b6101b361044e565b6040516101c091906114cf565b60405180910390f35b6101e360048036038101906101de91906116e5565b610457565b6040516101f09190611658565b60405180910390f35b610213600480360381019061020e9190611735565b610485565b6040516102219291906114a8565b60405180910390f35b610232610642565b60405161023f919061177b565b60405180910390f35b610262600480360381019061025d9190611794565b61064a565b60405161026f91906114cf565b60405180910390f35b61028061068f565b60405161028d9190611558565b60405180910390f35b61029e61071f565b6040516102ab91906114cf565b60405180910390f35b6102ce60048036038101906102c99190611600565b610725565b6040516102db9190611658565b60405180910390f35b6102ec610747565b6040516102f991906116cc565b60405180910390f35b61031c600480360381019061031791906117bf565b61076b565b60405161032991906114cf565b60405180910390f35b61034c600480360381019061034791906117fd565b6107ed565b60405161035991906114cf565b60405180910390f35b5f80600654915060075490509091565b60075481565b60606003805461038790611868565b80601f01602080910402602001604051908101604052809291908181526020018280546103b390611868565b80156103fe5780601f106103d5576101008083540402835291602001916103fe565b820191905f5260205f20905b8154815290600101906020018083116103e157829003601f168201915b5050505050905090565b5f806104126109eb565b905061041f8185856109f2565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600254905090565b5f806104616109eb565b905061046e858285610a04565b610479858585610a96565b60019150509392505050565b5f8061048f610b86565b5f83116104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c8906118e2565b60405180910390fd5b5f6104da61044e565b905080600654856104eb919061192d565b6104f5919061199b565b92508060075485610506919061192d565b610510919061199b565b915061051c3385610bcc565b8260065f82825461052d91906119cb565b925050819055508160075f82825461054591906119cb565b9250508190555061059733847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c4b9092919063ffffffff16565b6105e233837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c4b9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca9485858560405161062c939291906119fe565b60405180910390a25061063d610cca565b915091565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461069e90611868565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca90611868565b80156107155780601f106106ec57610100808354040283529160200191610715565b820191905f5260205f20905b8154815290600101906020018083116106f857829003601f168201915b5050505050905090565b60065481565b5f8061072f6109eb565b905061073c818585610a96565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f6107f6610b86565b5f8311801561080457505f82115b610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90611a7d565b60405180910390fd5b6108903330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610cd4909392919063ffffffff16565b6108dd3330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610cd4909392919063ffffffff16565b5f6108e661044e565b03610906576108ff82846108fa919061192d565b610d56565b9050610951565b61094e60065461091461044e565b8561091f919061192d565b610929919061199b565b60075461093461044e565b8561093f919061192d565b610949919061199b565b610dcd565b90505b8260065f8282546109629190611a9b565b925050819055508160075f82825461097a9190611a9b565b9250508190555061098b3382610de5565b3373ffffffffffffffffffffffffffffffffffffffff167f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e8484846040516109d5939291906119fe565b60405180910390a26109e5610cca565b92915050565b5f33905090565b6109ff8383836001610e64565b505050565b5f610a0f848461076b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a905781811015610a81578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a7893929190611add565b60405180910390fd5b610a8f84848484035f610e64565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b06575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610afd9190611b12565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b76575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b6d9190611b12565b60405180910390fd5b610b81838383611033565b505050565b600260055403610bc2576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600581905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c3c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c339190611b12565b60405180910390fd5b610c47825f83611033565b5050565b610cc5838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610c7e929190611b2b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061124c565b505050565b6001600581905550565b610d50848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610d0993929190611b52565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061124c565b50505050565b5f6003821115610dbb578190505f6001600284610d73919061199b565b610d7d9190611a9b565b90505b81811015610db5578091506002818285610d9a919061199b565b610da49190611a9b565b610dae919061199b565b9050610d80565b50610dc8565b5f8214610dc757600190505b5b919050565b5f818310610ddb5781610ddd565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e55575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e4c9190611b12565b60405180910390fd5b610e605f8383611033565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ed4575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ecb9190611b12565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f44575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f3b9190611b12565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561102d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161102491906114cf565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611083578060025f8282546110779190611a9b565b92505081905550611151565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561110c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161110393929190611add565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611198578060025f82825403925050819055506111e2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161123f91906114cf565b60405180910390a3505050565b5f611276828473ffffffffffffffffffffffffffffffffffffffff166112e190919063ffffffff16565b90505f81511415801561129a5750808060200190518101906112989190611bb1565b155b156112dc57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016112d39190611b12565b60405180910390fd5b505050565b60606112ee83835f6112f6565b905092915050565b60608147101561133d57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016113349190611b12565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516113659190611c20565b5f6040518083038185875af1925050503d805f811461139f576040519150601f19603f3d011682016040523d82523d5f602084013e6113a4565b606091505b50915091506113b48683836113bf565b925050509392505050565b6060826113d4576113cf8261144c565b611444565b5f82511480156113fa57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561143c57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016114339190611b12565b60405180910390fd5b819050611445565b5b9392505050565b5f8151111561145e5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b6114a281611490565b82525050565b5f6040820190506114bb5f830185611499565b6114c86020830184611499565b9392505050565b5f6020820190506114e25f830184611499565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61152a826114e8565b61153481856114f2565b9350611544818560208601611502565b61154d81611510565b840191505092915050565b5f6020820190508181035f8301526115708184611520565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115a58261157c565b9050919050565b6115b58161159b565b81146115bf575f80fd5b50565b5f813590506115d0816115ac565b92915050565b6115df81611490565b81146115e9575f80fd5b50565b5f813590506115fa816115d6565b92915050565b5f806040838503121561161657611615611578565b5b5f611623858286016115c2565b9250506020611634858286016115ec565b9150509250929050565b5f8115159050919050565b6116528161163e565b82525050565b5f60208201905061166b5f830184611649565b92915050565b5f819050919050565b5f61169461168f61168a8461157c565b611671565b61157c565b9050919050565b5f6116a58261167a565b9050919050565b5f6116b68261169b565b9050919050565b6116c6816116ac565b82525050565b5f6020820190506116df5f8301846116bd565b92915050565b5f805f606084860312156116fc576116fb611578565b5b5f611709868287016115c2565b935050602061171a868287016115c2565b925050604061172b868287016115ec565b9150509250925092565b5f6020828403121561174a57611749611578565b5b5f611757848285016115ec565b91505092915050565b5f60ff82169050919050565b61177581611760565b82525050565b5f60208201905061178e5f83018461176c565b92915050565b5f602082840312156117a9576117a8611578565b5b5f6117b6848285016115c2565b91505092915050565b5f80604083850312156117d5576117d4611578565b5b5f6117e2858286016115c2565b92505060206117f3858286016115c2565b9150509250929050565b5f806040838503121561181357611812611578565b5b5f611820858286016115ec565b9250506020611831858286016115ec565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061187f57607f821691505b6020821081036118925761189161183b565b5b50919050565b7f496e76616c696420736861726520616d6f756e740000000000000000000000005f82015250565b5f6118cc6014836114f2565b91506118d782611898565b602082019050919050565b5f6020820190508181035f8301526118f9816118c0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61193782611490565b915061194283611490565b925082820261195081611490565b9150828204841483151761196757611966611900565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6119a582611490565b91506119b083611490565b9250826119c0576119bf61196e565b5b828204905092915050565b5f6119d582611490565b91506119e083611490565b92508282039050818111156119f8576119f7611900565b5b92915050565b5f606082019050611a115f830186611499565b611a1e6020830185611499565b611a2b6040830184611499565b949350505050565b7f496e76616c696420616d6f756e747300000000000000000000000000000000005f82015250565b5f611a67600f836114f2565b9150611a7282611a33565b602082019050919050565b5f6020820190508181035f830152611a9481611a5b565b9050919050565b5f611aa582611490565b9150611ab083611490565b9250828201905080821115611ac857611ac7611900565b5b92915050565b611ad78161159b565b82525050565b5f606082019050611af05f830186611ace565b611afd6020830185611499565b611b0a6040830184611499565b949350505050565b5f602082019050611b255f830184611ace565b92915050565b5f604082019050611b3e5f830185611ace565b611b4b6020830184611499565b9392505050565b5f606082019050611b655f830186611ace565b611b726020830185611ace565b611b7f6040830184611499565b949350505050565b611b908161163e565b8114611b9a575f80fd5b50565b5f81519050611bab81611b87565b92915050565b5f60208284031215611bc657611bc5611578565b5b5f611bd384828501611b9d565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611bfa82611bdc565b611c048185611be6565b9350611c14818560208601611502565b80840191505092915050565b5f611c2b8284611bf0565b91508190509291505056fea2646970667358221220ac1fbd6d690ef7196695b1b9e0ada3cb31cc88e775fc629936fb1553d916502064736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2184 CODESIZE SUB DUP1 PUSH2 0x2184 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45524334363236205661756C7420546F6B656E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5641554C54343632360000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x40C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x40C JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x4DB JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x163 DUP3 PUSH2 0x13A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x173 DUP2 PUSH2 0x159 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18E DUP2 PUSH2 0x16A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA JUMPI PUSH2 0x1A9 PUSH2 0x136 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B7 DUP6 DUP3 DUP7 ADD PUSH2 0x180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C8 DUP6 DUP3 DUP7 ADD PUSH2 0x180 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x260 JUMPI PUSH2 0x25F PUSH2 0x209 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2C2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x2CC DUP7 DUP4 PUSH2 0x287 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x310 PUSH2 0x30B PUSH2 0x306 DUP5 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x329 DUP4 PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x33D PUSH2 0x335 DUP3 PUSH2 0x317 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x293 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x35C DUP2 DUP5 DUP5 PUSH2 0x320 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37F JUMPI PUSH2 0x374 PUSH0 DUP3 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x362 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3C4 JUMPI PUSH2 0x395 DUP2 PUSH2 0x266 JUMP JUMPDEST PUSH2 0x39E DUP5 PUSH2 0x278 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3AD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3C1 PUSH2 0x3B9 DUP6 PUSH2 0x278 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x361 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3C9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3FC DUP4 DUP4 PUSH2 0x3D5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x415 DUP3 PUSH2 0x1D2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42E JUMPI PUSH2 0x42D PUSH2 0x1DC JUMP JUMPDEST JUMPDEST PUSH2 0x438 DUP3 SLOAD PUSH2 0x236 JUMP JUMPDEST PUSH2 0x443 DUP3 DUP3 DUP6 PUSH2 0x383 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x474 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x462 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x46C DUP6 DUP3 PUSH2 0x3F1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x482 DUP7 PUSH2 0x266 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x484 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4C6 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4C2 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3D5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1C6C PUSH2 0x518 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x59E ADD MSTORE DUP2 DUP2 PUSH2 0x749 ADD MSTORE PUSH2 0x898 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x42C ADD MSTORE DUP2 DUP2 PUSH2 0x553 ADD MSTORE PUSH2 0x84B ADD MSTORE PUSH2 0x1C6C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x332 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xA6E61855 EQ PUSH2 0x296 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1F9 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x2D2CEC4 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP3 SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP3 SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1794 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x17BF JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x6 SLOAD SWAP2 POP PUSH1 0x7 SLOAD SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x387 SWAP1 PUSH2 0x1868 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0x1868 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x412 PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP PUSH2 0x41F DUP2 DUP6 DUP6 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x461 PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP PUSH2 0x46E DUP6 DUP3 DUP6 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x479 DUP6 DUP6 DUP6 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x48F PUSH2 0xB86 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4DA PUSH2 0x44E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 SLOAD DUP6 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x7 SLOAD DUP6 PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST SWAP2 POP PUSH2 0x51C CALLER DUP6 PUSH2 0xBCC JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x597 CALLER DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5E2 CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x62C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x63D PUSH2 0xCCA JUMP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69E SWAP1 PUSH2 0x1868 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CA SWAP1 PUSH2 0x1868 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x715 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x715 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x72F PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP PUSH2 0x73C DUP2 DUP6 DUP6 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F6 PUSH2 0xB86 JUMP JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x804 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83A SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x890 CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCD4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x8DD CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCD4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH2 0x8E6 PUSH2 0x44E JUMP JUMPDEST SUB PUSH2 0x906 JUMPI PUSH2 0x8FF DUP3 DUP5 PUSH2 0x8FA SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST SWAP1 POP PUSH2 0x951 JUMP JUMPDEST PUSH2 0x94E PUSH1 0x6 SLOAD PUSH2 0x914 PUSH2 0x44E JUMP JUMPDEST DUP6 PUSH2 0x91F SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x934 PUSH2 0x44E JUMP JUMPDEST DUP6 PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x949 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x962 SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x97A SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x98B CALLER DUP3 PUSH2 0xDE5 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9E5 PUSH2 0xCCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9FF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE64 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA0F DUP5 DUP5 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA90 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA81 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE64 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB06 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB81 DUP4 DUP4 DUP4 PUSH2 0x1033 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC47 DUP3 PUSH0 DUP4 PUSH2 0x1033 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCC5 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC7E SWAP3 SWAP2 SWAP1 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x124C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD50 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD09 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x124C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0xDBB JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0xD7D SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDB5 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0xD9A SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0xDA4 SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST SWAP1 POP PUSH2 0xD80 JUMP JUMPDEST POP PUSH2 0xDC8 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0xDC7 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xDDB JUMPI DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE55 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE60 PUSH0 DUP4 DUP4 PUSH2 0x1033 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECB SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF44 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3B SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x102D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1083 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1151 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x110C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1103 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1198 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11E2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x123F SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1276 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x129A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1298 SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12DC JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D3 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12EE DUP4 DUP4 PUSH0 PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x133D JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1334 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1365 SWAP2 SWAP1 PUSH2 0x1C20 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x139F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13B4 DUP7 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x13D4 JUMPI PUSH2 0x13CF DUP3 PUSH2 0x144C JUMP JUMPDEST PUSH2 0x1444 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x13FA JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x143C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1433 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1445 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x145E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A2 DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14BB PUSH0 DUP4 ADD DUP6 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x14C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x152A DUP3 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x1534 DUP2 DUP6 PUSH2 0x14F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1544 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x154D DUP2 PUSH2 0x1510 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1570 DUP2 DUP5 PUSH2 0x1520 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15A5 DUP3 PUSH2 0x157C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x159B JUMP JUMPDEST DUP2 EQ PUSH2 0x15BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D0 DUP2 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DF DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15FA DUP2 PUSH2 0x15D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1616 JUMPI PUSH2 0x1615 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1623 DUP6 DUP3 DUP7 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1634 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1652 DUP2 PUSH2 0x163E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166B PUSH0 DUP4 ADD DUP5 PUSH2 0x1649 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1694 PUSH2 0x168F PUSH2 0x168A DUP5 PUSH2 0x157C JUMP JUMPDEST PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x157C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16A5 DUP3 PUSH2 0x167A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16B6 DUP3 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16C6 DUP2 PUSH2 0x16AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16DF PUSH0 DUP4 ADD DUP5 PUSH2 0x16BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1709 DUP7 DUP3 DUP8 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x171A DUP7 DUP3 DUP8 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x172B DUP7 DUP3 DUP8 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x174A JUMPI PUSH2 0x1749 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1757 DUP5 DUP3 DUP6 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1775 DUP2 PUSH2 0x1760 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x178E PUSH0 DUP4 ADD DUP5 PUSH2 0x176C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A9 JUMPI PUSH2 0x17A8 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B6 DUP5 DUP3 DUP6 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D5 JUMPI PUSH2 0x17D4 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E2 DUP6 DUP3 DUP7 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17F3 DUP6 DUP3 DUP7 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1813 JUMPI PUSH2 0x1812 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1820 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1831 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x187F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1892 JUMPI PUSH2 0x1891 PUSH2 0x183B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420736861726520616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18CC PUSH1 0x14 DUP4 PUSH2 0x14F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D7 DUP3 PUSH2 0x1898 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F9 DUP2 PUSH2 0x18C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1937 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x1942 DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1950 DUP2 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1967 JUMPI PUSH2 0x1966 PUSH2 0x1900 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19A5 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x19B0 DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x196E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19D5 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E0 DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19F8 JUMPI PUSH2 0x19F7 PUSH2 0x1900 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A11 PUSH0 DUP4 ADD DUP7 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x1A1E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x1A2B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A67 PUSH1 0xF DUP4 PUSH2 0x14F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A72 DUP3 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A94 DUP2 PUSH2 0x1A5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA5 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB0 DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AC8 JUMPI PUSH2 0x1AC7 PUSH2 0x1900 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD7 DUP2 PUSH2 0x159B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AF0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1AFD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x1B0A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B25 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ACE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B3E PUSH0 DUP4 ADD DUP6 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1B4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B65 PUSH0 DUP4 ADD DUP7 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1B72 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1B7F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1B90 DUP2 PUSH2 0x163E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B9A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BAB DUP2 PUSH2 0x1B87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC6 JUMPI PUSH2 0x1BC5 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD3 DUP5 DUP3 DUP6 ADD PUSH2 0x1B9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFA DUP3 PUSH2 0x1BDC JUMP JUMPDEST PUSH2 0x1C04 DUP2 DUP6 PUSH2 0x1BE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C14 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1502 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2B DUP3 DUP5 PUSH2 0x1BF0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0x1F 0xBD PUSH14 0x690EF7196695B1B9E0ADA3CB31CC DUP9 0xE7 PUSH22 0xFC629936FB1553D916502064736F6C634300081A0033 ",
							"sourceMap": "297:3227:9:-:0;;;524:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1713:1:8;1917:7;:21;;;;638:7:9::1;622:24;;;;;;;;::::0;::::1;672:7;656:24;;;;;;;;::::0;::::1;524:163:::0;;297:3227;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;297:3227:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 2546,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 3684,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 3020,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1031": {
									"entryPoint": 4684,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 3557,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1346": {
									"entryPoint": 2539,
									"id": 1346,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1421": {
									"entryPoint": 3274,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1413": {
									"entryPoint": 2950,
									"id": 1413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1333": {
									"entryPoint": 5196,
									"id": 1333,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_650": {
									"entryPoint": 2564,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 2710,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 4147,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1899,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1032,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1610,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1602,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deposit_1585": {
									"entryPoint": 2029,
									"id": 1585,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_1201": {
									"entryPoint": 4854,
									"id": 1201,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1155": {
									"entryPoint": 4833,
									"id": 1155,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@min_1758": {
									"entryPoint": 3533,
									"id": 1758,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 888,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_868": {
									"entryPoint": 3284,
									"id": 868,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_841": {
									"entryPoint": 3147,
									"id": 841,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sqrt_1740": {
									"entryPoint": 3414,
									"id": 1740,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 1679,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token0_1450": {
									"entryPoint": 1066,
									"id": 1450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_1453": {
									"entryPoint": 1863,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAssets0_1455": {
									"entryPoint": 1823,
									"id": 1455,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAssets1_1457": {
									"entryPoint": 882,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAssets_1683": {
									"entryPoint": 866,
									"id": 1683,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@totalSupply_224": {
									"entryPoint": 1102,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1111,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1829,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_1293": {
									"entryPoint": 5055,
									"id": 1293,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1666": {
									"entryPoint": 1157,
									"id": 1666,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_t_address": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5288,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6654,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6510,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc": {
									"entryPoint": 6296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15029:10",
										"nodeType": "YulBlock",
										"src": "0:15029:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "340:206:10",
													"nodeType": "YulBlock",
													"src": "340:206:10",
													"statements": [
														{
															"nativeSrc": "350:26:10",
															"nodeType": "YulAssignment",
															"src": "350:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "373:2:10",
																		"nodeType": "YulLiteral",
																		"src": "373:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "358:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:10"
																},
																"nativeSrc": "358:18:10",
																"nodeType": "YulFunctionCall",
																"src": "358:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "350:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "350:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "430:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "430:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "443:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "443:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "454:1:10",
																				"nodeType": "YulLiteral",
																				"src": "454:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "439:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "439:3:10"
																		},
																		"nativeSrc": "439:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "439:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "386:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "386:43:10"
																},
																"nativeSrc": "386:71:10",
																"nodeType": "YulFunctionCall",
																"src": "386:71:10"
															},
															"nativeSrc": "386:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "386:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "511:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "511:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "524:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "524:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "535:2:10",
																				"nodeType": "YulLiteral",
																				"src": "535:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:10"
																		},
																		"nativeSrc": "520:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "520:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "467:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "467:43:10"
																},
																"nativeSrc": "467:72:10",
																"nodeType": "YulFunctionCall",
																"src": "467:72:10"
															},
															"nativeSrc": "467:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "467:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "214:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "304:9:10",
														"nodeType": "YulTypedName",
														"src": "304:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "316:6:10",
														"nodeType": "YulTypedName",
														"src": "316:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "324:6:10",
														"nodeType": "YulTypedName",
														"src": "324:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "335:4:10",
														"nodeType": "YulTypedName",
														"src": "335:4:10",
														"type": ""
													}
												],
												"src": "214:332:10"
											},
											{
												"body": {
													"nativeSrc": "650:124:10",
													"nodeType": "YulBlock",
													"src": "650:124:10",
													"statements": [
														{
															"nativeSrc": "660:26:10",
															"nodeType": "YulAssignment",
															"src": "660:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "672:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "672:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "683:2:10",
																		"nodeType": "YulLiteral",
																		"src": "683:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "668:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:10"
																},
																"nativeSrc": "668:18:10",
																"nodeType": "YulFunctionCall",
																"src": "668:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "660:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "660:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "740:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "740:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "753:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "753:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "764:1:10",
																				"nodeType": "YulLiteral",
																				"src": "764:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "749:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "749:3:10"
																		},
																		"nativeSrc": "749:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "749:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "696:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "696:43:10"
																},
																"nativeSrc": "696:71:10",
																"nodeType": "YulFunctionCall",
																"src": "696:71:10"
															},
															"nativeSrc": "696:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "696:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "552:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "622:9:10",
														"nodeType": "YulTypedName",
														"src": "622:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "634:6:10",
														"nodeType": "YulTypedName",
														"src": "634:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "645:4:10",
														"nodeType": "YulTypedName",
														"src": "645:4:10",
														"type": ""
													}
												],
												"src": "552:222:10"
											},
											{
												"body": {
													"nativeSrc": "839:40:10",
													"nodeType": "YulBlock",
													"src": "839:40:10",
													"statements": [
														{
															"nativeSrc": "850:22:10",
															"nodeType": "YulAssignment",
															"src": "850:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "866:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "866:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "860:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "860:5:10"
																},
																"nativeSrc": "860:12:10",
																"nodeType": "YulFunctionCall",
																"src": "860:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "850:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "850:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "780:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "822:5:10",
														"nodeType": "YulTypedName",
														"src": "822:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "832:6:10",
														"nodeType": "YulTypedName",
														"src": "832:6:10",
														"type": ""
													}
												],
												"src": "780:99:10"
											},
											{
												"body": {
													"nativeSrc": "981:73:10",
													"nodeType": "YulBlock",
													"src": "981:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "998:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "998:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1003:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1003:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "991:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "991:6:10"
																},
																"nativeSrc": "991:19:10",
																"nodeType": "YulFunctionCall",
																"src": "991:19:10"
															},
															"nativeSrc": "991:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "991:19:10"
														},
														{
															"nativeSrc": "1019:29:10",
															"nodeType": "YulAssignment",
															"src": "1019:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1038:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1038:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1043:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1043:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1034:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1034:3:10"
																},
																"nativeSrc": "1034:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1034:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1019:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1019:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "885:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "953:3:10",
														"nodeType": "YulTypedName",
														"src": "953:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "958:6:10",
														"nodeType": "YulTypedName",
														"src": "958:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "969:11:10",
														"nodeType": "YulTypedName",
														"src": "969:11:10",
														"type": ""
													}
												],
												"src": "885:169:10"
											},
											{
												"body": {
													"nativeSrc": "1122:77:10",
													"nodeType": "YulBlock",
													"src": "1122:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1139:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1139:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1144:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1149:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1149:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1133:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1133:5:10"
																},
																"nativeSrc": "1133:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1133:23:10"
															},
															"nativeSrc": "1133:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "1133:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1176:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1176:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1181:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1181:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1172:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1172:3:10"
																		},
																		"nativeSrc": "1172:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1172:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1190:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1190:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1165:6:10"
																},
																"nativeSrc": "1165:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1165:27:10"
															},
															"nativeSrc": "1165:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1165:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1060:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1104:3:10",
														"nodeType": "YulTypedName",
														"src": "1104:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1109:3:10",
														"nodeType": "YulTypedName",
														"src": "1109:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1114:6:10",
														"nodeType": "YulTypedName",
														"src": "1114:6:10",
														"type": ""
													}
												],
												"src": "1060:139:10"
											},
											{
												"body": {
													"nativeSrc": "1253:54:10",
													"nodeType": "YulBlock",
													"src": "1253:54:10",
													"statements": [
														{
															"nativeSrc": "1263:38:10",
															"nodeType": "YulAssignment",
															"src": "1263:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1281:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1288:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1288:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1277:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1277:3:10"
																		},
																		"nativeSrc": "1277:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1277:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1297:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1297:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1293:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1293:3:10"
																		},
																		"nativeSrc": "1293:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1293:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1273:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1273:3:10"
																},
																"nativeSrc": "1273:28:10",
																"nodeType": "YulFunctionCall",
																"src": "1273:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1263:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1263:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1205:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1236:5:10",
														"nodeType": "YulTypedName",
														"src": "1236:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1246:6:10",
														"nodeType": "YulTypedName",
														"src": "1246:6:10",
														"type": ""
													}
												],
												"src": "1205:102:10"
											},
											{
												"body": {
													"nativeSrc": "1405:285:10",
													"nodeType": "YulBlock",
													"src": "1405:285:10",
													"statements": [
														{
															"nativeSrc": "1415:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1415:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1462:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1462:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1429:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:32:10"
																},
																"nativeSrc": "1429:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1419:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1419:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1477:78:10",
															"nodeType": "YulAssignment",
															"src": "1477:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1543:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1543:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1548:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1548:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1484:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "1484:58:10"
																},
																"nativeSrc": "1484:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1484:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1477:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1603:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1603:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1610:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1610:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1599:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1599:3:10"
																		},
																		"nativeSrc": "1599:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1599:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1617:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1617:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1622:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1622:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1564:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1564:34:10"
																},
																"nativeSrc": "1564:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1564:65:10"
															},
															"nativeSrc": "1564:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1564:65:10"
														},
														{
															"nativeSrc": "1638:46:10",
															"nodeType": "YulAssignment",
															"src": "1638:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1649:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1649:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1676:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1654:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "1654:21:10"
																		},
																		"nativeSrc": "1654:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1654:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1645:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:10"
																},
																"nativeSrc": "1645:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1645:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1638:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1638:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1313:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1386:5:10",
														"nodeType": "YulTypedName",
														"src": "1386:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1393:3:10",
														"nodeType": "YulTypedName",
														"src": "1393:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1401:3:10",
														"nodeType": "YulTypedName",
														"src": "1401:3:10",
														"type": ""
													}
												],
												"src": "1313:377:10"
											},
											{
												"body": {
													"nativeSrc": "1814:195:10",
													"nodeType": "YulBlock",
													"src": "1814:195:10",
													"statements": [
														{
															"nativeSrc": "1824:26:10",
															"nodeType": "YulAssignment",
															"src": "1824:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1836:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1836:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1847:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1847:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1832:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1832:3:10"
																},
																"nativeSrc": "1832:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1832:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1824:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1824:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1871:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1871:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1882:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1882:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1867:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1867:3:10"
																		},
																		"nativeSrc": "1867:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1867:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1890:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1890:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1896:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1896:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1886:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1886:3:10"
																		},
																		"nativeSrc": "1886:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1886:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1860:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:10"
																},
																"nativeSrc": "1860:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1860:47:10"
															},
															"nativeSrc": "1860:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1860:47:10"
														},
														{
															"nativeSrc": "1916:86:10",
															"nodeType": "YulAssignment",
															"src": "1916:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1988:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1988:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1997:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1997:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1924:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1924:63:10"
																},
																"nativeSrc": "1924:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1924:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1916:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1916:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1696:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1786:9:10",
														"nodeType": "YulTypedName",
														"src": "1786:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1798:6:10",
														"nodeType": "YulTypedName",
														"src": "1798:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1809:4:10",
														"nodeType": "YulTypedName",
														"src": "1809:4:10",
														"type": ""
													}
												],
												"src": "1696:313:10"
											},
											{
												"body": {
													"nativeSrc": "2055:35:10",
													"nodeType": "YulBlock",
													"src": "2055:35:10",
													"statements": [
														{
															"nativeSrc": "2065:19:10",
															"nodeType": "YulAssignment",
															"src": "2065:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2081:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2081:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2075:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2075:5:10"
																},
																"nativeSrc": "2075:9:10",
																"nodeType": "YulFunctionCall",
																"src": "2075:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2065:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2065:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2015:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2048:6:10",
														"nodeType": "YulTypedName",
														"src": "2048:6:10",
														"type": ""
													}
												],
												"src": "2015:75:10"
											},
											{
												"body": {
													"nativeSrc": "2185:28:10",
													"nodeType": "YulBlock",
													"src": "2185:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2202:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2202:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2205:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2195:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2195:6:10"
																},
																"nativeSrc": "2195:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2195:12:10"
															},
															"nativeSrc": "2195:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2195:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2096:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2096:117:10"
											},
											{
												"body": {
													"nativeSrc": "2308:28:10",
													"nodeType": "YulBlock",
													"src": "2308:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2325:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2325:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2328:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2328:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2318:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:10"
																},
																"nativeSrc": "2318:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2318:12:10"
															},
															"nativeSrc": "2318:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2318:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2219:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2219:117:10"
											},
											{
												"body": {
													"nativeSrc": "2387:81:10",
													"nodeType": "YulBlock",
													"src": "2387:81:10",
													"statements": [
														{
															"nativeSrc": "2397:65:10",
															"nodeType": "YulAssignment",
															"src": "2397:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2412:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2412:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2419:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2419:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2408:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:10"
																},
																"nativeSrc": "2408:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2408:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2397:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2397:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2342:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2369:5:10",
														"nodeType": "YulTypedName",
														"src": "2369:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2379:7:10",
														"nodeType": "YulTypedName",
														"src": "2379:7:10",
														"type": ""
													}
												],
												"src": "2342:126:10"
											},
											{
												"body": {
													"nativeSrc": "2519:51:10",
													"nodeType": "YulBlock",
													"src": "2519:51:10",
													"statements": [
														{
															"nativeSrc": "2529:35:10",
															"nodeType": "YulAssignment",
															"src": "2529:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2558:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2558:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2540:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2540:17:10"
																},
																"nativeSrc": "2540:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2540:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2529:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2529:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2474:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2501:5:10",
														"nodeType": "YulTypedName",
														"src": "2501:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2511:7:10",
														"nodeType": "YulTypedName",
														"src": "2511:7:10",
														"type": ""
													}
												],
												"src": "2474:96:10"
											},
											{
												"body": {
													"nativeSrc": "2619:79:10",
													"nodeType": "YulBlock",
													"src": "2619:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2676:16:10",
																"nodeType": "YulBlock",
																"src": "2676:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2685:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2685:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2688:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2688:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2678:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2678:6:10"
																			},
																			"nativeSrc": "2678:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2678:12:10"
																		},
																		"nativeSrc": "2678:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2678:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2642:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2642:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2649:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2649:17:10"
																				},
																				"nativeSrc": "2649:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2649:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2639:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2639:2:10"
																		},
																		"nativeSrc": "2639:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2632:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2632:6:10"
																},
																"nativeSrc": "2632:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2632:43:10"
															},
															"nativeSrc": "2629:63:10",
															"nodeType": "YulIf",
															"src": "2629:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2576:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2612:5:10",
														"nodeType": "YulTypedName",
														"src": "2612:5:10",
														"type": ""
													}
												],
												"src": "2576:122:10"
											},
											{
												"body": {
													"nativeSrc": "2756:87:10",
													"nodeType": "YulBlock",
													"src": "2756:87:10",
													"statements": [
														{
															"nativeSrc": "2766:29:10",
															"nodeType": "YulAssignment",
															"src": "2766:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2788:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2788:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2775:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2775:12:10"
																},
																"nativeSrc": "2775:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2775:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2766:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2766:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2831:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2831:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2804:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2804:26:10"
																},
																"nativeSrc": "2804:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2804:33:10"
															},
															"nativeSrc": "2804:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2804:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2704:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2734:6:10",
														"nodeType": "YulTypedName",
														"src": "2734:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2742:3:10",
														"nodeType": "YulTypedName",
														"src": "2742:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2750:5:10",
														"nodeType": "YulTypedName",
														"src": "2750:5:10",
														"type": ""
													}
												],
												"src": "2704:139:10"
											},
											{
												"body": {
													"nativeSrc": "2892:79:10",
													"nodeType": "YulBlock",
													"src": "2892:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2949:16:10",
																"nodeType": "YulBlock",
																"src": "2949:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2958:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2958:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2961:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2961:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2951:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2951:6:10"
																			},
																			"nativeSrc": "2951:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2951:12:10"
																		},
																		"nativeSrc": "2951:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2951:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2915:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2915:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2940:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2940:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2922:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2922:17:10"
																				},
																				"nativeSrc": "2922:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2922:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2912:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2912:2:10"
																		},
																		"nativeSrc": "2912:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2912:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2905:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2905:6:10"
																},
																"nativeSrc": "2905:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2905:43:10"
															},
															"nativeSrc": "2902:63:10",
															"nodeType": "YulIf",
															"src": "2902:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2849:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2885:5:10",
														"nodeType": "YulTypedName",
														"src": "2885:5:10",
														"type": ""
													}
												],
												"src": "2849:122:10"
											},
											{
												"body": {
													"nativeSrc": "3029:87:10",
													"nodeType": "YulBlock",
													"src": "3029:87:10",
													"statements": [
														{
															"nativeSrc": "3039:29:10",
															"nodeType": "YulAssignment",
															"src": "3039:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3061:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3048:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3048:12:10"
																},
																"nativeSrc": "3048:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3048:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3039:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3039:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3104:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3104:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3077:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:26:10"
																},
																"nativeSrc": "3077:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3077:33:10"
															},
															"nativeSrc": "3077:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3077:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2977:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3007:6:10",
														"nodeType": "YulTypedName",
														"src": "3007:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3015:3:10",
														"nodeType": "YulTypedName",
														"src": "3015:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3023:5:10",
														"nodeType": "YulTypedName",
														"src": "3023:5:10",
														"type": ""
													}
												],
												"src": "2977:139:10"
											},
											{
												"body": {
													"nativeSrc": "3205:391:10",
													"nodeType": "YulBlock",
													"src": "3205:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3251:83:10",
																"nodeType": "YulBlock",
																"src": "3251:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3253:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3253:77:10"
																			},
																			"nativeSrc": "3253:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3253:79:10"
																		},
																		"nativeSrc": "3253:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3253:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3226:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3226:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3235:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3235:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3222:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3222:3:10"
																		},
																		"nativeSrc": "3222:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3222:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3247:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3247:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3218:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:10"
																},
																"nativeSrc": "3218:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3218:32:10"
															},
															"nativeSrc": "3215:119:10",
															"nodeType": "YulIf",
															"src": "3215:119:10"
														},
														{
															"nativeSrc": "3344:117:10",
															"nodeType": "YulBlock",
															"src": "3344:117:10",
															"statements": [
																{
																	"nativeSrc": "3359:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3359:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3373:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3373:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3363:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3363:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3388:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3388:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3423:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3423:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3434:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3434:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3419:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3419:3:10"
																				},
																				"nativeSrc": "3419:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3419:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3443:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3443:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3398:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3398:20:10"
																		},
																		"nativeSrc": "3398:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3398:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3388:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3388:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3471:118:10",
															"nodeType": "YulBlock",
															"src": "3471:118:10",
															"statements": [
																{
																	"nativeSrc": "3486:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3486:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3500:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3500:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3490:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3490:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3516:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3516:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3551:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3551:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3562:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3562:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3547:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3547:3:10"
																				},
																				"nativeSrc": "3547:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3547:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3571:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3571:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3526:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3526:20:10"
																		},
																		"nativeSrc": "3526:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3526:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3516:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3516:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3122:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3167:9:10",
														"nodeType": "YulTypedName",
														"src": "3167:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3178:7:10",
														"nodeType": "YulTypedName",
														"src": "3178:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3190:6:10",
														"nodeType": "YulTypedName",
														"src": "3190:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3198:6:10",
														"nodeType": "YulTypedName",
														"src": "3198:6:10",
														"type": ""
													}
												],
												"src": "3122:474:10"
											},
											{
												"body": {
													"nativeSrc": "3644:48:10",
													"nodeType": "YulBlock",
													"src": "3644:48:10",
													"statements": [
														{
															"nativeSrc": "3654:32:10",
															"nodeType": "YulAssignment",
															"src": "3654:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3679:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3679:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3672:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3672:6:10"
																		},
																		"nativeSrc": "3672:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3672:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3665:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3665:6:10"
																},
																"nativeSrc": "3665:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3665:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3654:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3654:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3602:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3626:5:10",
														"nodeType": "YulTypedName",
														"src": "3626:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3636:7:10",
														"nodeType": "YulTypedName",
														"src": "3636:7:10",
														"type": ""
													}
												],
												"src": "3602:90:10"
											},
											{
												"body": {
													"nativeSrc": "3757:50:10",
													"nodeType": "YulBlock",
													"src": "3757:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3774:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3774:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3794:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3794:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3779:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3779:14:10"
																		},
																		"nativeSrc": "3779:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3779:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3767:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3767:6:10"
																},
																"nativeSrc": "3767:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3767:34:10"
															},
															"nativeSrc": "3767:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3767:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3698:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3745:5:10",
														"nodeType": "YulTypedName",
														"src": "3745:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3752:3:10",
														"nodeType": "YulTypedName",
														"src": "3752:3:10",
														"type": ""
													}
												],
												"src": "3698:109:10"
											},
											{
												"body": {
													"nativeSrc": "3905:118:10",
													"nodeType": "YulBlock",
													"src": "3905:118:10",
													"statements": [
														{
															"nativeSrc": "3915:26:10",
															"nodeType": "YulAssignment",
															"src": "3915:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3927:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3927:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3938:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3938:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3923:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3923:3:10"
																},
																"nativeSrc": "3923:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3923:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3915:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3915:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3989:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3989:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4002:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4002:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4013:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4013:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3998:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:10"
																		},
																		"nativeSrc": "3998:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3951:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3951:37:10"
																},
																"nativeSrc": "3951:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3951:65:10"
															},
															"nativeSrc": "3951:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3951:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3813:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3877:9:10",
														"nodeType": "YulTypedName",
														"src": "3877:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3889:6:10",
														"nodeType": "YulTypedName",
														"src": "3889:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3900:4:10",
														"nodeType": "YulTypedName",
														"src": "3900:4:10",
														"type": ""
													}
												],
												"src": "3813:210:10"
											},
											{
												"body": {
													"nativeSrc": "4061:28:10",
													"nodeType": "YulBlock",
													"src": "4061:28:10",
													"statements": [
														{
															"nativeSrc": "4071:12:10",
															"nodeType": "YulAssignment",
															"src": "4071:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "4078:5:10",
																"nodeType": "YulIdentifier",
																"src": "4078:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4071:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4071:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4029:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4047:5:10",
														"nodeType": "YulTypedName",
														"src": "4047:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4057:3:10",
														"nodeType": "YulTypedName",
														"src": "4057:3:10",
														"type": ""
													}
												],
												"src": "4029:60:10"
											},
											{
												"body": {
													"nativeSrc": "4155:82:10",
													"nodeType": "YulBlock",
													"src": "4155:82:10",
													"statements": [
														{
															"nativeSrc": "4165:66:10",
															"nodeType": "YulAssignment",
															"src": "4165:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4223:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4223:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4205:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4205:17:10"
																				},
																				"nativeSrc": "4205:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4205:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4196:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "4196:8:10"
																		},
																		"nativeSrc": "4196:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4196:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4178:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4178:17:10"
																},
																"nativeSrc": "4178:53:10",
																"nodeType": "YulFunctionCall",
																"src": "4178:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4165:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4165:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4095:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4135:5:10",
														"nodeType": "YulTypedName",
														"src": "4135:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4145:9:10",
														"nodeType": "YulTypedName",
														"src": "4145:9:10",
														"type": ""
													}
												],
												"src": "4095:142:10"
											},
											{
												"body": {
													"nativeSrc": "4303:66:10",
													"nodeType": "YulBlock",
													"src": "4303:66:10",
													"statements": [
														{
															"nativeSrc": "4313:50:10",
															"nodeType": "YulAssignment",
															"src": "4313:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4357:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4357:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4326:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4326:30:10"
																},
																"nativeSrc": "4326:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4326:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4313:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4313:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4243:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4283:5:10",
														"nodeType": "YulTypedName",
														"src": "4283:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4293:9:10",
														"nodeType": "YulTypedName",
														"src": "4293:9:10",
														"type": ""
													}
												],
												"src": "4243:126:10"
											},
											{
												"body": {
													"nativeSrc": "4449:66:10",
													"nodeType": "YulBlock",
													"src": "4449:66:10",
													"statements": [
														{
															"nativeSrc": "4459:50:10",
															"nodeType": "YulAssignment",
															"src": "4459:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4503:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4503:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4472:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4472:30:10"
																},
																"nativeSrc": "4472:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4472:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4459:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4459:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "4375:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4429:5:10",
														"nodeType": "YulTypedName",
														"src": "4429:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4439:9:10",
														"nodeType": "YulTypedName",
														"src": "4439:9:10",
														"type": ""
													}
												],
												"src": "4375:140:10"
											},
											{
												"body": {
													"nativeSrc": "4600:80:10",
													"nodeType": "YulBlock",
													"src": "4600:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4617:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4617:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4667:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4667:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "4622:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "4622:44:10"
																		},
																		"nativeSrc": "4622:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4622:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4610:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4610:6:10"
																},
																"nativeSrc": "4610:64:10",
																"nodeType": "YulFunctionCall",
																"src": "4610:64:10"
															},
															"nativeSrc": "4610:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "4610:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "4521:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4588:5:10",
														"nodeType": "YulTypedName",
														"src": "4588:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4595:3:10",
														"nodeType": "YulTypedName",
														"src": "4595:3:10",
														"type": ""
													}
												],
												"src": "4521:159:10"
											},
											{
												"body": {
													"nativeSrc": "4798:138:10",
													"nodeType": "YulBlock",
													"src": "4798:138:10",
													"statements": [
														{
															"nativeSrc": "4808:26:10",
															"nodeType": "YulAssignment",
															"src": "4808:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4820:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4820:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4831:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4831:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4816:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4816:3:10"
																},
																"nativeSrc": "4816:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4816:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4808:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4808:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4902:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4902:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4915:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4915:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4926:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4926:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4911:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:10"
																		},
																		"nativeSrc": "4911:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4911:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "4844:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "4844:57:10"
																},
																"nativeSrc": "4844:85:10",
																"nodeType": "YulFunctionCall",
																"src": "4844:85:10"
															},
															"nativeSrc": "4844:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "4844:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "4686:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4770:9:10",
														"nodeType": "YulTypedName",
														"src": "4770:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4782:6:10",
														"nodeType": "YulTypedName",
														"src": "4782:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4793:4:10",
														"nodeType": "YulTypedName",
														"src": "4793:4:10",
														"type": ""
													}
												],
												"src": "4686:250:10"
											},
											{
												"body": {
													"nativeSrc": "5042:519:10",
													"nodeType": "YulBlock",
													"src": "5042:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5088:83:10",
																"nodeType": "YulBlock",
																"src": "5088:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5090:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5090:77:10"
																			},
																			"nativeSrc": "5090:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5090:79:10"
																		},
																		"nativeSrc": "5090:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5090:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5063:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5063:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5072:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5072:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5059:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5059:3:10"
																		},
																		"nativeSrc": "5059:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5059:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5084:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5084:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5055:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5055:3:10"
																},
																"nativeSrc": "5055:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5055:32:10"
															},
															"nativeSrc": "5052:119:10",
															"nodeType": "YulIf",
															"src": "5052:119:10"
														},
														{
															"nativeSrc": "5181:117:10",
															"nodeType": "YulBlock",
															"src": "5181:117:10",
															"statements": [
																{
																	"nativeSrc": "5196:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5196:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5210:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5210:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5200:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5200:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5225:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5225:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5260:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5260:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5271:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5271:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5256:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5256:3:10"
																				},
																				"nativeSrc": "5256:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5256:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5280:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5280:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5235:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5235:20:10"
																		},
																		"nativeSrc": "5235:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5235:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5225:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5225:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5308:118:10",
															"nodeType": "YulBlock",
															"src": "5308:118:10",
															"statements": [
																{
																	"nativeSrc": "5323:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5323:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5337:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5337:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5327:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5327:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5353:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5353:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5388:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5388:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5399:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5399:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5384:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5384:3:10"
																				},
																				"nativeSrc": "5384:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5384:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5408:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5408:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5363:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5363:20:10"
																		},
																		"nativeSrc": "5363:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5363:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5353:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5353:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5436:118:10",
															"nodeType": "YulBlock",
															"src": "5436:118:10",
															"statements": [
																{
																	"nativeSrc": "5451:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5451:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5465:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5465:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5455:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5455:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5481:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5481:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5516:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5516:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5527:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5527:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5512:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5512:3:10"
																				},
																				"nativeSrc": "5512:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5512:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5536:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5536:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5491:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5491:20:10"
																		},
																		"nativeSrc": "5491:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5491:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5481:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5481:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4942:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4996:9:10",
														"nodeType": "YulTypedName",
														"src": "4996:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5007:7:10",
														"nodeType": "YulTypedName",
														"src": "5007:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5019:6:10",
														"nodeType": "YulTypedName",
														"src": "5019:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5027:6:10",
														"nodeType": "YulTypedName",
														"src": "5027:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5035:6:10",
														"nodeType": "YulTypedName",
														"src": "5035:6:10",
														"type": ""
													}
												],
												"src": "4942:619:10"
											},
											{
												"body": {
													"nativeSrc": "5633:263:10",
													"nodeType": "YulBlock",
													"src": "5633:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5679:83:10",
																"nodeType": "YulBlock",
																"src": "5679:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5681:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5681:77:10"
																			},
																			"nativeSrc": "5681:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5681:79:10"
																		},
																		"nativeSrc": "5681:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5681:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5654:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5654:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5663:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5663:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5650:3:10"
																		},
																		"nativeSrc": "5650:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5650:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5675:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5646:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:10"
																},
																"nativeSrc": "5646:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5646:32:10"
															},
															"nativeSrc": "5643:119:10",
															"nodeType": "YulIf",
															"src": "5643:119:10"
														},
														{
															"nativeSrc": "5772:117:10",
															"nodeType": "YulBlock",
															"src": "5772:117:10",
															"statements": [
																{
																	"nativeSrc": "5787:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5787:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5801:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5801:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5791:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5791:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5816:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5816:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5851:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5851:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5862:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5862:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5847:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5847:3:10"
																				},
																				"nativeSrc": "5847:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5847:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5871:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5871:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5826:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5826:20:10"
																		},
																		"nativeSrc": "5826:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5826:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5816:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5816:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5567:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5603:9:10",
														"nodeType": "YulTypedName",
														"src": "5603:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5614:7:10",
														"nodeType": "YulTypedName",
														"src": "5614:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5626:6:10",
														"nodeType": "YulTypedName",
														"src": "5626:6:10",
														"type": ""
													}
												],
												"src": "5567:329:10"
											},
											{
												"body": {
													"nativeSrc": "5945:43:10",
													"nodeType": "YulBlock",
													"src": "5945:43:10",
													"statements": [
														{
															"nativeSrc": "5955:27:10",
															"nodeType": "YulAssignment",
															"src": "5955:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5970:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5970:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5977:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5977:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5966:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5966:3:10"
																},
																"nativeSrc": "5966:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5966:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5955:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5955:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5902:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5927:5:10",
														"nodeType": "YulTypedName",
														"src": "5927:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5937:7:10",
														"nodeType": "YulTypedName",
														"src": "5937:7:10",
														"type": ""
													}
												],
												"src": "5902:86:10"
											},
											{
												"body": {
													"nativeSrc": "6055:51:10",
													"nodeType": "YulBlock",
													"src": "6055:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6072:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6072:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6093:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6093:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6077:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "6077:15:10"
																		},
																		"nativeSrc": "6077:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6077:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6065:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6065:6:10"
																},
																"nativeSrc": "6065:35:10",
																"nodeType": "YulFunctionCall",
																"src": "6065:35:10"
															},
															"nativeSrc": "6065:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "6065:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5994:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6043:5:10",
														"nodeType": "YulTypedName",
														"src": "6043:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6050:3:10",
														"nodeType": "YulTypedName",
														"src": "6050:3:10",
														"type": ""
													}
												],
												"src": "5994:112:10"
											},
											{
												"body": {
													"nativeSrc": "6206:120:10",
													"nodeType": "YulBlock",
													"src": "6206:120:10",
													"statements": [
														{
															"nativeSrc": "6216:26:10",
															"nodeType": "YulAssignment",
															"src": "6216:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6228:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6228:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6239:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6239:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6224:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6224:3:10"
																},
																"nativeSrc": "6224:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6224:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6216:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6216:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6292:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6292:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6305:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6305:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6316:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6316:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6301:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6301:3:10"
																		},
																		"nativeSrc": "6301:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6301:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6252:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "6252:39:10"
																},
																"nativeSrc": "6252:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6252:67:10"
															},
															"nativeSrc": "6252:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "6252:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6112:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6178:9:10",
														"nodeType": "YulTypedName",
														"src": "6178:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6190:6:10",
														"nodeType": "YulTypedName",
														"src": "6190:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6201:4:10",
														"nodeType": "YulTypedName",
														"src": "6201:4:10",
														"type": ""
													}
												],
												"src": "6112:214:10"
											},
											{
												"body": {
													"nativeSrc": "6398:263:10",
													"nodeType": "YulBlock",
													"src": "6398:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6444:83:10",
																"nodeType": "YulBlock",
																"src": "6444:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6446:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6446:77:10"
																			},
																			"nativeSrc": "6446:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6446:79:10"
																		},
																		"nativeSrc": "6446:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6446:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6419:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6419:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6428:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6428:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6415:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6415:3:10"
																		},
																		"nativeSrc": "6415:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6415:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6440:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6440:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6411:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6411:3:10"
																},
																"nativeSrc": "6411:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6411:32:10"
															},
															"nativeSrc": "6408:119:10",
															"nodeType": "YulIf",
															"src": "6408:119:10"
														},
														{
															"nativeSrc": "6537:117:10",
															"nodeType": "YulBlock",
															"src": "6537:117:10",
															"statements": [
																{
																	"nativeSrc": "6552:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6552:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6566:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6566:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6556:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6556:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6581:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6581:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6616:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6616:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6627:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6627:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6612:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6612:3:10"
																				},
																				"nativeSrc": "6612:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6612:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6636:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6636:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6591:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6591:20:10"
																		},
																		"nativeSrc": "6591:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6591:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6581:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6581:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6332:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6368:9:10",
														"nodeType": "YulTypedName",
														"src": "6368:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6379:7:10",
														"nodeType": "YulTypedName",
														"src": "6379:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6391:6:10",
														"nodeType": "YulTypedName",
														"src": "6391:6:10",
														"type": ""
													}
												],
												"src": "6332:329:10"
											},
											{
												"body": {
													"nativeSrc": "6750:391:10",
													"nodeType": "YulBlock",
													"src": "6750:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6796:83:10",
																"nodeType": "YulBlock",
																"src": "6796:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6798:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6798:77:10"
																			},
																			"nativeSrc": "6798:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6798:79:10"
																		},
																		"nativeSrc": "6798:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6798:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6771:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6771:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6780:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6780:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6767:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6767:3:10"
																		},
																		"nativeSrc": "6767:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6767:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6792:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6792:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6763:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6763:3:10"
																},
																"nativeSrc": "6763:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6763:32:10"
															},
															"nativeSrc": "6760:119:10",
															"nodeType": "YulIf",
															"src": "6760:119:10"
														},
														{
															"nativeSrc": "6889:117:10",
															"nodeType": "YulBlock",
															"src": "6889:117:10",
															"statements": [
																{
																	"nativeSrc": "6904:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6904:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6918:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6918:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6908:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6908:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6933:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6933:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6968:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6968:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6979:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6979:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6964:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6964:3:10"
																				},
																				"nativeSrc": "6964:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6964:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6988:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6988:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6943:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6943:20:10"
																		},
																		"nativeSrc": "6943:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6943:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6933:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6933:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7016:118:10",
															"nodeType": "YulBlock",
															"src": "7016:118:10",
															"statements": [
																{
																	"nativeSrc": "7031:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7031:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7045:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7045:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7035:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7035:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7061:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7061:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7096:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7096:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7107:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7107:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7092:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7092:3:10"
																				},
																				"nativeSrc": "7092:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7092:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7116:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7116:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7071:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7071:20:10"
																		},
																		"nativeSrc": "7071:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7071:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7061:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7061:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6667:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6712:9:10",
														"nodeType": "YulTypedName",
														"src": "6712:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6723:7:10",
														"nodeType": "YulTypedName",
														"src": "6723:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6735:6:10",
														"nodeType": "YulTypedName",
														"src": "6735:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6743:6:10",
														"nodeType": "YulTypedName",
														"src": "6743:6:10",
														"type": ""
													}
												],
												"src": "6667:474:10"
											},
											{
												"body": {
													"nativeSrc": "7230:391:10",
													"nodeType": "YulBlock",
													"src": "7230:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7276:83:10",
																"nodeType": "YulBlock",
																"src": "7276:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7278:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7278:77:10"
																			},
																			"nativeSrc": "7278:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7278:79:10"
																		},
																		"nativeSrc": "7278:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7278:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7251:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7251:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7260:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7260:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7247:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7247:3:10"
																		},
																		"nativeSrc": "7247:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7247:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7272:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7272:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7243:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7243:3:10"
																},
																"nativeSrc": "7243:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7243:32:10"
															},
															"nativeSrc": "7240:119:10",
															"nodeType": "YulIf",
															"src": "7240:119:10"
														},
														{
															"nativeSrc": "7369:117:10",
															"nodeType": "YulBlock",
															"src": "7369:117:10",
															"statements": [
																{
																	"nativeSrc": "7384:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7384:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7398:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7398:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7388:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7388:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7413:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7413:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7448:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7448:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7459:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7459:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7444:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7444:3:10"
																				},
																				"nativeSrc": "7444:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7444:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7468:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7468:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7423:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7423:20:10"
																		},
																		"nativeSrc": "7423:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7423:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7413:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7413:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7496:118:10",
															"nodeType": "YulBlock",
															"src": "7496:118:10",
															"statements": [
																{
																	"nativeSrc": "7511:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7511:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7525:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7525:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7515:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7515:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7541:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7541:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7576:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7576:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7587:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7587:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7572:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7572:3:10"
																				},
																				"nativeSrc": "7572:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7572:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7596:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7596:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7551:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7551:20:10"
																		},
																		"nativeSrc": "7551:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7551:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7541:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7541:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "7147:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7192:9:10",
														"nodeType": "YulTypedName",
														"src": "7192:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7203:7:10",
														"nodeType": "YulTypedName",
														"src": "7203:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7215:6:10",
														"nodeType": "YulTypedName",
														"src": "7215:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7223:6:10",
														"nodeType": "YulTypedName",
														"src": "7223:6:10",
														"type": ""
													}
												],
												"src": "7147:474:10"
											},
											{
												"body": {
													"nativeSrc": "7655:152:10",
													"nodeType": "YulBlock",
													"src": "7655:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7672:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7672:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7675:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7675:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7665:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7665:6:10"
																},
																"nativeSrc": "7665:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7665:88:10"
															},
															"nativeSrc": "7665:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7665:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7769:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7769:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7772:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7772:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7762:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7762:6:10"
																},
																"nativeSrc": "7762:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7762:15:10"
															},
															"nativeSrc": "7762:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7762:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7793:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7793:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7796:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7796:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7786:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:10"
																},
																"nativeSrc": "7786:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7786:15:10"
															},
															"nativeSrc": "7786:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7786:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7627:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7627:180:10"
											},
											{
												"body": {
													"nativeSrc": "7864:269:10",
													"nodeType": "YulBlock",
													"src": "7864:269:10",
													"statements": [
														{
															"nativeSrc": "7874:22:10",
															"nodeType": "YulAssignment",
															"src": "7874:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7888:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7888:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7894:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7894:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7884:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7884:3:10"
																},
																"nativeSrc": "7884:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7884:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7874:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7874:6:10"
																}
															]
														},
														{
															"nativeSrc": "7905:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7905:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7935:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7935:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7941:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7941:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7931:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7931:3:10"
																},
																"nativeSrc": "7931:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7931:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7909:18:10",
																	"nodeType": "YulTypedName",
																	"src": "7909:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7982:51:10",
																"nodeType": "YulBlock",
																"src": "7982:51:10",
																"statements": [
																	{
																		"nativeSrc": "7996:27:10",
																		"nodeType": "YulAssignment",
																		"src": "7996:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8010:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8010:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8018:4:10",
																					"nodeType": "YulLiteral",
																					"src": "8018:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8006:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8006:3:10"
																			},
																			"nativeSrc": "8006:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8006:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7996:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7996:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7962:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "7962:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7955:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7955:6:10"
																},
																"nativeSrc": "7955:26:10",
																"nodeType": "YulFunctionCall",
																"src": "7955:26:10"
															},
															"nativeSrc": "7952:81:10",
															"nodeType": "YulIf",
															"src": "7952:81:10"
														},
														{
															"body": {
																"nativeSrc": "8085:42:10",
																"nodeType": "YulBlock",
																"src": "8085:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8099:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8099:16:10"
																			},
																			"nativeSrc": "8099:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8099:18:10"
																		},
																		"nativeSrc": "8099:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8099:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8049:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8049:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8072:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8072:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8080:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8080:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8069:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8069:2:10"
																		},
																		"nativeSrc": "8069:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8069:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8046:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8046:2:10"
																},
																"nativeSrc": "8046:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8046:38:10"
															},
															"nativeSrc": "8043:84:10",
															"nodeType": "YulIf",
															"src": "8043:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7813:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7848:4:10",
														"nodeType": "YulTypedName",
														"src": "7848:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7857:6:10",
														"nodeType": "YulTypedName",
														"src": "7857:6:10",
														"type": ""
													}
												],
												"src": "7813:320:10"
											},
											{
												"body": {
													"nativeSrc": "8245:64:10",
													"nodeType": "YulBlock",
													"src": "8245:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8267:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8267:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8275:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8275:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8263:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8263:3:10"
																		},
																		"nativeSrc": "8263:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8263:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420736861726520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "8279:22:10",
																		"nodeType": "YulLiteral",
																		"src": "8279:22:10",
																		"type": "",
																		"value": "Invalid share amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8256:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8256:6:10"
																},
																"nativeSrc": "8256:46:10",
																"nodeType": "YulFunctionCall",
																"src": "8256:46:10"
															},
															"nativeSrc": "8256:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "8256:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc",
												"nativeSrc": "8139:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8237:6:10",
														"nodeType": "YulTypedName",
														"src": "8237:6:10",
														"type": ""
													}
												],
												"src": "8139:170:10"
											},
											{
												"body": {
													"nativeSrc": "8461:220:10",
													"nodeType": "YulBlock",
													"src": "8461:220:10",
													"statements": [
														{
															"nativeSrc": "8471:74:10",
															"nodeType": "YulAssignment",
															"src": "8471:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8537:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8537:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8542:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8542:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8478:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8478:58:10"
																},
																"nativeSrc": "8478:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8478:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8471:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8471:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8643:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8643:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc",
																	"nativeSrc": "8554:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8554:88:10"
																},
																"nativeSrc": "8554:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8554:93:10"
															},
															"nativeSrc": "8554:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8554:93:10"
														},
														{
															"nativeSrc": "8656:19:10",
															"nodeType": "YulAssignment",
															"src": "8656:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8667:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8667:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8672:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8672:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8663:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8663:3:10"
																},
																"nativeSrc": "8663:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8663:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8656:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8656:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8315:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8449:3:10",
														"nodeType": "YulTypedName",
														"src": "8449:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8457:3:10",
														"nodeType": "YulTypedName",
														"src": "8457:3:10",
														"type": ""
													}
												],
												"src": "8315:366:10"
											},
											{
												"body": {
													"nativeSrc": "8858:248:10",
													"nodeType": "YulBlock",
													"src": "8858:248:10",
													"statements": [
														{
															"nativeSrc": "8868:26:10",
															"nodeType": "YulAssignment",
															"src": "8868:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8880:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8880:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8891:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8891:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8876:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8876:3:10"
																},
																"nativeSrc": "8876:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8876:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8868:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8868:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8915:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8915:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8926:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8926:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8911:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8911:3:10"
																		},
																		"nativeSrc": "8911:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8911:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8934:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8934:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8940:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8940:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8930:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8930:3:10"
																		},
																		"nativeSrc": "8930:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8930:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8904:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8904:6:10"
																},
																"nativeSrc": "8904:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8904:47:10"
															},
															"nativeSrc": "8904:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8904:47:10"
														},
														{
															"nativeSrc": "8960:139:10",
															"nodeType": "YulAssignment",
															"src": "8960:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9094:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9094:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8968:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8968:124:10"
																},
																"nativeSrc": "8968:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8968:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8960:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8960:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8687:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8838:9:10",
														"nodeType": "YulTypedName",
														"src": "8838:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8853:4:10",
														"nodeType": "YulTypedName",
														"src": "8853:4:10",
														"type": ""
													}
												],
												"src": "8687:419:10"
											},
											{
												"body": {
													"nativeSrc": "9140:152:10",
													"nodeType": "YulBlock",
													"src": "9140:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9157:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9157:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9160:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9160:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9150:6:10"
																},
																"nativeSrc": "9150:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9150:88:10"
															},
															"nativeSrc": "9150:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9150:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9254:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9257:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9257:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9247:6:10"
																},
																"nativeSrc": "9247:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9247:15:10"
															},
															"nativeSrc": "9247:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9247:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9278:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9281:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9281:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9271:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9271:6:10"
																},
																"nativeSrc": "9271:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9271:15:10"
															},
															"nativeSrc": "9271:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9271:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9112:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9112:180:10"
											},
											{
												"body": {
													"nativeSrc": "9346:362:10",
													"nodeType": "YulBlock",
													"src": "9346:362:10",
													"statements": [
														{
															"nativeSrc": "9356:25:10",
															"nodeType": "YulAssignment",
															"src": "9356:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9379:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9379:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9361:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9361:17:10"
																},
																"nativeSrc": "9361:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9361:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9356:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9356:1:10"
																}
															]
														},
														{
															"nativeSrc": "9390:25:10",
															"nodeType": "YulAssignment",
															"src": "9390:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9413:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9413:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9395:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9395:17:10"
																},
																"nativeSrc": "9395:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9395:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9390:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9390:1:10"
																}
															]
														},
														{
															"nativeSrc": "9424:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9424:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9447:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9447:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9450:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9450:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9443:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9443:3:10"
																},
																"nativeSrc": "9443:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9443:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9428:11:10",
																	"nodeType": "YulTypedName",
																	"src": "9428:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9461:41:10",
															"nodeType": "YulAssignment",
															"src": "9461:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9490:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "9490:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9472:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9472:17:10"
																},
																"nativeSrc": "9472:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9472:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9461:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9461:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9679:22:10",
																"nodeType": "YulBlock",
																"src": "9679:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9681:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9681:16:10"
																			},
																			"nativeSrc": "9681:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9681:18:10"
																		},
																		"nativeSrc": "9681:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9681:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9612:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "9612:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9605:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "9605:6:10"
																				},
																				"nativeSrc": "9605:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9605:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9635:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "9635:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9642:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "9642:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9651:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "9651:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9638:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9638:3:10"
																						},
																						"nativeSrc": "9638:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9638:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9632:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "9632:2:10"
																				},
																				"nativeSrc": "9632:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9632:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9585:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9585:2:10"
																		},
																		"nativeSrc": "9585:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9585:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9565:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9565:6:10"
																},
																"nativeSrc": "9565:113:10",
																"nodeType": "YulFunctionCall",
																"src": "9565:113:10"
															},
															"nativeSrc": "9562:139:10",
															"nodeType": "YulIf",
															"src": "9562:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9298:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9329:1:10",
														"nodeType": "YulTypedName",
														"src": "9329:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9332:1:10",
														"nodeType": "YulTypedName",
														"src": "9332:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9338:7:10",
														"nodeType": "YulTypedName",
														"src": "9338:7:10",
														"type": ""
													}
												],
												"src": "9298:410:10"
											},
											{
												"body": {
													"nativeSrc": "9742:152:10",
													"nodeType": "YulBlock",
													"src": "9742:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9759:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9759:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9762:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9762:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9752:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9752:6:10"
																},
																"nativeSrc": "9752:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9752:88:10"
															},
															"nativeSrc": "9752:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9752:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9856:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9856:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9859:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9859:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9849:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9849:6:10"
																},
																"nativeSrc": "9849:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9849:15:10"
															},
															"nativeSrc": "9849:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9849:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9880:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9880:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9883:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9883:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9873:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9873:6:10"
																},
																"nativeSrc": "9873:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9873:15:10"
															},
															"nativeSrc": "9873:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9873:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9714:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9714:180:10"
											},
											{
												"body": {
													"nativeSrc": "9942:143:10",
													"nodeType": "YulBlock",
													"src": "9942:143:10",
													"statements": [
														{
															"nativeSrc": "9952:25:10",
															"nodeType": "YulAssignment",
															"src": "9952:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9975:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9975:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9957:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9957:17:10"
																},
																"nativeSrc": "9957:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9957:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9952:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9952:1:10"
																}
															]
														},
														{
															"nativeSrc": "9986:25:10",
															"nodeType": "YulAssignment",
															"src": "9986:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10009:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10009:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9991:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9991:17:10"
																},
																"nativeSrc": "9991:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9991:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9986:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9986:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10033:22:10",
																"nodeType": "YulBlock",
																"src": "10033:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10035:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10035:16:10"
																			},
																			"nativeSrc": "10035:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10035:18:10"
																		},
																		"nativeSrc": "10035:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10035:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10030:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10030:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10023:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:10"
																},
																"nativeSrc": "10023:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10023:9:10"
															},
															"nativeSrc": "10020:35:10",
															"nodeType": "YulIf",
															"src": "10020:35:10"
														},
														{
															"nativeSrc": "10065:14:10",
															"nodeType": "YulAssignment",
															"src": "10065:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10074:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10074:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10077:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10077:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10070:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10070:3:10"
																},
																"nativeSrc": "10070:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10070:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10065:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10065:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9900:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9931:1:10",
														"nodeType": "YulTypedName",
														"src": "9931:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9934:1:10",
														"nodeType": "YulTypedName",
														"src": "9934:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9940:1:10",
														"nodeType": "YulTypedName",
														"src": "9940:1:10",
														"type": ""
													}
												],
												"src": "9900:185:10"
											},
											{
												"body": {
													"nativeSrc": "10136:149:10",
													"nodeType": "YulBlock",
													"src": "10136:149:10",
													"statements": [
														{
															"nativeSrc": "10146:25:10",
															"nodeType": "YulAssignment",
															"src": "10146:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10169:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10169:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10151:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10151:17:10"
																},
																"nativeSrc": "10151:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10151:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10146:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10146:1:10"
																}
															]
														},
														{
															"nativeSrc": "10180:25:10",
															"nodeType": "YulAssignment",
															"src": "10180:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10203:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10203:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10185:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10185:17:10"
																},
																"nativeSrc": "10185:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10185:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10180:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10180:1:10"
																}
															]
														},
														{
															"nativeSrc": "10214:17:10",
															"nodeType": "YulAssignment",
															"src": "10214:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10226:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10226:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10229:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10229:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10222:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10222:3:10"
																},
																"nativeSrc": "10222:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10222:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10214:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10214:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10256:22:10",
																"nodeType": "YulBlock",
																"src": "10256:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10258:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10258:16:10"
																			},
																			"nativeSrc": "10258:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10258:18:10"
																		},
																		"nativeSrc": "10258:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10258:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10247:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10247:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10253:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10253:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10244:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10244:2:10"
																},
																"nativeSrc": "10244:11:10",
																"nodeType": "YulFunctionCall",
																"src": "10244:11:10"
															},
															"nativeSrc": "10241:37:10",
															"nodeType": "YulIf",
															"src": "10241:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10091:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10122:1:10",
														"nodeType": "YulTypedName",
														"src": "10122:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10125:1:10",
														"nodeType": "YulTypedName",
														"src": "10125:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10131:4:10",
														"nodeType": "YulTypedName",
														"src": "10131:4:10",
														"type": ""
													}
												],
												"src": "10091:194:10"
											},
											{
												"body": {
													"nativeSrc": "10445:288:10",
													"nodeType": "YulBlock",
													"src": "10445:288:10",
													"statements": [
														{
															"nativeSrc": "10455:26:10",
															"nodeType": "YulAssignment",
															"src": "10455:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10467:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10467:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10478:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10478:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10463:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10463:3:10"
																},
																"nativeSrc": "10463:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10463:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10455:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10455:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10535:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10535:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10548:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10548:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10559:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10559:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10544:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10544:3:10"
																		},
																		"nativeSrc": "10544:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10544:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10491:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10491:43:10"
																},
																"nativeSrc": "10491:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10491:71:10"
															},
															"nativeSrc": "10491:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10491:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10616:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10616:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10629:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10629:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10640:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10640:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10625:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10625:3:10"
																		},
																		"nativeSrc": "10625:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10625:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10572:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10572:43:10"
																},
																"nativeSrc": "10572:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10572:72:10"
															},
															"nativeSrc": "10572:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10572:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10698:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10698:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10711:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10711:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10722:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10722:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10707:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10707:3:10"
																		},
																		"nativeSrc": "10707:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10707:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10654:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10654:43:10"
																},
																"nativeSrc": "10654:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10654:72:10"
															},
															"nativeSrc": "10654:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10654:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10291:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10401:9:10",
														"nodeType": "YulTypedName",
														"src": "10401:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10413:6:10",
														"nodeType": "YulTypedName",
														"src": "10413:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10421:6:10",
														"nodeType": "YulTypedName",
														"src": "10421:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10429:6:10",
														"nodeType": "YulTypedName",
														"src": "10429:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10440:4:10",
														"nodeType": "YulTypedName",
														"src": "10440:4:10",
														"type": ""
													}
												],
												"src": "10291:442:10"
											},
											{
												"body": {
													"nativeSrc": "10845:59:10",
													"nodeType": "YulBlock",
													"src": "10845:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10867:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10867:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10875:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10875:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10863:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10863:3:10"
																		},
																		"nativeSrc": "10863:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10863:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e7473",
																		"kind": "string",
																		"nativeSrc": "10879:17:10",
																		"nodeType": "YulLiteral",
																		"src": "10879:17:10",
																		"type": "",
																		"value": "Invalid amounts"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10856:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10856:6:10"
																},
																"nativeSrc": "10856:41:10",
																"nodeType": "YulFunctionCall",
																"src": "10856:41:10"
															},
															"nativeSrc": "10856:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "10856:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2",
												"nativeSrc": "10739:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10837:6:10",
														"nodeType": "YulTypedName",
														"src": "10837:6:10",
														"type": ""
													}
												],
												"src": "10739:165:10"
											},
											{
												"body": {
													"nativeSrc": "11056:220:10",
													"nodeType": "YulBlock",
													"src": "11056:220:10",
													"statements": [
														{
															"nativeSrc": "11066:74:10",
															"nodeType": "YulAssignment",
															"src": "11066:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11132:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11132:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11137:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11137:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11073:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11073:58:10"
																},
																"nativeSrc": "11073:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11073:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11066:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11066:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11238:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11238:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2",
																	"nativeSrc": "11149:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11149:88:10"
																},
																"nativeSrc": "11149:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11149:93:10"
															},
															"nativeSrc": "11149:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11149:93:10"
														},
														{
															"nativeSrc": "11251:19:10",
															"nodeType": "YulAssignment",
															"src": "11251:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11262:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11262:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11267:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11267:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11258:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11258:3:10"
																},
																"nativeSrc": "11258:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11258:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11251:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11251:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10910:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11044:3:10",
														"nodeType": "YulTypedName",
														"src": "11044:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11052:3:10",
														"nodeType": "YulTypedName",
														"src": "11052:3:10",
														"type": ""
													}
												],
												"src": "10910:366:10"
											},
											{
												"body": {
													"nativeSrc": "11453:248:10",
													"nodeType": "YulBlock",
													"src": "11453:248:10",
													"statements": [
														{
															"nativeSrc": "11463:26:10",
															"nodeType": "YulAssignment",
															"src": "11463:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11475:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11475:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11486:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11486:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11471:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11471:3:10"
																},
																"nativeSrc": "11471:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11471:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11463:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11463:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11510:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11510:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11521:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11521:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11506:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11506:3:10"
																		},
																		"nativeSrc": "11506:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11506:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11529:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11529:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11535:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11535:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11525:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11525:3:10"
																		},
																		"nativeSrc": "11525:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11525:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11499:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11499:6:10"
																},
																"nativeSrc": "11499:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11499:47:10"
															},
															"nativeSrc": "11499:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11499:47:10"
														},
														{
															"nativeSrc": "11555:139:10",
															"nodeType": "YulAssignment",
															"src": "11555:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11689:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11689:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11563:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11563:124:10"
																},
																"nativeSrc": "11563:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11563:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11555:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11555:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11282:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11433:9:10",
														"nodeType": "YulTypedName",
														"src": "11433:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11448:4:10",
														"nodeType": "YulTypedName",
														"src": "11448:4:10",
														"type": ""
													}
												],
												"src": "11282:419:10"
											},
											{
												"body": {
													"nativeSrc": "11751:147:10",
													"nodeType": "YulBlock",
													"src": "11751:147:10",
													"statements": [
														{
															"nativeSrc": "11761:25:10",
															"nodeType": "YulAssignment",
															"src": "11761:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11784:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11784:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11766:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11766:17:10"
																},
																"nativeSrc": "11766:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11766:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11761:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11761:1:10"
																}
															]
														},
														{
															"nativeSrc": "11795:25:10",
															"nodeType": "YulAssignment",
															"src": "11795:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11818:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11818:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11800:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11800:17:10"
																},
																"nativeSrc": "11800:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11800:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11795:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11795:1:10"
																}
															]
														},
														{
															"nativeSrc": "11829:16:10",
															"nodeType": "YulAssignment",
															"src": "11829:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11840:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11840:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11843:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11843:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11836:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11836:3:10"
																},
																"nativeSrc": "11836:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11836:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11829:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11829:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11869:22:10",
																"nodeType": "YulBlock",
																"src": "11869:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11871:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11871:16:10"
																			},
																			"nativeSrc": "11871:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11871:18:10"
																		},
																		"nativeSrc": "11871:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11871:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11861:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11861:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11864:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11864:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11858:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11858:2:10"
																},
																"nativeSrc": "11858:10:10",
																"nodeType": "YulFunctionCall",
																"src": "11858:10:10"
															},
															"nativeSrc": "11855:36:10",
															"nodeType": "YulIf",
															"src": "11855:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11707:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11738:1:10",
														"nodeType": "YulTypedName",
														"src": "11738:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11741:1:10",
														"nodeType": "YulTypedName",
														"src": "11741:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11747:3:10",
														"nodeType": "YulTypedName",
														"src": "11747:3:10",
														"type": ""
													}
												],
												"src": "11707:191:10"
											},
											{
												"body": {
													"nativeSrc": "11969:53:10",
													"nodeType": "YulBlock",
													"src": "11969:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11986:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11986:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12009:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12009:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11991:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "11991:17:10"
																		},
																		"nativeSrc": "11991:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11991:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11979:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11979:6:10"
																},
																"nativeSrc": "11979:37:10",
																"nodeType": "YulFunctionCall",
																"src": "11979:37:10"
															},
															"nativeSrc": "11979:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "11979:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11904:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11957:5:10",
														"nodeType": "YulTypedName",
														"src": "11957:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11964:3:10",
														"nodeType": "YulTypedName",
														"src": "11964:3:10",
														"type": ""
													}
												],
												"src": "11904:118:10"
											},
											{
												"body": {
													"nativeSrc": "12182:288:10",
													"nodeType": "YulBlock",
													"src": "12182:288:10",
													"statements": [
														{
															"nativeSrc": "12192:26:10",
															"nodeType": "YulAssignment",
															"src": "12192:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12204:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12204:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12215:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12215:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12200:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12200:3:10"
																},
																"nativeSrc": "12200:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12200:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12192:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12192:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12272:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12272:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12285:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12285:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12296:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12296:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12281:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12281:3:10"
																		},
																		"nativeSrc": "12281:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12281:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12228:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12228:43:10"
																},
																"nativeSrc": "12228:71:10",
																"nodeType": "YulFunctionCall",
																"src": "12228:71:10"
															},
															"nativeSrc": "12228:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "12228:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12353:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12353:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12366:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12366:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12377:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12377:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12362:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12362:3:10"
																		},
																		"nativeSrc": "12362:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12362:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12309:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12309:43:10"
																},
																"nativeSrc": "12309:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12309:72:10"
															},
															"nativeSrc": "12309:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12309:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12435:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12435:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12448:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12448:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12459:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12459:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12444:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12444:3:10"
																		},
																		"nativeSrc": "12444:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12444:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12391:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12391:43:10"
																},
																"nativeSrc": "12391:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12391:72:10"
															},
															"nativeSrc": "12391:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12391:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12028:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12138:9:10",
														"nodeType": "YulTypedName",
														"src": "12138:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12150:6:10",
														"nodeType": "YulTypedName",
														"src": "12150:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12158:6:10",
														"nodeType": "YulTypedName",
														"src": "12158:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12166:6:10",
														"nodeType": "YulTypedName",
														"src": "12166:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12177:4:10",
														"nodeType": "YulTypedName",
														"src": "12177:4:10",
														"type": ""
													}
												],
												"src": "12028:442:10"
											},
											{
												"body": {
													"nativeSrc": "12574:124:10",
													"nodeType": "YulBlock",
													"src": "12574:124:10",
													"statements": [
														{
															"nativeSrc": "12584:26:10",
															"nodeType": "YulAssignment",
															"src": "12584:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12596:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12596:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12607:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12607:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12592:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12592:3:10"
																},
																"nativeSrc": "12592:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12592:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12584:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12584:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12664:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12664:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12677:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12677:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12688:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12688:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12673:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12673:3:10"
																		},
																		"nativeSrc": "12673:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12673:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12620:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12620:43:10"
																},
																"nativeSrc": "12620:71:10",
																"nodeType": "YulFunctionCall",
																"src": "12620:71:10"
															},
															"nativeSrc": "12620:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "12620:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12476:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12546:9:10",
														"nodeType": "YulTypedName",
														"src": "12546:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12558:6:10",
														"nodeType": "YulTypedName",
														"src": "12558:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12569:4:10",
														"nodeType": "YulTypedName",
														"src": "12569:4:10",
														"type": ""
													}
												],
												"src": "12476:222:10"
											},
											{
												"body": {
													"nativeSrc": "12830:206:10",
													"nodeType": "YulBlock",
													"src": "12830:206:10",
													"statements": [
														{
															"nativeSrc": "12840:26:10",
															"nodeType": "YulAssignment",
															"src": "12840:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12852:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12852:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12863:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12863:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12848:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12848:3:10"
																},
																"nativeSrc": "12848:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12848:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12840:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12840:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12920:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12920:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12933:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12933:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12944:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12944:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12929:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12929:3:10"
																		},
																		"nativeSrc": "12929:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12929:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12876:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12876:43:10"
																},
																"nativeSrc": "12876:71:10",
																"nodeType": "YulFunctionCall",
																"src": "12876:71:10"
															},
															"nativeSrc": "12876:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "12876:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13001:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13001:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13014:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13014:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13025:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13025:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13010:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13010:3:10"
																		},
																		"nativeSrc": "13010:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13010:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12957:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12957:43:10"
																},
																"nativeSrc": "12957:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12957:72:10"
															},
															"nativeSrc": "12957:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12957:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12704:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12794:9:10",
														"nodeType": "YulTypedName",
														"src": "12794:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12806:6:10",
														"nodeType": "YulTypedName",
														"src": "12806:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12814:6:10",
														"nodeType": "YulTypedName",
														"src": "12814:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12825:4:10",
														"nodeType": "YulTypedName",
														"src": "12825:4:10",
														"type": ""
													}
												],
												"src": "12704:332:10"
											},
											{
												"body": {
													"nativeSrc": "13196:288:10",
													"nodeType": "YulBlock",
													"src": "13196:288:10",
													"statements": [
														{
															"nativeSrc": "13206:26:10",
															"nodeType": "YulAssignment",
															"src": "13206:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13218:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13218:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13229:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13229:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13214:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13214:3:10"
																},
																"nativeSrc": "13214:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13214:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13206:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13206:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13286:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13286:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13299:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13299:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13310:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13310:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13295:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13295:3:10"
																		},
																		"nativeSrc": "13295:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13295:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13242:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13242:43:10"
																},
																"nativeSrc": "13242:71:10",
																"nodeType": "YulFunctionCall",
																"src": "13242:71:10"
															},
															"nativeSrc": "13242:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "13242:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13367:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13367:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13380:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13380:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13391:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13391:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13376:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13376:3:10"
																		},
																		"nativeSrc": "13376:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13376:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13323:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13323:43:10"
																},
																"nativeSrc": "13323:72:10",
																"nodeType": "YulFunctionCall",
																"src": "13323:72:10"
															},
															"nativeSrc": "13323:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "13323:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13449:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13449:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13462:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13462:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13473:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13473:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13458:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13458:3:10"
																		},
																		"nativeSrc": "13458:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13458:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13405:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13405:43:10"
																},
																"nativeSrc": "13405:72:10",
																"nodeType": "YulFunctionCall",
																"src": "13405:72:10"
															},
															"nativeSrc": "13405:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "13405:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13042:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13152:9:10",
														"nodeType": "YulTypedName",
														"src": "13152:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13164:6:10",
														"nodeType": "YulTypedName",
														"src": "13164:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13172:6:10",
														"nodeType": "YulTypedName",
														"src": "13172:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13180:6:10",
														"nodeType": "YulTypedName",
														"src": "13180:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13191:4:10",
														"nodeType": "YulTypedName",
														"src": "13191:4:10",
														"type": ""
													}
												],
												"src": "13042:442:10"
											},
											{
												"body": {
													"nativeSrc": "13530:76:10",
													"nodeType": "YulBlock",
													"src": "13530:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "13584:16:10",
																"nodeType": "YulBlock",
																"src": "13584:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13593:1:10",
																					"nodeType": "YulLiteral",
																					"src": "13593:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13596:1:10",
																					"nodeType": "YulLiteral",
																					"src": "13596:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13586:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13586:6:10"
																			},
																			"nativeSrc": "13586:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13586:12:10"
																		},
																		"nativeSrc": "13586:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13586:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13553:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "13553:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13575:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "13575:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13560:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "13560:14:10"
																				},
																				"nativeSrc": "13560:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13560:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13550:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "13550:2:10"
																		},
																		"nativeSrc": "13550:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13550:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13543:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13543:6:10"
																},
																"nativeSrc": "13543:40:10",
																"nodeType": "YulFunctionCall",
																"src": "13543:40:10"
															},
															"nativeSrc": "13540:60:10",
															"nodeType": "YulIf",
															"src": "13540:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13490:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13523:5:10",
														"nodeType": "YulTypedName",
														"src": "13523:5:10",
														"type": ""
													}
												],
												"src": "13490:116:10"
											},
											{
												"body": {
													"nativeSrc": "13672:77:10",
													"nodeType": "YulBlock",
													"src": "13672:77:10",
													"statements": [
														{
															"nativeSrc": "13682:22:10",
															"nodeType": "YulAssignment",
															"src": "13682:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13697:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13697:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13691:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13691:5:10"
																},
																"nativeSrc": "13691:13:10",
																"nodeType": "YulFunctionCall",
																"src": "13691:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13682:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13682:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13737:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13737:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13713:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "13713:23:10"
																},
																"nativeSrc": "13713:30:10",
																"nodeType": "YulFunctionCall",
																"src": "13713:30:10"
															},
															"nativeSrc": "13713:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "13713:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13612:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13650:6:10",
														"nodeType": "YulTypedName",
														"src": "13650:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13658:3:10",
														"nodeType": "YulTypedName",
														"src": "13658:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13666:5:10",
														"nodeType": "YulTypedName",
														"src": "13666:5:10",
														"type": ""
													}
												],
												"src": "13612:137:10"
											},
											{
												"body": {
													"nativeSrc": "13829:271:10",
													"nodeType": "YulBlock",
													"src": "13829:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "13875:83:10",
																"nodeType": "YulBlock",
																"src": "13875:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13877:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "13877:77:10"
																			},
																			"nativeSrc": "13877:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13877:79:10"
																		},
																		"nativeSrc": "13877:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13877:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13850:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13850:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13859:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13859:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13846:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13846:3:10"
																		},
																		"nativeSrc": "13846:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13846:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13871:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13871:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13842:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13842:3:10"
																},
																"nativeSrc": "13842:32:10",
																"nodeType": "YulFunctionCall",
																"src": "13842:32:10"
															},
															"nativeSrc": "13839:119:10",
															"nodeType": "YulIf",
															"src": "13839:119:10"
														},
														{
															"nativeSrc": "13968:125:10",
															"nodeType": "YulBlock",
															"src": "13968:125:10",
															"statements": [
																{
																	"nativeSrc": "13983:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13983:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13997:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13997:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13987:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13987:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14012:71:10",
																	"nodeType": "YulAssignment",
																	"src": "14012:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14055:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "14055:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14066:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "14066:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14051:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14051:3:10"
																				},
																				"nativeSrc": "14051:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14051:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14075:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14075:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14022:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "14022:28:10"
																		},
																		"nativeSrc": "14022:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14022:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14012:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "14012:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13755:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13799:9:10",
														"nodeType": "YulTypedName",
														"src": "13799:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13810:7:10",
														"nodeType": "YulTypedName",
														"src": "13810:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13822:6:10",
														"nodeType": "YulTypedName",
														"src": "13822:6:10",
														"type": ""
													}
												],
												"src": "13755:345:10"
											},
											{
												"body": {
													"nativeSrc": "14164:40:10",
													"nodeType": "YulBlock",
													"src": "14164:40:10",
													"statements": [
														{
															"nativeSrc": "14175:22:10",
															"nodeType": "YulAssignment",
															"src": "14175:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14191:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14191:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14185:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "14185:5:10"
																},
																"nativeSrc": "14185:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14185:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14175:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14175:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "14106:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14147:5:10",
														"nodeType": "YulTypedName",
														"src": "14147:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14157:6:10",
														"nodeType": "YulTypedName",
														"src": "14157:6:10",
														"type": ""
													}
												],
												"src": "14106:98:10"
											},
											{
												"body": {
													"nativeSrc": "14323:34:10",
													"nodeType": "YulBlock",
													"src": "14323:34:10",
													"statements": [
														{
															"nativeSrc": "14333:18:10",
															"nodeType": "YulAssignment",
															"src": "14333:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "14348:3:10",
																"nodeType": "YulIdentifier",
																"src": "14348:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14333:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "14333:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14210:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14295:3:10",
														"nodeType": "YulTypedName",
														"src": "14295:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14300:6:10",
														"nodeType": "YulTypedName",
														"src": "14300:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14311:11:10",
														"nodeType": "YulTypedName",
														"src": "14311:11:10",
														"type": ""
													}
												],
												"src": "14210:147:10"
											},
											{
												"body": {
													"nativeSrc": "14471:278:10",
													"nodeType": "YulBlock",
													"src": "14471:278:10",
													"statements": [
														{
															"nativeSrc": "14481:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14481:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14527:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14527:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "14495:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "14495:31:10"
																},
																"nativeSrc": "14495:38:10",
																"nodeType": "YulFunctionCall",
																"src": "14495:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14485:6:10",
																	"nodeType": "YulTypedName",
																	"src": "14485:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14542:95:10",
															"nodeType": "YulAssignment",
															"src": "14542:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14625:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14625:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14630:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14630:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14549:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "14549:75:10"
																},
																"nativeSrc": "14549:88:10",
																"nodeType": "YulFunctionCall",
																"src": "14549:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14542:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14542:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14685:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14685:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14692:4:10",
																				"nodeType": "YulLiteral",
																				"src": "14692:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14681:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14681:3:10"
																		},
																		"nativeSrc": "14681:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14681:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14699:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14699:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14704:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14704:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14646:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "14646:34:10"
																},
																"nativeSrc": "14646:65:10",
																"nodeType": "YulFunctionCall",
																"src": "14646:65:10"
															},
															"nativeSrc": "14646:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "14646:65:10"
														},
														{
															"nativeSrc": "14720:23:10",
															"nodeType": "YulAssignment",
															"src": "14720:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14731:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14731:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14736:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14736:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14727:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14727:3:10"
																},
																"nativeSrc": "14727:16:10",
																"nodeType": "YulFunctionCall",
																"src": "14727:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14720:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14720:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14363:386:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14452:5:10",
														"nodeType": "YulTypedName",
														"src": "14452:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14459:3:10",
														"nodeType": "YulTypedName",
														"src": "14459:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14467:3:10",
														"nodeType": "YulTypedName",
														"src": "14467:3:10",
														"type": ""
													}
												],
												"src": "14363:386:10"
											},
											{
												"body": {
													"nativeSrc": "14889:137:10",
													"nodeType": "YulBlock",
													"src": "14889:137:10",
													"statements": [
														{
															"nativeSrc": "14900:100:10",
															"nodeType": "YulAssignment",
															"src": "14900:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14987:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14987:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14996:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14996:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14907:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "14907:79:10"
																},
																"nativeSrc": "14907:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14907:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14900:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14900:3:10"
																}
															]
														},
														{
															"nativeSrc": "15010:10:10",
															"nodeType": "YulAssignment",
															"src": "15010:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "15017:3:10",
																"nodeType": "YulIdentifier",
																"src": "15017:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15010:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15010:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14755:271:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14868:3:10",
														"nodeType": "YulTypedName",
														"src": "14868:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14874:6:10",
														"nodeType": "YulTypedName",
														"src": "14874:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14885:3:10",
														"nodeType": "YulTypedName",
														"src": "14885:3:10",
														"type": ""
													}
												],
												"src": "14755:271:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid share amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amounts\")\n\n    }\n\n    function abi_encode_t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1450": [
									{
										"length": 32,
										"start": 1068
									},
									{
										"length": 32,
										"start": 1363
									},
									{
										"length": 32,
										"start": 2123
									}
								],
								"1453": [
									{
										"length": 32,
										"start": 1438
									},
									{
										"length": 32,
										"start": 1865
									},
									{
										"length": 32,
										"start": 2200
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c8063313ce56711610095578063a9059cbb11610064578063a9059cbb146102b4578063d21220a7146102e4578063dd62ed3e14610302578063e2bbb15814610332576100fe565b8063313ce5671461022a57806370a082311461024857806395d89b4114610278578063a6e6185514610296576100fe565b80630dfe1681116100d15780630dfe16811461018d57806318160ddd146101ab57806323b872dd146101c95780632e1a7d4d146101f9576100fe565b806301e1d1141461010257806302d2cec41461012157806306fdde031461013f578063095ea7b31461015d575b5f80fd5b61010a610362565b6040516101189291906114a8565b60405180910390f35b610129610372565b60405161013691906114cf565b60405180910390f35b610147610378565b6040516101549190611558565b60405180910390f35b61017760048036038101906101729190611600565b610408565b6040516101849190611658565b60405180910390f35b61019561042a565b6040516101a291906116cc565b60405180910390f35b6101b361044e565b6040516101c091906114cf565b60405180910390f35b6101e360048036038101906101de91906116e5565b610457565b6040516101f09190611658565b60405180910390f35b610213600480360381019061020e9190611735565b610485565b6040516102219291906114a8565b60405180910390f35b610232610642565b60405161023f919061177b565b60405180910390f35b610262600480360381019061025d9190611794565b61064a565b60405161026f91906114cf565b60405180910390f35b61028061068f565b60405161028d9190611558565b60405180910390f35b61029e61071f565b6040516102ab91906114cf565b60405180910390f35b6102ce60048036038101906102c99190611600565b610725565b6040516102db9190611658565b60405180910390f35b6102ec610747565b6040516102f991906116cc565b60405180910390f35b61031c600480360381019061031791906117bf565b61076b565b60405161032991906114cf565b60405180910390f35b61034c600480360381019061034791906117fd565b6107ed565b60405161035991906114cf565b60405180910390f35b5f80600654915060075490509091565b60075481565b60606003805461038790611868565b80601f01602080910402602001604051908101604052809291908181526020018280546103b390611868565b80156103fe5780601f106103d5576101008083540402835291602001916103fe565b820191905f5260205f20905b8154815290600101906020018083116103e157829003601f168201915b5050505050905090565b5f806104126109eb565b905061041f8185856109f2565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600254905090565b5f806104616109eb565b905061046e858285610a04565b610479858585610a96565b60019150509392505050565b5f8061048f610b86565b5f83116104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c8906118e2565b60405180910390fd5b5f6104da61044e565b905080600654856104eb919061192d565b6104f5919061199b565b92508060075485610506919061192d565b610510919061199b565b915061051c3385610bcc565b8260065f82825461052d91906119cb565b925050819055508160075f82825461054591906119cb565b9250508190555061059733847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c4b9092919063ffffffff16565b6105e233837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c4b9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca9485858560405161062c939291906119fe565b60405180910390a25061063d610cca565b915091565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461069e90611868565b80601f01602080910402602001604051908101604052809291908181526020018280546106ca90611868565b80156107155780601f106106ec57610100808354040283529160200191610715565b820191905f5260205f20905b8154815290600101906020018083116106f857829003601f168201915b5050505050905090565b60065481565b5f8061072f6109eb565b905061073c818585610a96565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f6107f6610b86565b5f8311801561080457505f82115b610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90611a7d565b60405180910390fd5b6108903330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610cd4909392919063ffffffff16565b6108dd3330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610cd4909392919063ffffffff16565b5f6108e661044e565b03610906576108ff82846108fa919061192d565b610d56565b9050610951565b61094e60065461091461044e565b8561091f919061192d565b610929919061199b565b60075461093461044e565b8561093f919061192d565b610949919061199b565b610dcd565b90505b8260065f8282546109629190611a9b565b925050819055508160075f82825461097a9190611a9b565b9250508190555061098b3382610de5565b3373ffffffffffffffffffffffffffffffffffffffff167f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e8484846040516109d5939291906119fe565b60405180910390a26109e5610cca565b92915050565b5f33905090565b6109ff8383836001610e64565b505050565b5f610a0f848461076b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a905781811015610a81578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a7893929190611add565b60405180910390fd5b610a8f84848484035f610e64565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b06575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610afd9190611b12565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b76575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b6d9190611b12565b60405180910390fd5b610b81838383611033565b505050565b600260055403610bc2576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600581905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c3c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c339190611b12565b60405180910390fd5b610c47825f83611033565b5050565b610cc5838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610c7e929190611b2b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061124c565b505050565b6001600581905550565b610d50848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610d0993929190611b52565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061124c565b50505050565b5f6003821115610dbb578190505f6001600284610d73919061199b565b610d7d9190611a9b565b90505b81811015610db5578091506002818285610d9a919061199b565b610da49190611a9b565b610dae919061199b565b9050610d80565b50610dc8565b5f8214610dc757600190505b5b919050565b5f818310610ddb5781610ddd565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e55575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e4c9190611b12565b60405180910390fd5b610e605f8383611033565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ed4575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ecb9190611b12565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f44575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f3b9190611b12565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561102d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161102491906114cf565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611083578060025f8282546110779190611a9b565b92505081905550611151565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561110c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161110393929190611add565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611198578060025f82825403925050819055506111e2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161123f91906114cf565b60405180910390a3505050565b5f611276828473ffffffffffffffffffffffffffffffffffffffff166112e190919063ffffffff16565b90505f81511415801561129a5750808060200190518101906112989190611bb1565b155b156112dc57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016112d39190611b12565b60405180910390fd5b505050565b60606112ee83835f6112f6565b905092915050565b60608147101561133d57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016113349190611b12565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516113659190611c20565b5f6040518083038185875af1925050503d805f811461139f576040519150601f19603f3d011682016040523d82523d5f602084013e6113a4565b606091505b50915091506113b48683836113bf565b925050509392505050565b6060826113d4576113cf8261144c565b611444565b5f82511480156113fa57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561143c57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016114339190611b12565b60405180910390fd5b819050611445565b5b9392505050565b5f8151111561145e5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b6114a281611490565b82525050565b5f6040820190506114bb5f830185611499565b6114c86020830184611499565b9392505050565b5f6020820190506114e25f830184611499565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61152a826114e8565b61153481856114f2565b9350611544818560208601611502565b61154d81611510565b840191505092915050565b5f6020820190508181035f8301526115708184611520565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115a58261157c565b9050919050565b6115b58161159b565b81146115bf575f80fd5b50565b5f813590506115d0816115ac565b92915050565b6115df81611490565b81146115e9575f80fd5b50565b5f813590506115fa816115d6565b92915050565b5f806040838503121561161657611615611578565b5b5f611623858286016115c2565b9250506020611634858286016115ec565b9150509250929050565b5f8115159050919050565b6116528161163e565b82525050565b5f60208201905061166b5f830184611649565b92915050565b5f819050919050565b5f61169461168f61168a8461157c565b611671565b61157c565b9050919050565b5f6116a58261167a565b9050919050565b5f6116b68261169b565b9050919050565b6116c6816116ac565b82525050565b5f6020820190506116df5f8301846116bd565b92915050565b5f805f606084860312156116fc576116fb611578565b5b5f611709868287016115c2565b935050602061171a868287016115c2565b925050604061172b868287016115ec565b9150509250925092565b5f6020828403121561174a57611749611578565b5b5f611757848285016115ec565b91505092915050565b5f60ff82169050919050565b61177581611760565b82525050565b5f60208201905061178e5f83018461176c565b92915050565b5f602082840312156117a9576117a8611578565b5b5f6117b6848285016115c2565b91505092915050565b5f80604083850312156117d5576117d4611578565b5b5f6117e2858286016115c2565b92505060206117f3858286016115c2565b9150509250929050565b5f806040838503121561181357611812611578565b5b5f611820858286016115ec565b9250506020611831858286016115ec565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061187f57607f821691505b6020821081036118925761189161183b565b5b50919050565b7f496e76616c696420736861726520616d6f756e740000000000000000000000005f82015250565b5f6118cc6014836114f2565b91506118d782611898565b602082019050919050565b5f6020820190508181035f8301526118f9816118c0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61193782611490565b915061194283611490565b925082820261195081611490565b9150828204841483151761196757611966611900565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6119a582611490565b91506119b083611490565b9250826119c0576119bf61196e565b5b828204905092915050565b5f6119d582611490565b91506119e083611490565b92508282039050818111156119f8576119f7611900565b5b92915050565b5f606082019050611a115f830186611499565b611a1e6020830185611499565b611a2b6040830184611499565b949350505050565b7f496e76616c696420616d6f756e747300000000000000000000000000000000005f82015250565b5f611a67600f836114f2565b9150611a7282611a33565b602082019050919050565b5f6020820190508181035f830152611a9481611a5b565b9050919050565b5f611aa582611490565b9150611ab083611490565b9250828201905080821115611ac857611ac7611900565b5b92915050565b611ad78161159b565b82525050565b5f606082019050611af05f830186611ace565b611afd6020830185611499565b611b0a6040830184611499565b949350505050565b5f602082019050611b255f830184611ace565b92915050565b5f604082019050611b3e5f830185611ace565b611b4b6020830184611499565b9392505050565b5f606082019050611b655f830186611ace565b611b726020830185611ace565b611b7f6040830184611499565b949350505050565b611b908161163e565b8114611b9a575f80fd5b50565b5f81519050611bab81611b87565b92915050565b5f60208284031215611bc657611bc5611578565b5b5f611bd384828501611b9d565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611bfa82611bdc565b611c048185611be6565b9350611c14818560208601611502565b80840191505092915050565b5f611c2b8284611bf0565b91508190509291505056fea2646970667358221220ac1fbd6d690ef7196695b1b9e0ada3cb31cc88e775fc629936fb1553d916502064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x332 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xA6E61855 EQ PUSH2 0x296 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1F9 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x2D2CEC4 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP3 SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP3 SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1794 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x17BF JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x6 SLOAD SWAP2 POP PUSH1 0x7 SLOAD SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x387 SWAP1 PUSH2 0x1868 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0x1868 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x412 PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP PUSH2 0x41F DUP2 DUP6 DUP6 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x461 PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP PUSH2 0x46E DUP6 DUP3 DUP6 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x479 DUP6 DUP6 DUP6 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x48F PUSH2 0xB86 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4DA PUSH2 0x44E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 SLOAD DUP6 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x7 SLOAD DUP6 PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST SWAP2 POP PUSH2 0x51C CALLER DUP6 PUSH2 0xBCC JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x597 CALLER DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5E2 CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x62C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x63D PUSH2 0xCCA JUMP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69E SWAP1 PUSH2 0x1868 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CA SWAP1 PUSH2 0x1868 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x715 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x715 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x72F PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP PUSH2 0x73C DUP2 DUP6 DUP6 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F6 PUSH2 0xB86 JUMP JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x804 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83A SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x890 CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCD4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x8DD CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCD4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH2 0x8E6 PUSH2 0x44E JUMP JUMPDEST SUB PUSH2 0x906 JUMPI PUSH2 0x8FF DUP3 DUP5 PUSH2 0x8FA SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST SWAP1 POP PUSH2 0x951 JUMP JUMPDEST PUSH2 0x94E PUSH1 0x6 SLOAD PUSH2 0x914 PUSH2 0x44E JUMP JUMPDEST DUP6 PUSH2 0x91F SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x934 PUSH2 0x44E JUMP JUMPDEST DUP6 PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x949 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x962 SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x97A SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x98B CALLER DUP3 PUSH2 0xDE5 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9E5 PUSH2 0xCCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9FF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE64 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA0F DUP5 DUP5 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA90 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA81 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE64 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB06 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB81 DUP4 DUP4 DUP4 PUSH2 0x1033 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC47 DUP3 PUSH0 DUP4 PUSH2 0x1033 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCC5 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC7E SWAP3 SWAP2 SWAP1 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x124C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD50 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD09 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x124C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0xDBB JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0xD7D SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDB5 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0xD9A SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0xDA4 SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST SWAP1 POP PUSH2 0xD80 JUMP JUMPDEST POP PUSH2 0xDC8 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0xDC7 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xDDB JUMPI DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE55 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE60 PUSH0 DUP4 DUP4 PUSH2 0x1033 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECB SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF44 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3B SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x102D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1083 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1151 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x110C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1103 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1198 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11E2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x123F SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1276 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x129A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1298 SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12DC JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D3 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12EE DUP4 DUP4 PUSH0 PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x133D JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1334 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1365 SWAP2 SWAP1 PUSH2 0x1C20 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x139F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13B4 DUP7 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x13D4 JUMPI PUSH2 0x13CF DUP3 PUSH2 0x144C JUMP JUMPDEST PUSH2 0x1444 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x13FA JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x143C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1433 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1445 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x145E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A2 DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14BB PUSH0 DUP4 ADD DUP6 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x14C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x152A DUP3 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x1534 DUP2 DUP6 PUSH2 0x14F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1544 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x154D DUP2 PUSH2 0x1510 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1570 DUP2 DUP5 PUSH2 0x1520 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15A5 DUP3 PUSH2 0x157C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x159B JUMP JUMPDEST DUP2 EQ PUSH2 0x15BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D0 DUP2 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DF DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15FA DUP2 PUSH2 0x15D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1616 JUMPI PUSH2 0x1615 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1623 DUP6 DUP3 DUP7 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1634 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1652 DUP2 PUSH2 0x163E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166B PUSH0 DUP4 ADD DUP5 PUSH2 0x1649 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1694 PUSH2 0x168F PUSH2 0x168A DUP5 PUSH2 0x157C JUMP JUMPDEST PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x157C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16A5 DUP3 PUSH2 0x167A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16B6 DUP3 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16C6 DUP2 PUSH2 0x16AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16DF PUSH0 DUP4 ADD DUP5 PUSH2 0x16BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1709 DUP7 DUP3 DUP8 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x171A DUP7 DUP3 DUP8 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x172B DUP7 DUP3 DUP8 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x174A JUMPI PUSH2 0x1749 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1757 DUP5 DUP3 DUP6 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1775 DUP2 PUSH2 0x1760 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x178E PUSH0 DUP4 ADD DUP5 PUSH2 0x176C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A9 JUMPI PUSH2 0x17A8 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B6 DUP5 DUP3 DUP6 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D5 JUMPI PUSH2 0x17D4 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E2 DUP6 DUP3 DUP7 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17F3 DUP6 DUP3 DUP7 ADD PUSH2 0x15C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1813 JUMPI PUSH2 0x1812 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1820 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1831 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x187F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1892 JUMPI PUSH2 0x1891 PUSH2 0x183B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420736861726520616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18CC PUSH1 0x14 DUP4 PUSH2 0x14F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D7 DUP3 PUSH2 0x1898 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F9 DUP2 PUSH2 0x18C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1937 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x1942 DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1950 DUP2 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1967 JUMPI PUSH2 0x1966 PUSH2 0x1900 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19A5 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x19B0 DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x196E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19D5 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E0 DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19F8 JUMPI PUSH2 0x19F7 PUSH2 0x1900 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A11 PUSH0 DUP4 ADD DUP7 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x1A1E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x1A2B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A67 PUSH1 0xF DUP4 PUSH2 0x14F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A72 DUP3 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A94 DUP2 PUSH2 0x1A5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA5 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB0 DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AC8 JUMPI PUSH2 0x1AC7 PUSH2 0x1900 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD7 DUP2 PUSH2 0x159B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AF0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1AFD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x1B0A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B25 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ACE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B3E PUSH0 DUP4 ADD DUP6 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1B4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B65 PUSH0 DUP4 ADD DUP7 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1B72 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1B7F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1B90 DUP2 PUSH2 0x163E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B9A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BAB DUP2 PUSH2 0x1B87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC6 JUMPI PUSH2 0x1BC5 PUSH2 0x1578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD3 DUP5 DUP3 DUP6 ADD PUSH2 0x1B9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFA DUP3 PUSH2 0x1BDC JUMP JUMPDEST PUSH2 0x1C04 DUP2 DUP6 PUSH2 0x1BE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C14 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1502 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2B DUP3 DUP5 PUSH2 0x1BF0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0x1F 0xBD PUSH14 0x690EF7196695B1B9E0ADA3CB31CC DUP9 0xE7 PUSH22 0xFC629936FB1553D916502064736F6C634300081A0033 ",
							"sourceMap": "297:3227:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:145;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;490:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:30:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1776:784:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3002:82:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;457:27:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;420:30:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;764:956:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2631:145;2675:14;2691;2726:12;;2717:21;;2757:12;;2748:21;;2631:145;;:::o;490:27::-;;;;:::o;2074:89:1:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;384:30:9:-;;;:::o;3144:97:1:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;1776:784:9:-;1841:15;1858;2356:21:8;:19;:21::i;:::-;1902:1:9::1;1893:6;:10;1885:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2021:14;2038:13;:11;:13::i;:::-;2021:30;;2097:6;2081:12;;2072:6;:21;;;;:::i;:::-;2071:32;;;;:::i;:::-;2061:42;;2149:6;2133:12;;2124:6;:21;;;;:::i;:::-;2123:32;;;;:::i;:::-;2113:42;;2200:25;2206:10;2218:6;2200:5;:25::i;:::-;2291:7;2275:12;;:23;;;;;;;:::i;:::-;;;;;;;;2324:7;2308:12;;:23;;;;;;;:::i;:::-;;;;;;;;2401:40;2421:10;2433:7;2401:6;:19;;;;:40;;;;;:::i;:::-;2451;2471:10;2483:7;2451:6;:19;;;;:40;;;;;:::i;:::-;2516:10;2507:46;;;2528:6;2536:7;2545;2507:46;;;;;;;;:::i;:::-;;;;;;;;1875:685;2398:20:8::0;:18;:20::i;:::-;1776:784:9;;;:::o;3002:82:1:-;3051:5;3075:2;3068:9;;3002:82;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;457:27:9:-;;;;:::o;3610:178:1:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;420:30:9:-;;;:::o;3846:140:1:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;764:956:9:-;846:14;2356:21:8;:19;:21::i;:::-;890:1:9::1;880:7;:11;:26;;;;;905:1;895:7;:11;880:26;872:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;998:59;1022:10;1042:4;1049:7;998:6;:23;;;;:59;;;;;;:::i;:::-;1067;1091:10;1111:4;1118:7;1067:6;:23;;;;:59;;;;;;:::i;:::-;1232:1;1215:13;:11;:13::i;:::-;:18:::0;1211:254:::1;;1258:23;1273:7;1263;:17;;;;:::i;:::-;1258:4;:23::i;:::-;1249:32;;1211:254;;;1321:133;1370:12;;1353:13;:11;:13::i;:::-;1343:7;:23;;;;:::i;:::-;1342:40;;;;:::i;:::-;1428:12;;1411:13;:11;:13::i;:::-;1401:7;:23;;;;:::i;:::-;1400:40;;;;:::i;:::-;1321:3;:133::i;:::-;1312:142;;1211:254;1530:7;1514:12;;:23;;;;;;;:::i;:::-;;;;;;;;1563:7;1547:12;;:23;;;;;;;:::i;:::-;;;;;;;;1627:25;1633:10;1645:6;1627:5;:25::i;:::-;1676:10;1668:45;;;1688:7;1697;1706:6;1668:45;;;;;;;;:::i;:::-;;;;;;;;2398:20:8::0;:18;:20::i;:::-;764:956:9;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;2431:307:8:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;;;;2431:307::o;8247:206:1:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;1303:160:5:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;2744:208:8:-;1713:1;2924:7;:21;;;;2744:208::o;1702:188:5:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;2856:309:9:-;2900:6;2926:1;2922;:5;2918:223;;;2947:1;2943:5;;2962:6;2979:1;2975;2971;:5;;;;:::i;:::-;:9;;;;:::i;:::-;2962:18;;2994:89;3005:1;3001;:5;2994:89;;;3030:1;3026:5;;3067:1;3062;3058;3054;:5;;;;:::i;:::-;:9;;;;:::i;:::-;3053:15;;;;:::i;:::-;3049:19;;2994:89;;;2929:164;2918:223;;;3108:1;3103;:6;3099:42;;3129:1;3125:5;;3099:42;2918:223;2856:309;;;:::o;3244:94::-;3295:4;3322:1;3318;:5;:13;;3330:1;3318:13;;;3326:1;3318:13;3311:20;;3244:94;;;;:::o;7721:208:1:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4059:629:5:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:6:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:77:10;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:332::-;335:4;373:2;362:9;358:18;350:26;;386:71;454:1;443:9;439:17;430:6;386:71;:::i;:::-;467:72;535:2;524:9;520:18;511:6;467:72;:::i;:::-;214:332;;;;;:::o;552:222::-;645:4;683:2;672:9;668:18;660:26;;696:71;764:1;753:9;749:17;740:6;696:71;:::i;:::-;552:222;;;;:::o;780:99::-;832:6;866:5;860:12;850:22;;780:99;;;:::o;885:169::-;969:11;1003:6;998:3;991:19;1043:4;1038:3;1034:14;1019:29;;885:169;;;;:::o;1060:139::-;1149:6;1144:3;1139;1133:23;1190:1;1181:6;1176:3;1172:16;1165:27;1060:139;;;:::o;1205:102::-;1246:6;1297:2;1293:7;1288:2;1281:5;1277:14;1273:28;1263:38;;1205:102;;;:::o;1313:377::-;1401:3;1429:39;1462:5;1429:39;:::i;:::-;1484:71;1548:6;1543:3;1484:71;:::i;:::-;1477:78;;1564:65;1622:6;1617:3;1610:4;1603:5;1599:16;1564:65;:::i;:::-;1654:29;1676:6;1654:29;:::i;:::-;1649:3;1645:39;1638:46;;1405:285;1313:377;;;;:::o;1696:313::-;1809:4;1847:2;1836:9;1832:18;1824:26;;1896:9;1890:4;1886:20;1882:1;1871:9;1867:17;1860:47;1924:78;1997:4;1988:6;1924:78;:::i;:::-;1916:86;;1696:313;;;;:::o;2096:117::-;2205:1;2202;2195:12;2342:126;2379:7;2419:42;2412:5;2408:54;2397:65;;2342:126;;;:::o;2474:96::-;2511:7;2540:24;2558:5;2540:24;:::i;:::-;2529:35;;2474:96;;;:::o;2576:122::-;2649:24;2667:5;2649:24;:::i;:::-;2642:5;2639:35;2629:63;;2688:1;2685;2678:12;2629:63;2576:122;:::o;2704:139::-;2750:5;2788:6;2775:20;2766:29;;2804:33;2831:5;2804:33;:::i;:::-;2704:139;;;;:::o;2849:122::-;2922:24;2940:5;2922:24;:::i;:::-;2915:5;2912:35;2902:63;;2961:1;2958;2951:12;2902:63;2849:122;:::o;2977:139::-;3023:5;3061:6;3048:20;3039:29;;3077:33;3104:5;3077:33;:::i;:::-;2977:139;;;;:::o;3122:474::-;3190:6;3198;3247:2;3235:9;3226:7;3222:23;3218:32;3215:119;;;3253:79;;:::i;:::-;3215:119;3373:1;3398:53;3443:7;3434:6;3423:9;3419:22;3398:53;:::i;:::-;3388:63;;3344:117;3500:2;3526:53;3571:7;3562:6;3551:9;3547:22;3526:53;:::i;:::-;3516:63;;3471:118;3122:474;;;;;:::o;3602:90::-;3636:7;3679:5;3672:13;3665:21;3654:32;;3602:90;;;:::o;3698:109::-;3779:21;3794:5;3779:21;:::i;:::-;3774:3;3767:34;3698:109;;:::o;3813:210::-;3900:4;3938:2;3927:9;3923:18;3915:26;;3951:65;4013:1;4002:9;3998:17;3989:6;3951:65;:::i;:::-;3813:210;;;;:::o;4029:60::-;4057:3;4078:5;4071:12;;4029:60;;;:::o;4095:142::-;4145:9;4178:53;4196:34;4205:24;4223:5;4205:24;:::i;:::-;4196:34;:::i;:::-;4178:53;:::i;:::-;4165:66;;4095:142;;;:::o;4243:126::-;4293:9;4326:37;4357:5;4326:37;:::i;:::-;4313:50;;4243:126;;;:::o;4375:140::-;4439:9;4472:37;4503:5;4472:37;:::i;:::-;4459:50;;4375:140;;;:::o;4521:159::-;4622:51;4667:5;4622:51;:::i;:::-;4617:3;4610:64;4521:159;;:::o;4686:250::-;4793:4;4831:2;4820:9;4816:18;4808:26;;4844:85;4926:1;4915:9;4911:17;4902:6;4844:85;:::i;:::-;4686:250;;;;:::o;4942:619::-;5019:6;5027;5035;5084:2;5072:9;5063:7;5059:23;5055:32;5052:119;;;5090:79;;:::i;:::-;5052:119;5210:1;5235:53;5280:7;5271:6;5260:9;5256:22;5235:53;:::i;:::-;5225:63;;5181:117;5337:2;5363:53;5408:7;5399:6;5388:9;5384:22;5363:53;:::i;:::-;5353:63;;5308:118;5465:2;5491:53;5536:7;5527:6;5516:9;5512:22;5491:53;:::i;:::-;5481:63;;5436:118;4942:619;;;;;:::o;5567:329::-;5626:6;5675:2;5663:9;5654:7;5650:23;5646:32;5643:119;;;5681:79;;:::i;:::-;5643:119;5801:1;5826:53;5871:7;5862:6;5851:9;5847:22;5826:53;:::i;:::-;5816:63;;5772:117;5567:329;;;;:::o;5902:86::-;5937:7;5977:4;5970:5;5966:16;5955:27;;5902:86;;;:::o;5994:112::-;6077:22;6093:5;6077:22;:::i;:::-;6072:3;6065:35;5994:112;;:::o;6112:214::-;6201:4;6239:2;6228:9;6224:18;6216:26;;6252:67;6316:1;6305:9;6301:17;6292:6;6252:67;:::i;:::-;6112:214;;;;:::o;6332:329::-;6391:6;6440:2;6428:9;6419:7;6415:23;6411:32;6408:119;;;6446:79;;:::i;:::-;6408:119;6566:1;6591:53;6636:7;6627:6;6616:9;6612:22;6591:53;:::i;:::-;6581:63;;6537:117;6332:329;;;;:::o;6667:474::-;6735:6;6743;6792:2;6780:9;6771:7;6767:23;6763:32;6760:119;;;6798:79;;:::i;:::-;6760:119;6918:1;6943:53;6988:7;6979:6;6968:9;6964:22;6943:53;:::i;:::-;6933:63;;6889:117;7045:2;7071:53;7116:7;7107:6;7096:9;7092:22;7071:53;:::i;:::-;7061:63;;7016:118;6667:474;;;;;:::o;7147:::-;7215:6;7223;7272:2;7260:9;7251:7;7247:23;7243:32;7240:119;;;7278:79;;:::i;:::-;7240:119;7398:1;7423:53;7468:7;7459:6;7448:9;7444:22;7423:53;:::i;:::-;7413:63;;7369:117;7525:2;7551:53;7596:7;7587:6;7576:9;7572:22;7551:53;:::i;:::-;7541:63;;7496:118;7147:474;;;;;:::o;7627:180::-;7675:77;7672:1;7665:88;7772:4;7769:1;7762:15;7796:4;7793:1;7786:15;7813:320;7857:6;7894:1;7888:4;7884:12;7874:22;;7941:1;7935:4;7931:12;7962:18;7952:81;;8018:4;8010:6;8006:17;7996:27;;7952:81;8080:2;8072:6;8069:14;8049:18;8046:38;8043:84;;8099:18;;:::i;:::-;8043:84;7864:269;7813:320;;;:::o;8139:170::-;8279:22;8275:1;8267:6;8263:14;8256:46;8139:170;:::o;8315:366::-;8457:3;8478:67;8542:2;8537:3;8478:67;:::i;:::-;8471:74;;8554:93;8643:3;8554:93;:::i;:::-;8672:2;8667:3;8663:12;8656:19;;8315:366;;;:::o;8687:419::-;8853:4;8891:2;8880:9;8876:18;8868:26;;8940:9;8934:4;8930:20;8926:1;8915:9;8911:17;8904:47;8968:131;9094:4;8968:131;:::i;:::-;8960:139;;8687:419;;;:::o;9112:180::-;9160:77;9157:1;9150:88;9257:4;9254:1;9247:15;9281:4;9278:1;9271:15;9298:410;9338:7;9361:20;9379:1;9361:20;:::i;:::-;9356:25;;9395:20;9413:1;9395:20;:::i;:::-;9390:25;;9450:1;9447;9443:9;9472:30;9490:11;9472:30;:::i;:::-;9461:41;;9651:1;9642:7;9638:15;9635:1;9632:22;9612:1;9605:9;9585:83;9562:139;;9681:18;;:::i;:::-;9562:139;9346:362;9298:410;;;;:::o;9714:180::-;9762:77;9759:1;9752:88;9859:4;9856:1;9849:15;9883:4;9880:1;9873:15;9900:185;9940:1;9957:20;9975:1;9957:20;:::i;:::-;9952:25;;9991:20;10009:1;9991:20;:::i;:::-;9986:25;;10030:1;10020:35;;10035:18;;:::i;:::-;10020:35;10077:1;10074;10070:9;10065:14;;9900:185;;;;:::o;10091:194::-;10131:4;10151:20;10169:1;10151:20;:::i;:::-;10146:25;;10185:20;10203:1;10185:20;:::i;:::-;10180:25;;10229:1;10226;10222:9;10214:17;;10253:1;10247:4;10244:11;10241:37;;;10258:18;;:::i;:::-;10241:37;10091:194;;;;:::o;10291:442::-;10440:4;10478:2;10467:9;10463:18;10455:26;;10491:71;10559:1;10548:9;10544:17;10535:6;10491:71;:::i;:::-;10572:72;10640:2;10629:9;10625:18;10616:6;10572:72;:::i;:::-;10654;10722:2;10711:9;10707:18;10698:6;10654:72;:::i;:::-;10291:442;;;;;;:::o;10739:165::-;10879:17;10875:1;10867:6;10863:14;10856:41;10739:165;:::o;10910:366::-;11052:3;11073:67;11137:2;11132:3;11073:67;:::i;:::-;11066:74;;11149:93;11238:3;11149:93;:::i;:::-;11267:2;11262:3;11258:12;11251:19;;10910:366;;;:::o;11282:419::-;11448:4;11486:2;11475:9;11471:18;11463:26;;11535:9;11529:4;11525:20;11521:1;11510:9;11506:17;11499:47;11563:131;11689:4;11563:131;:::i;:::-;11555:139;;11282:419;;;:::o;11707:191::-;11747:3;11766:20;11784:1;11766:20;:::i;:::-;11761:25;;11800:20;11818:1;11800:20;:::i;:::-;11795:25;;11843:1;11840;11836:9;11829:16;;11864:3;11861:1;11858:10;11855:36;;;11871:18;;:::i;:::-;11855:36;11707:191;;;;:::o;11904:118::-;11991:24;12009:5;11991:24;:::i;:::-;11986:3;11979:37;11904:118;;:::o;12028:442::-;12177:4;12215:2;12204:9;12200:18;12192:26;;12228:71;12296:1;12285:9;12281:17;12272:6;12228:71;:::i;:::-;12309:72;12377:2;12366:9;12362:18;12353:6;12309:72;:::i;:::-;12391;12459:2;12448:9;12444:18;12435:6;12391:72;:::i;:::-;12028:442;;;;;;:::o;12476:222::-;12569:4;12607:2;12596:9;12592:18;12584:26;;12620:71;12688:1;12677:9;12673:17;12664:6;12620:71;:::i;:::-;12476:222;;;;:::o;12704:332::-;12825:4;12863:2;12852:9;12848:18;12840:26;;12876:71;12944:1;12933:9;12929:17;12920:6;12876:71;:::i;:::-;12957:72;13025:2;13014:9;13010:18;13001:6;12957:72;:::i;:::-;12704:332;;;;;:::o;13042:442::-;13191:4;13229:2;13218:9;13214:18;13206:26;;13242:71;13310:1;13299:9;13295:17;13286:6;13242:71;:::i;:::-;13323:72;13391:2;13380:9;13376:18;13367:6;13323:72;:::i;:::-;13405;13473:2;13462:9;13458:18;13449:6;13405:72;:::i;:::-;13042:442;;;;;;:::o;13490:116::-;13560:21;13575:5;13560:21;:::i;:::-;13553:5;13550:32;13540:60;;13596:1;13593;13586:12;13540:60;13490:116;:::o;13612:137::-;13666:5;13697:6;13691:13;13682:22;;13713:30;13737:5;13713:30;:::i;:::-;13612:137;;;;:::o;13755:345::-;13822:6;13871:2;13859:9;13850:7;13846:23;13842:32;13839:119;;;13877:79;;:::i;:::-;13839:119;13997:1;14022:61;14075:7;14066:6;14055:9;14051:22;14022:61;:::i;:::-;14012:71;;13968:125;13755:345;;;;:::o;14106:98::-;14157:6;14191:5;14185:12;14175:22;;14106:98;;;:::o;14210:147::-;14311:11;14348:3;14333:18;;14210:147;;;;:::o;14363:386::-;14467:3;14495:38;14527:5;14495:38;:::i;:::-;14549:88;14630:6;14625:3;14549:88;:::i;:::-;14542:95;;14646:65;14704:6;14699:3;14692:4;14685:5;14681:16;14646:65;:::i;:::-;14736:6;14731:3;14727:16;14720:23;;14471:278;14363:386;;;;:::o;14755:271::-;14885:3;14907:93;14996:3;14987:6;14907:93;:::i;:::-;14900:100;;15017:3;15010:10;;14755:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1455200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "361",
								"deposit(uint256,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"token0()": "infinite",
								"token1()": "infinite",
								"totalAssets()": "infinite",
								"totalAssets0()": "2514",
								"totalAssets1()": "2471",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "63",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 524,
									"end": 687,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 524,
									"end": 687,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 524,
									"end": 687,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 524,
									"end": 687,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 524,
									"end": 687,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 524,
									"end": 687,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 524,
									"end": 687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 524,
									"end": 687,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "45524334363236205661756C7420546F6B656E00000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "5641554C54343632360000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 638,
									"end": 645,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 622,
									"end": 646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 622,
									"end": 646,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 622,
									"end": 646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 622,
									"end": 646,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 622,
									"end": 646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 622,
									"end": 646,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 622,
									"end": 646,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 622,
									"end": 646,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 622,
									"end": 646,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 622,
									"end": 646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 672,
									"end": 679,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 680,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 656,
									"end": 680,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 656,
									"end": 680,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 656,
									"end": 680,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 656,
									"end": 680,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 656,
									"end": 680,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 656,
									"end": 680,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 656,
									"end": 680,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 656,
									"end": 680,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 680,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 524,
									"end": 687,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1453"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1450"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 3524,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac1fbd6d690ef7196695b1b9e0ada3cb31cc88e775fc629936fb1553d916502064736f6c634300081a0033",
									".code": [
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "D21220A7"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "E2BBB158"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "A6E61855"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "DFE1681"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "DFE1681"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "2E1A7D4D"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "1E1D114"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "2D2CEC4"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 297,
											"end": 3524,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2631,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2631,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 490,
											"end": 517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 490,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 490,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 490,
											"end": 517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 517,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 490,
											"end": 517,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 490,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 490,
											"end": 517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 517,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 384,
											"end": 414,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 384,
											"end": 414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 384,
											"end": 414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 414,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 384,
											"end": 414,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 384,
											"end": 414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 384,
											"end": 414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 414,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1776,
											"end": 2560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1776,
											"end": 2560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1776,
											"end": 2560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 457,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 457,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 457,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 457,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 457,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 484,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 457,
											"end": 484,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 457,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 457,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 484,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 420,
											"end": 450,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 420,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 420,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 764,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 764,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 764,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2705,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2738,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2757,
											"end": 2769,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2757,
											"end": 2769,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 490,
											"end": 517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 490,
											"end": 517,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 384,
											"end": 414,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 384,
											"end": 414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1450"
										},
										{
											"begin": 384,
											"end": 414,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 384,
											"end": 414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1903,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1885,
											"end": 1928,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1885,
											"end": 1928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2038,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2038,
											"end": 2051,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2038,
											"end": 2051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2051,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2051,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2103,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2081,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2081,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2078,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2072,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2072,
											"end": 2093,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2093,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2072,
											"end": 2093,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2071,
											"end": 2103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2071,
											"end": 2103,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2071,
											"end": 2103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2071,
											"end": 2103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2071,
											"end": 2103,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2071,
											"end": 2103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2071,
											"end": 2103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2061,
											"end": 2103,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2061,
											"end": 2103,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2155,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2133,
											"end": 2145,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2130,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2124,
											"end": 2145,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2145,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2124,
											"end": 2145,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2145,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2124,
											"end": 2145,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2123,
											"end": 2155,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2123,
											"end": 2155,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2155,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2123,
											"end": 2155,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2155,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2155,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2200,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2206,
											"end": 2216,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2218,
											"end": 2224,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2200,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2200,
											"end": 2225,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2200,
											"end": 2225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2200,
											"end": 2225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2275,
											"end": 2287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 2275,
											"end": 2298,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2298,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2308,
											"end": 2320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 2308,
											"end": 2331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2421,
											"end": 2431,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2440,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1450"
										},
										{
											"begin": 2401,
											"end": 2420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2401,
											"end": 2420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2401,
											"end": 2420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2441,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2471,
											"end": 2481,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2490,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1453"
										},
										{
											"begin": 2451,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2451,
											"end": 2470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2491,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2491,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2491,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2491,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2451,
											"end": 2491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2516,
											"end": 2526,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94"
										},
										{
											"begin": 2528,
											"end": 2534,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2552,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 2507,
											"end": 2553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1875,
											"end": 2560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 2560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 457,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 457,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 457,
											"end": 484,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 457,
											"end": 484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 420,
											"end": 450,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1453"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 420,
											"end": 450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 846,
											"end": 860,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 890,
											"end": 891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 887,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 880,
											"end": 891,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 880,
											"end": 906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 880,
											"end": 906,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 880,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 880,
											"end": 906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 880,
											"end": 906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 905,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 902,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 895,
											"end": 906,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 880,
											"end": 906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 880,
											"end": 906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 872,
											"end": 926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 872,
											"end": 926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1057,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1022,
											"end": 1032,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1046,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1056,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1450"
										},
										{
											"begin": 998,
											"end": 1021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1021,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 998,
											"end": 1021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1057,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1057,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1057,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1057,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1057,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 998,
											"end": 1057,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1091,
											"end": 1101,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1111,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1118,
											"end": 1125,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1073,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1453"
										},
										{
											"begin": 1067,
											"end": 1090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1090,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1067,
											"end": 1090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1126,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1126,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1126,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1126,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1126,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1126,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1067,
											"end": 1126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1215,
											"end": 1226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1215,
											"end": 1228,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1215,
											"end": 1228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1211,
											"end": 1465,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1273,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1270,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1263,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1263,
											"end": 1280,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1263,
											"end": 1280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1258,
											"end": 1281,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1258,
											"end": 1281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1281,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1211,
											"end": 1465,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1465,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1211,
											"end": 1465,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1370,
											"end": 1382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1370,
											"end": 1382,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1353,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1353,
											"end": 1366,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1353,
											"end": 1366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1343,
											"end": 1366,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1366,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1343,
											"end": 1366,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1343,
											"end": 1366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1342,
											"end": 1382,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1342,
											"end": 1382,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1382,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1342,
											"end": 1382,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1428,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1428,
											"end": 1440,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1411,
											"end": 1422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1411,
											"end": 1424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1411,
											"end": 1424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1401,
											"end": 1408,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1401,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1401,
											"end": 1424,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1401,
											"end": 1424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1401,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1401,
											"end": 1424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1401,
											"end": 1424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1401,
											"end": 1424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1400,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1400,
											"end": 1440,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1400,
											"end": 1440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1400,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1400,
											"end": 1440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1400,
											"end": 1440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1400,
											"end": 1440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1321,
											"end": 1454,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1321,
											"end": 1454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1312,
											"end": 1454,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1312,
											"end": 1454,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1465,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1211,
											"end": 1465,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1537,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1514,
											"end": 1526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1514,
											"end": 1537,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1547,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1547,
											"end": 1570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1627,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1633,
											"end": 1643,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1645,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1627,
											"end": 1632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1627,
											"end": 1652,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1627,
											"end": 1652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1627,
											"end": 1652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1686,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E"
										},
										{
											"begin": 1688,
											"end": 1695,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1704,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1668,
											"end": 1713,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1713,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 764,
											"end": 1720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2856,
											"end": 3165,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2856,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2900,
											"end": 2906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2927,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 3141,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2918,
											"end": 3141,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2948,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 2968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2971,
											"end": 2972,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2971,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2971,
											"end": 2976,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2971,
											"end": 2976,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2971,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2971,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2971,
											"end": 2976,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2971,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 2971,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3083,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2994,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3001,
											"end": 3002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3001,
											"end": 3006,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3083,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2994,
											"end": 3083,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3030,
											"end": 3031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3068,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3054,
											"end": 3059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3054,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3053,
											"end": 3068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3053,
											"end": 3068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3068,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3053,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2994,
											"end": 3083,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3083,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2994,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 3093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2918,
											"end": 3141,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 3141,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2918,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3099,
											"end": 3141,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3125,
											"end": 3130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3141,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3099,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 3141,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2918,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 3165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 3165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 3165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 3165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3338,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3244,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3323,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3318,
											"end": 3331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3331,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3318,
											"end": 3331,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3331,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3318,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3326,
											"end": 3327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3331,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3318,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3331,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3338,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3338,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 546,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 335,
											"end": 339,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 358,
											"end": 376,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 350,
											"end": 376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 350,
											"end": 376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 386,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 454,
											"end": 455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 452,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 439,
											"end": 456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 430,
											"end": 436,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 386,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 386,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 386,
											"end": 457,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 386,
											"end": 457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 520,
											"end": 538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 467,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 467,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 467,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 467,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 546,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 214,
											"end": 546,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 552,
											"end": 774,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 552,
											"end": 774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 645,
											"end": 649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 668,
											"end": 686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 660,
											"end": 686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 660,
											"end": 686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 764,
											"end": 765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 762,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 749,
											"end": 766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 740,
											"end": 746,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 696,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 696,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 767,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 696,
											"end": 767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 552,
											"end": 774,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 552,
											"end": 774,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 552,
											"end": 774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 552,
											"end": 774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 552,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 780,
											"end": 879,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 780,
											"end": 879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 832,
											"end": 838,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 860,
											"end": 872,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 850,
											"end": 872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 850,
											"end": 872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 780,
											"end": 879,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 780,
											"end": 879,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 780,
											"end": 879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 780,
											"end": 879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 885,
											"end": 1054,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 885,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 969,
											"end": 980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1009,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1001,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 991,
											"end": 1010,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1047,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1034,
											"end": 1048,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 885,
											"end": 1054,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 885,
											"end": 1054,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 885,
											"end": 1054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 885,
											"end": 1054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 885,
											"end": 1054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1199,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1060,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1142,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1133,
											"end": 1156,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1307,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1205,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1246,
											"end": 1252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1299,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1293,
											"end": 1300,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1277,
											"end": 1291,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1273,
											"end": 1301,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1301,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1307,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1690,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1313,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 1462,
											"end": 1467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 1429,
											"end": 1468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1484,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 1548,
											"end": 1554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1543,
											"end": 1546,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1484,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 1484,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1484,
											"end": 1555,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 1484,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1477,
											"end": 1555,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1477,
											"end": 1555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 1622,
											"end": 1628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1614,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1564,
											"end": 1629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1629,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 1564,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 1676,
											"end": 1682,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1654,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1683,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 1654,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1649,
											"end": 1652,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1645,
											"end": 1684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1690,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1690,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 2009,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1696,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1809,
											"end": 1813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1896,
											"end": 1905,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1906,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 1883,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1907,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1924,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 1994,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1924,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1924,
											"end": 2002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1924,
											"end": 2002,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1924,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 2009,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 2009,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 2009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 2009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 2009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2096,
											"end": 2213,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2096,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2205,
											"end": 2206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2207,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2342,
											"end": 2468,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2342,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2461,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2462,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2342,
											"end": 2468,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2342,
											"end": 2468,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2342,
											"end": 2468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2342,
											"end": 2468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2474,
											"end": 2570,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2474,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2518,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2558,
											"end": 2563,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2540,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2474,
											"end": 2570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2474,
											"end": 2570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2474,
											"end": 2570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2474,
											"end": 2570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2698,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2576,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2667,
											"end": 2672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2649,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2647,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2674,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 2629,
											"end": 2692,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2689,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2678,
											"end": 2690,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2692,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 2629,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2843,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 2704,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2775,
											"end": 2795,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2831,
											"end": 2836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2804,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2843,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2843,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2971,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 2849,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2922,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2946,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2922,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 2947,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 2902,
											"end": 2965,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2961,
											"end": 2962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 2963,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 2965,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 2902,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3116,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2977,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3023,
											"end": 3028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3068,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3077,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3077,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3116,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3596,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3122,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3196,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3204,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3244,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3226,
											"end": 3233,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3245,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3250,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3334,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3215,
											"end": 3334,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3253,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 3253,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 3253,
											"end": 3332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3253,
											"end": 3332,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 3253,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3334,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3215,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3443,
											"end": 3450,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3423,
											"end": 3432,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3398,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3451,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3398,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3388,
											"end": 3451,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3388,
											"end": 3451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3461,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3526,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 3571,
											"end": 3578,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3560,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3526,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3526,
											"end": 3579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3526,
											"end": 3579,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 3526,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3596,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3596,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3692,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3602,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3684,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3685,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3686,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3654,
											"end": 3686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3654,
											"end": 3686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3692,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3807,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3698,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3779,
											"end": 3800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 4023,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 3813,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3940,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 4013,
											"end": 4014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3951,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4016,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3951,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 4023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 4023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 4023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 4023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 4023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4089,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4029,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4078,
											"end": 4083,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4089,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4237,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4095,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4196,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4205,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 4223,
											"end": 4228,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 4205,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4229,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 4205,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4196,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4230,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4196,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 4178,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4231,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4178,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4369,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4243,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4357,
											"end": 4362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4326,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4326,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4326,
											"end": 4363,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4326,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4313,
											"end": 4363,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4313,
											"end": 4363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4369,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4369,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4515,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4375,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4503,
											"end": 4508,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4472,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4680,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4521,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4667,
											"end": 4672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4622,
											"end": 4673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4673,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4622,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4617,
											"end": 4620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4674,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4936,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 4686,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4833,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4820,
											"end": 4829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 4926,
											"end": 4927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4924,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4902,
											"end": 4908,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4844,
											"end": 4929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4929,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 4844,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4936,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4936,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5561,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4942,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5086,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5072,
											"end": 5081,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5082,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5055,
											"end": 5087,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5171,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 5052,
											"end": 5171,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 5090,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5090,
											"end": 5169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5169,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 5090,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5171,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 5052,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5256,
											"end": 5278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5235,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5288,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 5235,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5288,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5181,
											"end": 5298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5388,
											"end": 5397,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5363,
											"end": 5416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5416,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 5363,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5353,
											"end": 5416,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5353,
											"end": 5416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5308,
											"end": 5426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5465,
											"end": 5467,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5491,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 5536,
											"end": 5543,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5525,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5491,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5544,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 5491,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5481,
											"end": 5544,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5481,
											"end": 5544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5436,
											"end": 5554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5561,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5561,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5561,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5896,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5567,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5661,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5673,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5678,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5681,
											"end": 5760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5862,
											"end": 5868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5851,
											"end": 5860,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 5869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5826,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5826,
											"end": 5879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5826,
											"end": 5879,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5826,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 5879,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 5879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 5889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5896,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5896,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5988,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 5902,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5937,
											"end": 5944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5981,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5966,
											"end": 5982,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5988,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6106,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 5994,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 6093,
											"end": 6098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 6077,
											"end": 6099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6072,
											"end": 6075,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6065,
											"end": 6100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6112,
											"end": 6326,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6112,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6201,
											"end": 6205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6228,
											"end": 6237,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 6316,
											"end": 6317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6314,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6298,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 6252,
											"end": 6319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6112,
											"end": 6326,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6112,
											"end": 6326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6112,
											"end": 6326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6112,
											"end": 6326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6112,
											"end": 6326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6661,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 6332,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6442,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6428,
											"end": 6437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6419,
											"end": 6426,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6415,
											"end": 6438,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6443,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6527,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 6408,
											"end": 6527,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6446,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 6446,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 6446,
											"end": 6525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6446,
											"end": 6525,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 6446,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6527,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 6408,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6566,
											"end": 6567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6636,
											"end": 6643,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6627,
											"end": 6633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6616,
											"end": 6625,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6591,
											"end": 6644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6644,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6591,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6581,
											"end": 6644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6581,
											"end": 6644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6661,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6661,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7141,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 6667,
											"end": 7141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6741,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6749,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6794,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6778,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6790,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6763,
											"end": 6795,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6879,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6760,
											"end": 6879,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6798,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 6798,
											"end": 6877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6877,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6798,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6879,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6760,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6988,
											"end": 6995,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6979,
											"end": 6985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6968,
											"end": 6977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6964,
											"end": 6986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6943,
											"end": 6996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6996,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6943,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6996,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7047,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7071,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7116,
											"end": 7123,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7096,
											"end": 7105,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7092,
											"end": 7114,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7071,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 7071,
											"end": 7124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7071,
											"end": 7124,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7071,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7124,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7016,
											"end": 7134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7141,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7141,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7621,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 7147,
											"end": 7621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7215,
											"end": 7221,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7223,
											"end": 7229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7272,
											"end": 7274,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7260,
											"end": 7269,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7258,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7243,
											"end": 7275,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7240,
											"end": 7359,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7240,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 7240,
											"end": 7359,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7278,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7278,
											"end": 7357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7357,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7278,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7240,
											"end": 7359,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 7240,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7398,
											"end": 7399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7423,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7468,
											"end": 7475,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7465,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7457,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7444,
											"end": 7466,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7423,
											"end": 7476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7476,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7423,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7476,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7527,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7551,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7596,
											"end": 7603,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7576,
											"end": 7585,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7551,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7604,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7551,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7541,
											"end": 7604,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7541,
											"end": 7604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7621,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7621,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7627,
											"end": 7807,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7627,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7675,
											"end": 7752,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7672,
											"end": 7673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7772,
											"end": 7776,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 7769,
											"end": 7770,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7762,
											"end": 7777,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7796,
											"end": 7800,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7793,
											"end": 7794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7786,
											"end": 7801,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 8133,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 7813,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7857,
											"end": 7863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7894,
											"end": 7895,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7888,
											"end": 7892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7884,
											"end": 7896,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7874,
											"end": 7896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7874,
											"end": 7896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7942,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7935,
											"end": 7939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7943,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7952,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7952,
											"end": 8033,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8018,
											"end": 8022,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8010,
											"end": 8016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8006,
											"end": 8023,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7952,
											"end": 8033,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7952,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8080,
											"end": 8082,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8083,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8046,
											"end": 8084,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8043,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 8043,
											"end": 8127,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 8099,
											"end": 8117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8043,
											"end": 8127,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 8043,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7864,
											"end": 8133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 8133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 8133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 8133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 8133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8309,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8139,
											"end": 8309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420736861726520616D6F756E74000000000000000000000000"
										},
										{
											"begin": 8275,
											"end": 8276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8263,
											"end": 8277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8302,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8681,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8315,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8457,
											"end": 8460,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 8542,
											"end": 8544,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 8537,
											"end": 8540,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 8478,
											"end": 8545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8545,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 8478,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8545,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 8643,
											"end": 8646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8554,
											"end": 8647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8647,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 8554,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8674,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8667,
											"end": 8670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8663,
											"end": 8675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8681,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 9106,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8687,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8853,
											"end": 8857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8891,
											"end": 8893,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8880,
											"end": 8889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 8894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 8894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8949,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8934,
											"end": 8938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 8950,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8926,
											"end": 8927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8924,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8911,
											"end": 8928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8904,
											"end": 8951,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 9094,
											"end": 9098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8968,
											"end": 9099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9099,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8968,
											"end": 9099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8960,
											"end": 9099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8960,
											"end": 9099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 9106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 9106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 9106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 9106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9292,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 9112,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9237,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9157,
											"end": 9158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9150,
											"end": 9238,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9261,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9254,
											"end": 9255,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9281,
											"end": 9285,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9271,
											"end": 9286,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9708,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 9298,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9361,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 9379,
											"end": 9380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 9361,
											"end": 9381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9381,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 9361,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 9381,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 9381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9395,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 9413,
											"end": 9414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9395,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 9395,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9395,
											"end": 9415,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 9395,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9390,
											"end": 9415,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9390,
											"end": 9415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9450,
											"end": 9451,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9443,
											"end": 9452,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 9472,
											"end": 9502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9502,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 9472,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9651,
											"end": 9652,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9642,
											"end": 9649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 9653,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 9636,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9632,
											"end": 9654,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9612,
											"end": 9613,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9614,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9668,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9562,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 9562,
											"end": 9701,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9681,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 9681,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 9681,
											"end": 9699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9681,
											"end": 9699,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 9681,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9562,
											"end": 9701,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 9562,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9346,
											"end": 9708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9708,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9714,
											"end": 9894,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 9714,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9762,
											"end": 9839,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9760,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9752,
											"end": 9840,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9859,
											"end": 9863,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 9856,
											"end": 9857,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9849,
											"end": 9864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9883,
											"end": 9887,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9880,
											"end": 9881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9873,
											"end": 9888,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 10085,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 9900,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9940,
											"end": 9941,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9975,
											"end": 9976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 9977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 9957,
											"end": 9977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 9977,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9957,
											"end": 9977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9952,
											"end": 9977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9952,
											"end": 9977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 10009,
											"end": 10010,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 9991,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10011,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9991,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9986,
											"end": 10011,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9986,
											"end": 10011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10030,
											"end": 10031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10020,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 10020,
											"end": 10055,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 10035,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10020,
											"end": 10055,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 10020,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10077,
											"end": 10078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10074,
											"end": 10075,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10070,
											"end": 10079,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 10085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 10085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 10085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 10085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 10085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10285,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 10091,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10131,
											"end": 10135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10151,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 10169,
											"end": 10170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10151,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 10151,
											"end": 10171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10151,
											"end": 10171,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 10151,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10146,
											"end": 10171,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10146,
											"end": 10171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10185,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 10203,
											"end": 10204,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10185,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 10185,
											"end": 10205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10185,
											"end": 10205,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 10185,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10205,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10226,
											"end": 10227,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10222,
											"end": 10231,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10214,
											"end": 10231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10214,
											"end": 10231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10253,
											"end": 10254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10247,
											"end": 10251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10244,
											"end": 10255,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10241,
											"end": 10278,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10241,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 10241,
											"end": 10278,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 10258,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10241,
											"end": 10278,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 10241,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10285,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10285,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10733,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 10291,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10440,
											"end": 10444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10478,
											"end": 10480,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10467,
											"end": 10476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10491,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10548,
											"end": 10557,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10544,
											"end": 10561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10535,
											"end": 10541,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10491,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 10491,
											"end": 10562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10491,
											"end": 10562,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10491,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10640,
											"end": 10642,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10629,
											"end": 10638,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10616,
											"end": 10622,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 10572,
											"end": 10644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10644,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10572,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10654,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 10722,
											"end": 10724,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10711,
											"end": 10720,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10698,
											"end": 10704,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10654,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 10654,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10654,
											"end": 10726,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 10654,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10733,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10733,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10904,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 10739,
											"end": 10904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10879,
											"end": 10896,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420616D6F756E74730000000000000000000000000000000000"
										},
										{
											"begin": 10875,
											"end": 10876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10867,
											"end": 10873,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10863,
											"end": 10877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10856,
											"end": 10897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10910,
											"end": 11276,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 10910,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11052,
											"end": 11055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11073,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 11137,
											"end": 11139,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 11132,
											"end": 11135,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11073,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 11073,
											"end": 11140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11073,
											"end": 11140,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 11073,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11149,
											"end": 11242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11238,
											"end": 11241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11149,
											"end": 11242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 11149,
											"end": 11242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11149,
											"end": 11242,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11149,
											"end": 11242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11267,
											"end": 11269,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11262,
											"end": 11265,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11258,
											"end": 11270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11251,
											"end": 11270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11251,
											"end": 11270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10910,
											"end": 11276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10910,
											"end": 11276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10910,
											"end": 11276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10910,
											"end": 11276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11282,
											"end": 11701,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 11282,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11452,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11486,
											"end": 11488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11475,
											"end": 11484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11463,
											"end": 11489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11463,
											"end": 11489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11535,
											"end": 11544,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11533,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11525,
											"end": 11545,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11521,
											"end": 11522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11510,
											"end": 11519,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11506,
											"end": 11523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11499,
											"end": 11546,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 11689,
											"end": 11693,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 11563,
											"end": 11694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11694,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 11563,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11555,
											"end": 11694,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11555,
											"end": 11694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11282,
											"end": 11701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11282,
											"end": 11701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11282,
											"end": 11701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11282,
											"end": 11701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11898,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 11707,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11747,
											"end": 11750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11766,
											"end": 11786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11784,
											"end": 11785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11766,
											"end": 11786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 11766,
											"end": 11786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11766,
											"end": 11786,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11766,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11761,
											"end": 11786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11761,
											"end": 11786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11800,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 11818,
											"end": 11819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11800,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 11800,
											"end": 11820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11800,
											"end": 11820,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 11800,
											"end": 11820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11795,
											"end": 11820,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11795,
											"end": 11820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11843,
											"end": 11844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11840,
											"end": 11841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11836,
											"end": 11845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11829,
											"end": 11845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11829,
											"end": 11845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11861,
											"end": 11862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11858,
											"end": 11868,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 11891,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 11855,
											"end": 11891,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11871,
											"end": 11889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 11871,
											"end": 11889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 11871,
											"end": 11889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11871,
											"end": 11889,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 11871,
											"end": 11889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 11891,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 11855,
											"end": 11891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11898,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12022,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 11904,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11991,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11991,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 11991,
											"end": 12015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11991,
											"end": 12015,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 11991,
											"end": 12015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 11989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11979,
											"end": 12016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12470,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 12028,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12215,
											"end": 12217,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12204,
											"end": 12213,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12200,
											"end": 12218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12192,
											"end": 12218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12192,
											"end": 12218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12228,
											"end": 12299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 12296,
											"end": 12297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12285,
											"end": 12294,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12281,
											"end": 12298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12272,
											"end": 12278,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12228,
											"end": 12299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 12228,
											"end": 12299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12228,
											"end": 12299,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 12228,
											"end": 12299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 12377,
											"end": 12379,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12366,
											"end": 12375,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12362,
											"end": 12380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12353,
											"end": 12359,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 12309,
											"end": 12381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12381,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 12309,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12391,
											"end": 12463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 12459,
											"end": 12461,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12448,
											"end": 12457,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12444,
											"end": 12462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12441,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12391,
											"end": 12463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 12391,
											"end": 12463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12391,
											"end": 12463,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 12391,
											"end": 12463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12470,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12470,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12476,
											"end": 12698,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 12476,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12569,
											"end": 12573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12609,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12596,
											"end": 12605,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12592,
											"end": 12610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12584,
											"end": 12610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12584,
											"end": 12610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 12688,
											"end": 12689,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12677,
											"end": 12686,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12673,
											"end": 12690,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12664,
											"end": 12670,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 12620,
											"end": 12691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12691,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 12620,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12476,
											"end": 12698,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12476,
											"end": 12698,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12476,
											"end": 12698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12476,
											"end": 12698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12476,
											"end": 12698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12704,
											"end": 13036,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 12704,
											"end": 13036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12825,
											"end": 12829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12863,
											"end": 12865,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12852,
											"end": 12861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12848,
											"end": 12866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12840,
											"end": 12866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12840,
											"end": 12866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12876,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 12944,
											"end": 12945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12933,
											"end": 12942,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12929,
											"end": 12946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12920,
											"end": 12926,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12876,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 12876,
											"end": 12947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12876,
											"end": 12947,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 12876,
											"end": 12947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12957,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 13025,
											"end": 13027,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13014,
											"end": 13023,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13010,
											"end": 13028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13001,
											"end": 13007,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12957,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 12957,
											"end": 13029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12957,
											"end": 13029,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 12957,
											"end": 13029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12704,
											"end": 13036,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12704,
											"end": 13036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12704,
											"end": 13036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12704,
											"end": 13036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12704,
											"end": 13036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12704,
											"end": 13036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13484,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 13042,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13231,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13218,
											"end": 13227,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13214,
											"end": 13232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13206,
											"end": 13232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13206,
											"end": 13232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13242,
											"end": 13313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 13310,
											"end": 13311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13299,
											"end": 13308,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13292,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13242,
											"end": 13313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 13242,
											"end": 13313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13242,
											"end": 13313,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 13242,
											"end": 13313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13323,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 13391,
											"end": 13393,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13380,
											"end": 13389,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13376,
											"end": 13394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13367,
											"end": 13373,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13323,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 13323,
											"end": 13395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13323,
											"end": 13395,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 13323,
											"end": 13395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13405,
											"end": 13477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 13473,
											"end": 13475,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13462,
											"end": 13471,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13449,
											"end": 13455,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13405,
											"end": 13477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 13405,
											"end": 13477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13405,
											"end": 13477,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 13405,
											"end": 13477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13484,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13484,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13490,
											"end": 13606,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 13490,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13575,
											"end": 13580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 13560,
											"end": 13581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13550,
											"end": 13582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 13540,
											"end": 13600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 13540,
											"end": 13600,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13596,
											"end": 13597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13593,
											"end": 13594,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13586,
											"end": 13598,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13540,
											"end": 13600,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 13540,
											"end": 13600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13490,
											"end": 13606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13490,
											"end": 13606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13612,
											"end": 13749,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 13612,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13666,
											"end": 13671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13697,
											"end": 13703,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13691,
											"end": 13704,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13682,
											"end": 13704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13682,
											"end": 13704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 13737,
											"end": 13742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 13713,
											"end": 13743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13743,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 13713,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13612,
											"end": 13749,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13612,
											"end": 13749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13612,
											"end": 13749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13612,
											"end": 13749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13612,
											"end": 13749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13755,
											"end": 14100,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 13755,
											"end": 14100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13822,
											"end": 13828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13873,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13859,
											"end": 13868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13850,
											"end": 13857,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13846,
											"end": 13869,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13842,
											"end": 13874,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13839,
											"end": 13958,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13839,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 13839,
											"end": 13958,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13877,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 13877,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 13877,
											"end": 13956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13877,
											"end": 13956,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 13877,
											"end": 13956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13839,
											"end": 13958,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 13839,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13997,
											"end": 13998,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14022,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 14075,
											"end": 14082,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14066,
											"end": 14072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14064,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14051,
											"end": 14073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14022,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 14022,
											"end": 14083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14022,
											"end": 14083,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 14022,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14012,
											"end": 14083,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14012,
											"end": 14083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13968,
											"end": 14093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13755,
											"end": 14100,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13755,
											"end": 14100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13755,
											"end": 14100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13755,
											"end": 14100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13755,
											"end": 14100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14106,
											"end": 14204,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 14106,
											"end": 14204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14163,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14191,
											"end": 14196,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14197,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14175,
											"end": 14197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14175,
											"end": 14197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14106,
											"end": 14204,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14106,
											"end": 14204,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14106,
											"end": 14204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14106,
											"end": 14204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14210,
											"end": 14357,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 14210,
											"end": 14357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14311,
											"end": 14322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14348,
											"end": 14351,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14333,
											"end": 14351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14333,
											"end": 14351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14210,
											"end": 14357,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14210,
											"end": 14357,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14210,
											"end": 14357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14210,
											"end": 14357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14210,
											"end": 14357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14363,
											"end": 14749,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 14363,
											"end": 14749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14467,
											"end": 14470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14495,
											"end": 14533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 14527,
											"end": 14532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14495,
											"end": 14533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 14495,
											"end": 14533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14495,
											"end": 14533,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 14495,
											"end": 14533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14549,
											"end": 14637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 14630,
											"end": 14636,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14625,
											"end": 14628,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14549,
											"end": 14637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 14549,
											"end": 14637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14549,
											"end": 14637,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 14549,
											"end": 14637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14542,
											"end": 14637,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14542,
											"end": 14637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14646,
											"end": 14711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 14704,
											"end": 14710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14699,
											"end": 14702,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14692,
											"end": 14696,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14685,
											"end": 14690,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14681,
											"end": 14697,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14646,
											"end": 14711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 14646,
											"end": 14711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14646,
											"end": 14711,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 14646,
											"end": 14711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14736,
											"end": 14742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14731,
											"end": 14734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14727,
											"end": 14743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 14743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 14743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14471,
											"end": 14749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14363,
											"end": 14749,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14363,
											"end": 14749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14363,
											"end": 14749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14363,
											"end": 14749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14363,
											"end": 14749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14755,
											"end": 15026,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 14755,
											"end": 15026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14885,
											"end": 14888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14907,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 14996,
											"end": 14999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14987,
											"end": 14993,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14907,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 14907,
											"end": 15000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14907,
											"end": 15000,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 14907,
											"end": 15000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14900,
											"end": 15000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14900,
											"end": 15000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15017,
											"end": 15020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15010,
											"end": 15020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15010,
											"end": 15020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14755,
											"end": 15026,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14755,
											"end": 15026,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14755,
											"end": 15026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14755,
											"end": 15026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14755,
											"end": 15026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/ERC4626Vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit(uint256,uint256)": "e2bbb158",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalAssets()": "01e1d114",
							"totalAssets0()": "a6e61855",
							"totalAssets1()": "02d2cec4",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256,uint256)\":{\"notice\":\"Deposit tokens into the vault and receive vault shares\"},\"totalAssets()\":{\"notice\":\"Calculate the total value of assets in the vault\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw tokens by burning shares\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC4626Vault.sol\":\"ERC4626Vault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/ERC4626Vault.sol\":{\"keccak256\":\"0x1ab0334641b53a95c42f1c436392b4bd13e4b952757dcb7eaac2b8e137c0a279\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63855576e5ded7d9f590ae54c9a004a9a225b7bed08ea3f8d32ed2fc5a7d1840\",\"dweb:/ipfs/QmWT7smo8r8gwdtrtw6pUCVZwaqyRSRYv5J9sXJzBqoALy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/ERC4626Vault.sol:ERC4626Vault",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/ERC4626Vault.sol:ERC4626Vault",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/ERC4626Vault.sol:ERC4626Vault",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/ERC4626Vault.sol:ERC4626Vault",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/ERC4626Vault.sol:ERC4626Vault",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1375,
								"contract": "contracts/ERC4626Vault.sol:ERC4626Vault",
								"label": "_status",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1455,
								"contract": "contracts/ERC4626Vault.sol:ERC4626Vault",
								"label": "totalAssets0",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1457,
								"contract": "contracts/ERC4626Vault.sol:ERC4626Vault",
								"label": "totalAssets1",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit(uint256,uint256)": {
								"notice": "Deposit tokens into the vault and receive vault shares"
							},
							"totalAssets()": {
								"notice": "Calculate the total value of assets in the vault"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw tokens by burning shares"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1364
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 1365,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1364,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1364,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								1364
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							791
						]
					},
					"id": 792,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 791,
							"linearizedBaseContracts": [
								791
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 768,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 770,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 772,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 791,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 791,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 787,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 791,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 792,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1334
						],
						"IERC20": [
							729
						],
						"IERC20Permit": [
							791
						],
						"SafeERC20": [
							1081
						]
					},
					"id": 1082,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 793,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 795,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 730,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 794,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 797,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 792,
							"src": "179:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 796,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 791,
										"src": "187:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 799,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 1335,
							"src": "240:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 798,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1334,
										"src": "248:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 800,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1081,
							"linearizedBaseContracts": [
								1081
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 803,
									"libraryName": {
										"id": 801,
										"name": "Address",
										"nameLocations": [
											"781:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1334,
										"src": "781:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:5",
									"typeName": {
										"id": 802,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:5",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 808,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "907:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:5"
									},
									"src": "876:46:5"
								},
								{
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 817,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1043:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1060:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1086:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:5"
									},
									"src": "1004:109:5"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "1375:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 829,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "1405:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 832,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "1427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "1427:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 834,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "1444:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 835,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "1448:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 836,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 830,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 828,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1385:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:5"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1325:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 820,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 819,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "1325:6:5"
													},
													"referencedDeclaration": 729,
													"src": "1325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1339:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1351:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:5"
									},
									"scope": 1081,
									"src": "1303:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1792:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "1822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 858,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "1844:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "1844:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 860,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 847,
																			"src": "1865:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 861,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 849,
																			"src": "1871:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 862,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "1875:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 863,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 856,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 854,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1802:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:5"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1728:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 843,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "1728:6:5"
													},
													"referencedDeclaration": 729,
													"src": "1728:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1742:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1756:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1768:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:5"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:5"
									},
									"scope": 1081,
									"src": "1702:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "2167:139:5",
										"statements": [
											{
												"assignments": [
													880
												],
												"declarations": [
													{
														"constant": false,
														"id": 880,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "2177:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 879,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 889,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 885,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1081",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1081",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 883,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2231:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 881,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2200:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "2200:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2262:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 892,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2269:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 893,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "2278:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 894,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "2293:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "2249:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:5"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2112:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 871,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 870,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "2112:6:5"
													},
													"referencedDeclaration": 729,
													"src": "2112:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2126:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:5"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:5"
									},
									"scope": 1081,
									"src": "2081:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "2607:370:5",
										"statements": [
											{
												"id": 940,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:5",
												"statements": [
													{
														"assignments": [
															911
														],
														"declarations": [
															{
																"constant": false,
																"id": 911,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 940,
																"src": "2641:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 910,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 920,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 916,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1081",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1081",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 914,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 918,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "2699:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 912,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "2668:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 706,
																"src": "2668:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 921,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "2725:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 922,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "2744:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 931,
														"nodeType": "IfStatement",
														"src": "2721:160:5",
														"trueBody": {
															"id": 930,
															"nodeType": "Block",
															"src": "2763:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 925,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 905,
																				"src": "2821:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 926,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "2830:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 927,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "2848:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 924,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "2788:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 929,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 933,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "2907:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 934,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "2914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 935,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "2923:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 936,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "2942:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 932,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "2894:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 939,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2540:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 901,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "2540:6:5"
													},
													"referencedDeclaration": 729,
													"src": "2540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2554:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2571:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:5"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:5"
									},
									"scope": 1081,
									"src": "2509:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "3373:303:5",
										"statements": [
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 988,
														"src": "3383:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 953,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 957,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "3426:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 716,
															"src": "3426:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 959,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "3442:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 960,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "3451:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 961,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 955,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:5"
											},
											{
												"condition": {
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 965,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "3498:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 966,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "3505:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 964,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "3474:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 987,
												"nodeType": "IfStatement",
												"src": "3469:201:5",
												"trueBody": {
													"id": 986,
													"nodeType": "Block",
													"src": "3520:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 970,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "3554:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 973,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "3576:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$729",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 716,
																				"src": "3576:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 975,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 948,
																						"src": "3592:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 976,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 977,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 971,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 969,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "3534:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 980,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 982,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "3639:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 983,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "3646:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 981,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "3619:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 985,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3318:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "3318:6:5"
													},
													"referencedDeclaration": 729,
													"src": "3318:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3332:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3349:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:5"
									},
									"scope": 1081,
									"src": "3296:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "4129:559:5",
										"statements": [
											{
												"assignments": [
													999
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "4478:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 998,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1007,
												"initialValue": {
													"arguments": [
														{
															"id": 1005,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "4532:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1002,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "4512:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1000,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "4504:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1008,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "4551:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1014,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "4589:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1015,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:5",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1017,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1012,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:5",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "4547:135:5",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "4610:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1024,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 993,
																				"src": "4664:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1022,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1021,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "4631:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1027,
															"nodeType": "RevertStatement",
															"src": "4624:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4088:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 991,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "4088:6:5"
													},
													"referencedDeclaration": 729,
													"src": "4088:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4102:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 994,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:5"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:5"
									},
									"scope": 1081,
									"src": "4059:629:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "5278:489:5",
										"statements": [
											{
												"assignments": [
													1043,
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "5574:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1042,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "5588:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1044,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"arguments": [
														{
															"id": 1051,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "5635:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1048,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "5623:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1046,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1054,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "5657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1055,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "5669:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1061,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "5706:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1063,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1062,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1064,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1059,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1067,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1071,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "5738:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1069,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1078,
												"nodeType": "Return",
												"src": "5650:110:5"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "5222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1034,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1033,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "5222:6:5"
													},
													"referencedDeclaration": 729,
													"src": "5222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "5236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:5"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "5272:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:5"
									},
									"scope": 1081,
									"src": "5189:578:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1082,
							"src": "751:5018:5",
							"usedErrors": [
								808,
								817
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1334
						]
					},
					"id": 1335,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1083,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1084,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1334,
							"linearizedBaseContracts": [
								1334
							],
							"name": "Address",
							"nameLocation": "203:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:6",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1089,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "349:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:6"
									},
									"src": "316:50:6"
								},
								{
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:6",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1094,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "475:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:6"
									},
									"src": "452:39:6"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:6",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1097,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:6"
									},
									"src": "591:24:6"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "1602:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1107,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1334",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1334",
																		"typeString": "library Address"
																	}
																],
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1105,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1110,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "1640:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "1612:109:6",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "1648:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1115,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1334",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1334",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1112,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "1669:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1118,
															"nodeType": "RevertStatement",
															"src": "1662:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													1122,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "1732:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1121,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1129,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1123,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "1750:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1125,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "1772:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:6"
											},
											{
												"condition": {
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:6",
													"subExpression": {
														"id": 1130,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "1798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "IfStatement",
												"src": "1793:63:6",
												"trueBody": {
													"id": 1135,
													"nodeType": "Block",
													"src": "1807:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1132,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "1828:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1134,
															"nodeType": "RevertStatement",
															"src": "1821:24:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1550:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1577:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:6"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:6"
									},
									"scope": 1334,
									"src": "1531:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "2794:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1149,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2833:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "2841:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1148,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "2811:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1153,
												"nodeType": "Return",
												"src": "2804:45:6"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2727:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2743:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:6"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2780:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:6"
									},
									"scope": 1334,
									"src": "2705:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "3293:279:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1169,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1334",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1334",
																		"typeString": "library Address"
																	}
																],
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1167,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1172,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "3331:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "IfStatement",
												"src": "3303:108:6",
												"trueBody": {
													"id": 1181,
													"nodeType": "Block",
													"src": "3338:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1177,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1334",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1334",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1175,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1174,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "3359:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1180,
															"nodeType": "RevertStatement",
															"src": "3352:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													1184,
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1184,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3421:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1183,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3435:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1185,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"arguments": [
														{
															"id": 1191,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "3488:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1187,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "3462:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1189,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "3481:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "3537:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1196,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "3545:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1197,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "3554:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1194,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "3510:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1199,
												"nodeType": "Return",
												"src": "3503:62:6"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3211:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3227:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1159,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3246:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3279:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:6"
									},
									"scope": 1334,
									"src": "3180:392:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "3811:154:6",
										"statements": [
											{
												"assignments": [
													1212,
													1214
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "3822:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1211,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1214,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "3836:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1213,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"arguments": [
														{
															"id": 1217,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "3881:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1215,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3863:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3930:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3938:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1223,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "3947:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1220,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "3903:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1210,
												"id": 1225,
												"nodeType": "Return",
												"src": "3896:62:6"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3739:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3755:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:6"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3797:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:6"
									},
									"scope": 1334,
									"src": "3711:254:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "4203:156:6",
										"statements": [
											{
												"assignments": [
													1238,
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1238,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1252,
														"src": "4214:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1237,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1252,
														"src": "4228:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1239,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1245,
												"initialValue": {
													"arguments": [
														{
															"id": 1243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "4275:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1241,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4255:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1247,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4324:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "4332:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1249,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "4341:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1246,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "4297:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1251,
												"nodeType": "Return",
												"src": "4290:62:6"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "4136:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "4152:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "4189:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:6"
									},
									"scope": 1334,
									"src": "4106:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "4783:424:6",
										"statements": [
											{
												"condition": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:6",
													"subExpression": {
														"id": 1265,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "4798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1290,
													"nodeType": "Block",
													"src": "4857:344:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1272,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "5045:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1276,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1256,
																				"src": "5071:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1287,
															"nodeType": "IfStatement",
															"src": "5041:119:6",
															"trueBody": {
																"id": 1286,
																"nodeType": "Block",
																"src": "5096:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1283,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "5138:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1282,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "5121:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1285,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1288,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "5180:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1264,
															"id": 1289,
															"nodeType": "Return",
															"src": "5173:17:6"
														}
													]
												},
												"id": 1291,
												"nodeType": "IfStatement",
												"src": "4793:408:6",
												"trueBody": {
													"id": 1271,
													"nodeType": "Block",
													"src": "4807:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1268,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "4829:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1267,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "4821:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1270,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4670:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4694:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4716:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:6"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4769:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:6"
									},
									"scope": 1334,
									"src": "4625:582:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "5509:122:6",
										"statements": [
											{
												"condition": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:6",
													"subExpression": {
														"id": 1303,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "5524:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "5583:42:6",
													"statements": [
														{
															"expression": {
																"id": 1310,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "5604:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1302,
															"id": 1311,
															"nodeType": "Return",
															"src": "5597:17:6"
														}
													]
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "5519:106:6",
												"trueBody": {
													"id": 1309,
													"nodeType": "Block",
													"src": "5533:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1306,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "5555:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1305,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "5547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1308,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:6",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "5433:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "5447:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:6"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "5495:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:6"
									},
									"scope": 1334,
									"src": "5407:224:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "5798:461:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1321,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "5874:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1330,
													"nodeType": "Block",
													"src": "6204:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1327,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "6225:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1329,
															"nodeType": "RevertStatement",
															"src": "6218:24:6"
														}
													]
												},
												"id": 1331,
												"nodeType": "IfStatement",
												"src": "5870:383:6",
												"trueBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "5897:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:6",
																"nodeType": "YulBlock",
																"src": "6055:133:6",
																"statements": [
																	{
																		"nativeSrc": "6073:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:6"
																			},
																			"nativeSrc": "6096:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:6",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:6",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:6"
																					},
																					"nativeSrc": "6137:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:6"
																			},
																			"nativeSrc": "6130:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:6"
																		},
																		"nativeSrc": "6130:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1318,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1318,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:6",
																	"valueSize": 1
																}
															],
															"id": 1325,
															"nodeType": "InlineAssembly",
															"src": "6046:142:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:6",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "5760:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:6"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:6"
									},
									"scope": 1334,
									"src": "5743:516:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1335,
							"src": "195:6066:6",
							"usedErrors": [
								1089,
								1094,
								1097
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1364
						]
					},
					"id": 1365,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1336,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1337,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1364,
							"linearizedBaseContracts": [
								1364
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1342,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1344,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1364,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1351,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1353,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1364,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1359,
												"id": 1361,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1364,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1365,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1433
						]
					},
					"id": 1434,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1366,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1367,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:8",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1433,
							"linearizedBaseContracts": [
								1433
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1370,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "1674:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1368,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1373,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "1720:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1371,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1372,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1375,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "1763:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1374,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:8",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1378,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:8"
									},
									"src": "1850:37:8"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "1907:38:8",
										"statements": [
											{
												"expression": {
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1381,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "1917:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1382,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "1927:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:8"
											}
										]
									},
									"id": 1386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:8"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:8"
									},
									"scope": 1433,
									"src": "1893:52:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "2346:79:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1389,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "2356:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:8"
											},
											{
												"id": 1392,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1393,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "2398:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:8"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:8",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1397,
									"name": "nonReentrant",
									"nameLocation": "2331:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:8"
									},
									"src": "2322:103:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "2470:268:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1400,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "2558:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1401,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2569:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1407,
												"nodeType": "IfStatement",
												"src": "2554:86:8",
												"trueBody": {
													"id": 1406,
													"nodeType": "Block",
													"src": "2578:62:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1403,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "2599:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1405,
															"nodeType": "RevertStatement",
															"src": "2592:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1408,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "2714:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1409,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2724:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:8"
											}
										]
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:8"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:8"
									},
									"scope": 1433,
									"src": "2431:307:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "2782:170:8",
										"statements": [
											{
												"expression": {
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1416,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "2924:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1417,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "2934:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:8"
											}
										]
									},
									"id": 1421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:8"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:8"
									},
									"scope": 1433,
									"src": "2744:208:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "3195:42:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1427,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "3212:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1428,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "3223:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1430,
												"nodeType": "Return",
												"src": "3205:25:8"
											}
										]
									},
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:8",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:8"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3189:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:8"
									},
									"scope": 1433,
									"src": "3131:106:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1434,
							"src": "886:2353:8",
							"usedErrors": [
								1378
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:8"
				},
				"id": 8
			},
			"contracts/ERC4626Vault.sol": {
				"ast": {
					"absolutePath": "contracts/ERC4626Vault.sol",
					"exportedSymbols": {
						"Address": [
							1334
						],
						"Context": [
							1364
						],
						"ERC20": [
							651
						],
						"ERC4626Vault": [
							1779
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"IERC20Permit": [
							791
						],
						"ReentrancyGuard": [
							1433
						],
						"SafeERC20": [
							1081
						]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1435,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 730,
							"src": "57:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 652,
							"src": "114:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1438,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 1434,
							"src": "170:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 1082,
							"src": "230:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1440,
										"name": "ERC20",
										"nameLocations": [
											"322:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "322:5:9"
									},
									"id": 1441,
									"nodeType": "InheritanceSpecifier",
									"src": "322:5:9"
								},
								{
									"baseName": {
										"id": 1442,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"329:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1433,
										"src": "329:15:9"
									},
									"id": 1443,
									"nodeType": "InheritanceSpecifier",
									"src": "329:15:9"
								}
							],
							"canonicalName": "ERC4626Vault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1779,
							"linearizedBaseContracts": [
								1779,
								1433,
								651,
								41,
								755,
								729,
								1364
							],
							"name": "ERC4626Vault",
							"nameLocation": "306:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1447,
									"libraryName": {
										"id": 1444,
										"name": "SafeERC20",
										"nameLocations": [
											"357:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1081,
										"src": "357:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "351:27:9",
									"typeName": {
										"id": 1446,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1445,
											"name": "IERC20",
											"nameLocations": [
												"371:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "371:6:9"
										},
										"referencedDeclaration": 729,
										"src": "371:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 1450,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "408:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1779,
									"src": "384:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1449,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1448,
											"name": "IERC20",
											"nameLocations": [
												"384:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "384:6:9"
										},
										"referencedDeclaration": 729,
										"src": "384:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 1453,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "444:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1779,
									"src": "420:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1452,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1451,
											"name": "IERC20",
											"nameLocations": [
												"420:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "420:6:9"
										},
										"referencedDeclaration": 729,
										"src": "420:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6e61855",
									"id": 1455,
									"mutability": "mutable",
									"name": "totalAssets0",
									"nameLocation": "472:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1779,
									"src": "457:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "457:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "02d2cec4",
									"id": 1457,
									"mutability": "mutable",
									"name": "totalAssets1",
									"nameLocation": "505:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1779,
									"src": "490:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "490:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "612:75:9",
										"statements": [
											{
												"expression": {
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1468,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "622:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1470,
																"name": "_token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "638:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1469,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "631:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "631:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "622:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "622:24:9"
											},
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1474,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "656:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1476,
																"name": "_token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "672:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1475,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "665:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "665:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "656:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "656:24:9"
											}
										]
									},
									"id": 1481,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "45524334363236205661756c7420546f6b656e",
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "576:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_10b02186b86206e1d5282231b8aafa745e4a30bc0790dda6d7992336f0d2d2f5",
														"typeString": "literal_string \"ERC4626 Vault Token\""
													},
													"value": "ERC4626 Vault Token"
												},
												{
													"hexValue": "5641554c5434363236",
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "599:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_16562f951cb77f3d7fe4dcb1f4f206a6d548fc070bffad554e157a4214023d81",
														"typeString": "literal_string \"VAULT4626\""
													},
													"value": "VAULT4626"
												}
											],
											"id": 1466,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1463,
												"name": "ERC20",
												"nameLocations": [
													"570:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "570:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "570:41:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "544:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "536:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "561:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "553:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:34:9"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:0:9"
									},
									"scope": 1779,
									"src": "524:163:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "862:858:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1494,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "880:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "890:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "880:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1497,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "895:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "905:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "895:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "880:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e7473",
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "908:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2",
																"typeString": "literal_string \"Invalid amounts\""
															},
															"value": "Invalid amounts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_398975f84453d02f72be2f04ea41567c835ff1dbdf476a80db1c02f27c9d4bb2",
																"typeString": "literal_string \"Invalid amounts\""
															}
														],
														"id": 1493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "872:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "872:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1503,
												"nodeType": "ExpressionStatement",
												"src": "872:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1507,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1022:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1026:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1022:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1511,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1042:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626Vault_$1779",
																		"typeString": "contract ERC4626Vault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626Vault_$1779",
																		"typeString": "contract ERC4626Vault"
																	}
																],
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1034:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1509,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1034:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1034:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1513,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "1049:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1504,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "998:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1005:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "998:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "998:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1519,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1091:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1095:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1091:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1523,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1111:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626Vault_$1779",
																		"typeString": "contract ERC4626Vault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626Vault_$1779",
																		"typeString": "contract ERC4626Vault"
																	}
																],
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1103:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1521,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1103:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1103:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "1118:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1516,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "1067:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1074:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "1067:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1067:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "1067:59:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1528,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1215:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1215:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1232:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1215:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1560,
													"nodeType": "Block",
													"src": "1298:167:9",
													"statements": [
														{
															"expression": {
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1541,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "1312:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1546,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1543,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1484,
																							"src": "1343:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1544,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 224,
																								"src": "1353:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1545,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1353:13:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1343:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1547,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1342:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1548,
																				"name": "totalAssets0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1455,
																				"src": "1370:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1342:40:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1553,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1550,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1486,
																							"src": "1401:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1551,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 224,
																								"src": "1411:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1552,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1411:13:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1401:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1554,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1400:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1555,
																				"name": "totalAssets1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1457,
																				"src": "1428:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1400:40:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1542,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1758,
																		"src": "1321:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1321:133:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1312:142:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1559,
															"nodeType": "ExpressionStatement",
															"src": "1312:142:9"
														}
													]
												},
												"id": 1561,
												"nodeType": "IfStatement",
												"src": "1211:254:9",
												"trueBody": {
													"id": 1540,
													"nodeType": "Block",
													"src": "1235:57:9",
													"statements": [
														{
															"expression": {
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1532,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "1249:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1534,
																				"name": "amount0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1484,
																				"src": "1263:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1535,
																				"name": "amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1486,
																				"src": "1273:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1263:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1533,
																		"name": "sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1740,
																		"src": "1258:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1258:23:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1249:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1539,
															"nodeType": "ExpressionStatement",
															"src": "1249:32:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1562,
														"name": "totalAssets0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "1514:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1563,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "1530:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1514:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "1514:23:9"
											},
											{
												"expression": {
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1566,
														"name": "totalAssets1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "1547:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1567,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "1563:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1547:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "1547:23:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1571,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1633:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1637:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1633:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1573,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "1645:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1570,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1627:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1627:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "1627:25:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1577,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1676:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1680:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1676:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1579,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "1688:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1580,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "1697:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1581,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "1706:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1576,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "1668:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1668:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "EmitStatement",
												"src": "1663:50:9"
											}
										]
									},
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "693:66:9",
										"text": "@notice Deposit tokens into the vault and receive vault shares"
									},
									"functionSelector": "e2bbb158",
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1489,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1488,
												"name": "nonReentrant",
												"nameLocations": [
													"824:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1397,
												"src": "824:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "824:12:9"
										}
									],
									"name": "deposit",
									"nameLocation": "773:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "789:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "781:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "806:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "798:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:34:9"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "854:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "846:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:16:9"
									},
									"scope": 1779,
									"src": "764:956:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "1875:685:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1598,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "1893:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1902:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1893:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736861726520616d6f756e74",
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc",
																"typeString": "literal_string \"Invalid share amount\""
															},
															"value": "Invalid share amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc",
																"typeString": "literal_string \"Invalid share amount\""
															}
														],
														"id": 1597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1885:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1885:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1603,
												"nodeType": "ExpressionStatement",
												"src": "1885:43:9"
											},
											{
												"assignments": [
													1605
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "2029:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1665,
														"src": "2021:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2021:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1608,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1606,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2038:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2021:30:9"
											},
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1609,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "2061:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1610,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "2072:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1611,
																		"name": "totalAssets0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "2081:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2072:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1613,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1614,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "2097:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2071:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "2061:42:9"
											},
											{
												"expression": {
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1618,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "2113:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1619,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "2124:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1620,
																		"name": "totalAssets1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "2133:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2124:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1622,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2123:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1623,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "2149:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2123:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2113:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "2113:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1628,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2206:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2210:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2206:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1630,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "2218:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1627,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2200:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "2200:25:9"
											},
											{
												"expression": {
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1633,
														"name": "totalAssets0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "2275:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1634,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "2291:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2275:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "2275:23:9"
											},
											{
												"expression": {
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1637,
														"name": "totalAssets1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "2308:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1638,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "2324:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2308:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "2308:23:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1644,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2421:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2425:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2421:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1646,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "2433:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1641,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "2401:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2408:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "2401:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "2401:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1652,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2471:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2475:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2471:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1654,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2483:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1649,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "2451:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2458:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "2451:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2451:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "2451:40:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1658,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2516:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2520:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2516:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1660,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "2528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1661,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "2536:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1662,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2545:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1657,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "2507:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2507:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1664,
												"nodeType": "EmitStatement",
												"src": "2502:51:9"
											}
										]
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "1726:45:9",
										"text": "@notice Withdraw tokens by burning shares"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1591,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1590,
												"name": "nonReentrant",
												"nameLocations": [
													"1819:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1397,
												"src": "1819:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1819:12:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "1785:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1802:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "1794:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:16:9"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1849:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "1841:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1866:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "1858:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:34:9"
									},
									"scope": 1779,
									"src": "1776:784:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "2707:69:9",
										"statements": [
											{
												"expression": {
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1674,
														"name": "total0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "2717:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1675,
														"name": "totalAssets0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "2726:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2717:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "2717:21:9"
											},
											{
												"expression": {
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1678,
														"name": "total1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "2748:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1679,
														"name": "totalAssets1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "2757:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2748:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "2748:21:9"
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "2566:60:9",
										"text": "@notice Calculate the total value of assets in the vault"
									},
									"functionSelector": "01e1d114",
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalAssets",
									"nameLocation": "2640:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2651:2:9"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "total0",
												"nameLocation": "2683:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2675:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "total1",
												"nameLocation": "2699:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2691:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:32:9"
									},
									"scope": 1779,
									"src": "2631:145:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "2908:257:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "2922:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2926:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "2922:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1727,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "3103:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3108:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3103:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1735,
													"nodeType": "IfStatement",
													"src": "3099:42:9",
													"trueBody": {
														"id": 1734,
														"nodeType": "Block",
														"src": "3111:30:9",
														"statements": [
															{
																"expression": {
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1730,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "3125:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3129:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3125:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1733,
																"nodeType": "ExpressionStatement",
																"src": "3125:5:9"
															}
														]
													}
												},
												"id": 1736,
												"nodeType": "IfStatement",
												"src": "2918:223:9",
												"trueBody": {
													"id": 1726,
													"nodeType": "Block",
													"src": "2929:164:9",
													"statements": [
														{
															"expression": {
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1694,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "2943:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1695,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1686,
																	"src": "2947:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2943:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1697,
															"nodeType": "ExpressionStatement",
															"src": "2943:5:9"
														},
														{
															"assignments": [
																1699
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1699,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "2967:1:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1726,
																	"src": "2962:6:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1698,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2962:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1705,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1700,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "2971:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2975:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2971:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2979:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2971:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2962:18:9"
														},
														{
															"body": {
																"id": 1724,
																"nodeType": "Block",
																"src": "3008:75:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1709,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1689,
																				"src": "3026:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1710,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1699,
																				"src": "3030:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3026:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1712,
																		"nodeType": "ExpressionStatement",
																		"src": "3026:5:9"
																	},
																	{
																		"expression": {
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1713,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1699,
																				"src": "3049:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1718,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1716,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1714,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1686,
																									"src": "3054:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 1715,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1699,
																									"src": "3058:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3054:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1717,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1699,
																								"src": "3062:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3054:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1719,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3053:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1720,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3067:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "3053:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3049:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1723,
																		"nodeType": "ExpressionStatement",
																		"src": "3049:19:9"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1706,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "3001:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1707,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "3005:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3001:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1725,
															"nodeType": "WhileStatement",
															"src": "2994:89:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1737,
													"name": "z",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1689,
													"src": "3157:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1738,
												"nodeType": "Return",
												"src": "3150:8:9"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "2782:69:9",
										"text": "@notice Utility function to calculate the square root of a number"
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "2865:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2875:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2870:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2870:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:8:9"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "2905:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2900:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2900:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2899:8:9"
									},
									"scope": 1779,
									"src": "2856:309:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "3301:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1750,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "3318:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1751,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "3322:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3318:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1754,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "3330:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3318:13:9",
													"trueExpression": {
														"id": 1753,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "3326:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1749,
												"id": 1756,
												"nodeType": "Return",
												"src": "3311:20:9"
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "3171:68:9",
										"text": "@notice Utility function to calculate the minimum of two numbers"
									},
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3253:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3262:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "3257:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3257:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3270:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "3265:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3256:16:9"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "3295:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3295:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3294:6:9"
									},
									"scope": 1779,
									"src": "3244:94:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e",
									"id": 1768,
									"name": "Deposit",
									"nameLocation": "3350:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3374:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "3358:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3388:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "3380:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3380:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3405:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "3397:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3397:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "3422:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "3414:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3357:72:9"
									},
									"src": "3344:86:9"
								},
								{
									"anonymous": false,
									"eventSelector": "02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca94",
									"id": 1778,
									"name": "Withdraw",
									"nameLocation": "3441:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3466:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "3450:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3450:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "3480:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "3472:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3472:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3496:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "3488:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3513:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "3505:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:72:9"
									},
									"src": "3435:87:9"
								}
							],
							"scope": 1780,
							"src": "297:3227:9",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								808,
								1089,
								1094,
								1097,
								1378
							],
							"usedEvents": [
								663,
								672,
								1768,
								1778
							]
						}
					],
					"src": "32:3493:9"
				},
				"id": 9
			}
		}
	}
}