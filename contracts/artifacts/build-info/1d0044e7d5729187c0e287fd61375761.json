{
	"id": "1d0044e7d5729187c0e287fd61375761",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/UniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract UniswapV2Pair is ERC20, ReentrancyGuard {\n    address public token0;\n    address public token1;\n    uint112 private reserve0;\n    uint112 private reserve1;\n\n    constructor() ERC20(\"Uniswap V2 LP Token\", \"UNI-V2\") {}\n\n    function initialize(address _token0, address _token1) external {\n        require(token0 == address(0) && token1 == address(0), \"Already initialized\");\n        token0 = _token0;\n        token1 = _token1;\n    }\n\n    function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1) {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n    }\n\n    // Add liquidity to the pool\n    function addLiquidity(uint amount0, uint amount1) external nonReentrant returns (uint liquidity) {\n        IERC20(token0).transferFrom(msg.sender, address(this), amount0);\n        IERC20(token1).transferFrom(msg.sender, address(this), amount1);\n\n        if (totalSupply() == 0) {\n            liquidity = sqrt(amount0 * amount1);\n        } else {\n            liquidity = min((amount0 * totalSupply()) / reserve0, (amount1 * totalSupply()) / reserve1);\n        }\n\n        _mint(msg.sender, liquidity);\n\n        _update(amount0, amount1);\n    }\n\n    // Remove liquidity from the pool\n    function removeLiquidity(uint liquidity) external nonReentrant returns (uint amount0, uint amount1) {\n        require(balanceOf(msg.sender) >= liquidity, \"Not enough liquidity\");\n\n        uint _totalSupply = totalSupply();\n        amount0 = (liquidity * reserve0) / _totalSupply;\n        amount1 = (liquidity * reserve1) / _totalSupply;\n\n        _burn(msg.sender, liquidity);\n        IERC20(token0).transfer(msg.sender, amount0);\n        IERC20(token1).transfer(msg.sender, amount1);\n\n        _update(reserve0 - uint112(amount0), reserve1 - uint112(amount1));\n    }\n\n    // Swap tokens within the liquidity pool\n    function swap(uint amount0Out, uint amount1Out, address to) external nonReentrant {\n        require(amount0Out > 0 || amount1Out > 0, \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\");\n        (uint112 _reserve0, uint112 _reserve1) = getReserves();\n\n        if (amount0Out > 0) IERC20(token0).transfer(to, amount0Out);\n        if (amount1Out > 0) IERC20(token1).transfer(to, amount1Out);\n\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n\n        require(balance0 * balance1 >= uint(_reserve0) * uint(_reserve1), \"UniswapV2: K\");\n\n        _update(balance0, balance1);\n    }\n\n    function _update(uint balance0, uint balance1) private {\n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n    }\n\n    function sqrt(uint y) private pure returns (uint z) {\n        if (y > 3) {\n            z = y;\n            uint x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n        return z;\n    }\n\n    function min(uint x, uint y) private pure returns (uint) {\n        return x < y ? x : y;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 796,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/UniswapV2Pair.sol": {
				"UniswapV2Pair": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/UniswapV2Pair.sol\":231:3271  contract UniswapV2Pair is ERC20, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/UniswapV2Pair.sol\":401:456  constructor() ERC20(\"Uniswap V2 LP Token\", \"UNI-V2\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x13\n  dup2\n  mstore\n  0x20\n  add\n  0x556e6973776170205632204c5020546f6b656e00000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x554e492d56320000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x05\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/UniswapV2Pair.sol\":231:3271  contract UniswapV2Pair is ERC20, ReentrancyGuard {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:106   */\ntag_12:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_13:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_14:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_15:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_37:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_39\n  tag_14\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":714:798   */\ntag_38:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_16:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_17:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_18:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_19:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_44\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_18\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1429:1468   */\n  tag_45\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_18\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_20:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_21:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_22:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_49\n    /* \"#utility.yul\":1818:1852   */\n  tag_50\n    /* \"#utility.yul\":1827:1851   */\n  tag_51\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_20\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1818:1852   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1800:1853   */\n  tag_20\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_23:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_24:\n    /* \"#utility.yul\":2056:2095   */\n  tag_54\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_22\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2117:2208   */\n  tag_55\n    /* \"#utility.yul\":2166:2207   */\n  tag_56\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_23\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_19\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_25:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_26:\n    /* \"#utility.yul\":2377:2409   */\n  tag_59\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2418:2483   */\n  tag_60\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_24\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_27:\n    /* \"#utility.yul\":2555:2675   */\ntag_62:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_65\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_26\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_28:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_68\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_16\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2906:2935   */\n  tag_69\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_17\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_70:\n    /* \"#utility.yul\":3133:3213   */\n  tag_71\n    /* \"#utility.yul\":3189:3211   */\n  tag_72\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_17\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_27\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_67:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_29:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_30:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_75\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_29\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_31:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_77\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_30\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_79\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_81\n  tag_13\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4038:4094   */\ntag_80:\n    /* \"#utility.yul\":4118:4156   */\n  tag_82\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_15\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4203:4270   */\n  tag_83\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_28\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_86:\n    /* \"#utility.yul\":5144:5211   */\n  tag_87\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_31\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_84)\n    /* \"#utility.yul\":4365:4983   */\ntag_85:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_88\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_16\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_89:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_89)\ntag_91:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_93\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_30\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_92:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_84:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/UniswapV2Pair.sol\":231:3271  contract UniswapV2Pair is ERC20, ReentrancyGuard {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/UniswapV2Pair.sol\":231:3271  contract UniswapV2Pair is ERC20, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6d9a640a\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x9cd441da\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x6d9a640a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x18160ddd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2Pair.sol\":676:825  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap3\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2Pair.sol\":286:307  address public token0 */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2Pair.sol\":462:670  function initialize(address _token0, address _token1) external {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/UniswapV2Pair.sol\":2065:2710  function swap(uint amount0Out, uint amount1Out, address to) external nonReentrant {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2Pair.sol\":1449:2014  function removeLiquidity(uint liquidity) external nonReentrant returns (uint amount0, uint amount1) {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2Pair.sol\":864:1405  function addLiquidity(uint amount0, uint amount1) external nonReentrant returns (uint liquidity) {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2Pair.sol\":313:334  address public token1 */\n    tag_17:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_93\n      jump\t// in\n    tag_94:\n      dup1\n      iszero\n      tag_95\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_96\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_95)\n    tag_96:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_97:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_97\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/UniswapV2Pair.sol\":676:825  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1) {... */\n    tag_27:\n        /* \"contracts/UniswapV2Pair.sol\":720:737  uint112 _reserve0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":739:756  uint112 _reserve1 */\n      dup1\n        /* \"contracts/UniswapV2Pair.sol\":780:788  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":768:788  _reserve0 = reserve0 */\n      swap2\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":810:818  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":798:818  _reserve1 = reserve1 */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":676:825  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2Pair.sol\":286:307  address public token0 */\n    tag_37:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/UniswapV2Pair.sol\":462:670  function initialize(address _token0, address _token1) external {... */\n    tag_56:\n        /* \"contracts/UniswapV2Pair.sol\":561:562  0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":543:563  token0 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":543:549  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":543:563  token0 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/UniswapV2Pair.sol\":543:587  token0 == address(0) && token1 == address(0) */\n      dup1\n      iszero\n      tag_113\n      jumpi\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":585:586  0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":567:587  token1 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":567:573  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":567:587  token1 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/UniswapV2Pair.sol\":543:587  token0 == address(0) && token1 == address(0) */\n    tag_113:\n        /* \"contracts/UniswapV2Pair.sol\":535:611  require(token0 == address(0) && token1 == address(0), \"Already initialized\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/UniswapV2Pair.sol\":630:637  _token0 */\n      dup2\n        /* \"contracts/UniswapV2Pair.sol\":621:627  token0 */\n      0x06\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":621:637  token0 = _token0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":656:663  _token1 */\n      dup1\n        /* \"contracts/UniswapV2Pair.sol\":647:653  token1 */\n      0x07\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":647:663  token1 = _token1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":462:670  function initialize(address _token0, address _token1) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2Pair.sol\":2065:2710  function swap(uint amount0Out, uint amount1Out, address to) external nonReentrant {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_118\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/UniswapV2Pair.sol\":2178:2179  0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":2165:2175  amount0Out */\n      dup4\n        /* \"contracts/UniswapV2Pair.sol\":2165:2179  amount0Out > 0 */\n      gt\n        /* \"contracts/UniswapV2Pair.sol\":2165:2197  amount0Out > 0 || amount1Out > 0 */\n      dup1\n      tag_121\n      jumpi\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2196:2197  0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":2183:2193  amount1Out */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":2183:2197  amount1Out > 0 */\n      gt\n        /* \"contracts/UniswapV2Pair.sol\":2165:2197  amount0Out > 0 || amount1Out > 0 */\n    tag_121:\n        /* \"contracts/UniswapV2Pair.sol\":2157:2239  require(amount0Out > 0 || amount1Out > 0, \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/UniswapV2Pair.sol\":2250:2267  uint112 _reserve0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":2269:2286  uint112 _reserve1 */\n      dup1\n        /* \"contracts/UniswapV2Pair.sol\":2290:2303  getReserves() */\n      tag_125\n        /* \"contracts/UniswapV2Pair.sol\":2290:2301  getReserves */\n      tag_27\n        /* \"contracts/UniswapV2Pair.sol\":2290:2303  getReserves() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/UniswapV2Pair.sol\":2249:2303  (uint112 _reserve0, uint112 _reserve1) = getReserves() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2331:2332  0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":2318:2328  amount0Out */\n      dup6\n        /* \"contracts/UniswapV2Pair.sol\":2318:2332  amount0Out > 0 */\n      gt\n        /* \"contracts/UniswapV2Pair.sol\":2314:2373  if (amount0Out > 0) IERC20(token0).transfer(to, amount0Out) */\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/UniswapV2Pair.sol\":2341:2347  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":2334:2357  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/UniswapV2Pair.sol\":2358:2360  to */\n      dup5\n        /* \"contracts/UniswapV2Pair.sol\":2362:2372  amount0Out */\n      dup8\n        /* \"contracts/UniswapV2Pair.sol\":2334:2373  IERC20(token0).transfer(to, amount0Out) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2314:2373  if (amount0Out > 0) IERC20(token0).transfer(to, amount0Out) */\n    tag_126:\n        /* \"contracts/UniswapV2Pair.sol\":2400:2401  0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":2387:2397  amount1Out */\n      dup5\n        /* \"contracts/UniswapV2Pair.sol\":2387:2401  amount1Out > 0 */\n      gt\n        /* \"contracts/UniswapV2Pair.sol\":2383:2442  if (amount1Out > 0) IERC20(token1).transfer(to, amount1Out) */\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/UniswapV2Pair.sol\":2410:2416  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":2403:2426  IERC20(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/UniswapV2Pair.sol\":2427:2429  to */\n      dup5\n        /* \"contracts/UniswapV2Pair.sol\":2431:2441  amount1Out */\n      dup7\n        /* \"contracts/UniswapV2Pair.sol\":2403:2442  IERC20(token1).transfer(to, amount1Out) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_137:\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2383:2442  if (amount1Out > 0) IERC20(token1).transfer(to, amount1Out) */\n    tag_133:\n        /* \"contracts/UniswapV2Pair.sol\":2453:2466  uint balance0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":2476:2482  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":2469:2493  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/UniswapV2Pair.sol\":2502:2506  this */\n      address\n        /* \"contracts/UniswapV2Pair.sol\":2469:2508  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_138:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"contracts/UniswapV2Pair.sol\":2453:2508  uint balance0 = IERC20(token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2518:2531  uint balance1 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":2541:2547  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":2534:2558  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/UniswapV2Pair.sol\":2567:2571  this */\n      address\n        /* \"contracts/UniswapV2Pair.sol\":2534:2573  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_143:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_146:\n        /* \"contracts/UniswapV2Pair.sol\":2518:2573  uint balance1 = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2638:2647  _reserve1 */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":2633:2648  uint(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":2620:2629  _reserve0 */\n      dup5\n        /* \"contracts/UniswapV2Pair.sol\":2615:2630  uint(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":2615:2648  uint(_reserve0) * uint(_reserve1) */\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"contracts/UniswapV2Pair.sol\":2603:2611  balance1 */\n      dup2\n        /* \"contracts/UniswapV2Pair.sol\":2592:2600  balance0 */\n      dup4\n        /* \"contracts/UniswapV2Pair.sol\":2592:2611  balance0 * balance1 */\n      tag_149\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_149:\n        /* \"contracts/UniswapV2Pair.sol\":2592:2648  balance0 * balance1 >= uint(_reserve0) * uint(_reserve1) */\n      lt\n      iszero\n        /* \"contracts/UniswapV2Pair.sol\":2584:2665  require(balance0 * balance1 >= uint(_reserve0) * uint(_reserve1), \"UniswapV2: K\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/UniswapV2Pair.sol\":2676:2703  _update(balance0, balance1) */\n      tag_153\n        /* \"contracts/UniswapV2Pair.sol\":2684:2692  balance0 */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":2694:2702  balance1 */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":2676:2683  _update */\n      tag_154\n        /* \"contracts/UniswapV2Pair.sol\":2676:2703  _update(balance0, balance1) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/UniswapV2Pair.sol\":2147:2710  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_156\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/UniswapV2Pair.sol\":2065:2710  function swap(uint amount0Out, uint amount1Out, address to) external nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_93\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_93\n      jump\t// in\n    tag_160:\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_162\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_161)\n    tag_162:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_163:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_163\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/UniswapV2Pair.sol\":1449:2014  function removeLiquidity(uint liquidity) external nonReentrant returns (uint amount0, uint amount1) {... */\n    tag_72:\n        /* \"contracts/UniswapV2Pair.sol\":1521:1533  uint amount0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":1535:1547  uint amount1 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_165\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/UniswapV2Pair.sol\":1592:1601  liquidity */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":1567:1588  balanceOf(msg.sender) */\n      tag_167\n        /* \"contracts/UniswapV2Pair.sol\":1577:1587  msg.sender */\n      caller\n        /* \"contracts/UniswapV2Pair.sol\":1567:1576  balanceOf */\n      tag_64\n        /* \"contracts/UniswapV2Pair.sol\":1567:1588  balanceOf(msg.sender) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/UniswapV2Pair.sol\":1567:1601  balanceOf(msg.sender) >= liquidity */\n      lt\n      iszero\n        /* \"contracts/UniswapV2Pair.sol\":1559:1626  require(balanceOf(msg.sender) >= liquidity, \"Not enough liquidity\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/UniswapV2Pair.sol\":1637:1654  uint _totalSupply */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":1657:1670  totalSupply() */\n      tag_171\n        /* \"contracts/UniswapV2Pair.sol\":1657:1668  totalSupply */\n      tag_41\n        /* \"contracts/UniswapV2Pair.sol\":1657:1670  totalSupply() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/UniswapV2Pair.sol\":1637:1670  uint _totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":1715:1727  _totalSupply */\n      dup1\n        /* \"contracts/UniswapV2Pair.sol\":1703:1711  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1691:1711  liquidity * reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1691:1700  liquidity */\n      dup6\n        /* \"contracts/UniswapV2Pair.sol\":1691:1711  liquidity * reserve0 */\n      tag_172\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_172:\n        /* \"contracts/UniswapV2Pair.sol\":1690:1727  (liquidity * reserve0) / _totalSupply */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"contracts/UniswapV2Pair.sol\":1680:1727  amount0 = (liquidity * reserve0) / _totalSupply */\n      swap3\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":1772:1784  _totalSupply */\n      dup1\n        /* \"contracts/UniswapV2Pair.sol\":1760:1768  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1748:1768  liquidity * reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1748:1757  liquidity */\n      dup6\n        /* \"contracts/UniswapV2Pair.sol\":1748:1768  liquidity * reserve1 */\n      tag_175\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_175:\n        /* \"contracts/UniswapV2Pair.sol\":1747:1784  (liquidity * reserve1) / _totalSupply */\n      tag_176\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_176:\n        /* \"contracts/UniswapV2Pair.sol\":1737:1784  amount1 = (liquidity * reserve1) / _totalSupply */\n      swap2\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":1795:1823  _burn(msg.sender, liquidity) */\n      tag_177\n        /* \"contracts/UniswapV2Pair.sol\":1801:1811  msg.sender */\n      caller\n        /* \"contracts/UniswapV2Pair.sol\":1813:1822  liquidity */\n      dup6\n        /* \"contracts/UniswapV2Pair.sol\":1795:1800  _burn */\n      tag_178\n        /* \"contracts/UniswapV2Pair.sol\":1795:1823  _burn(msg.sender, liquidity) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/UniswapV2Pair.sol\":1840:1846  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1833:1856  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/UniswapV2Pair.sol\":1857:1867  msg.sender */\n      caller\n        /* \"contracts/UniswapV2Pair.sol\":1869:1876  amount0 */\n      dup6\n        /* \"contracts/UniswapV2Pair.sol\":1833:1877  IERC20(token0).transfer(msg.sender, amount0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_182:\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":1894:1900  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1887:1910  IERC20(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/UniswapV2Pair.sol\":1911:1921  msg.sender */\n      caller\n        /* \"contracts/UniswapV2Pair.sol\":1923:1930  amount1 */\n      dup5\n        /* \"contracts/UniswapV2Pair.sol\":1887:1931  IERC20(token1).transfer(msg.sender, amount1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_186:\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":1942:2007  _update(reserve0 - uint112(amount0), reserve1 - uint112(amount1)) */\n      tag_187\n        /* \"contracts/UniswapV2Pair.sol\":1969:1976  amount0 */\n      dup4\n        /* \"contracts/UniswapV2Pair.sol\":1950:1958  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1950:1977  reserve0 - uint112(amount0) */\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"contracts/UniswapV2Pair.sol\":1942:2007  _update(reserve0 - uint112(amount0), reserve1 - uint112(amount1)) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1998:2005  amount1 */\n      dup4\n        /* \"contracts/UniswapV2Pair.sol\":1979:1987  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1979:2006  reserve1 - uint112(amount1) */\n      tag_190\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_190:\n        /* \"contracts/UniswapV2Pair.sol\":1942:2007  _update(reserve0 - uint112(amount0), reserve1 - uint112(amount1)) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1942:1949  _update */\n      tag_154\n        /* \"contracts/UniswapV2Pair.sol\":1942:2007  _update(reserve0 - uint112(amount0), reserve1 - uint112(amount1)) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/UniswapV2Pair.sol\":1549:2014  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_191\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_156\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/UniswapV2Pair.sol\":1449:2014  function removeLiquidity(uint liquidity) external nonReentrant returns (uint amount0, uint amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/UniswapV2Pair.sol\":864:1405  function addLiquidity(uint amount0, uint amount1) external nonReentrant returns (uint liquidity) {... */\n    tag_78:\n        /* \"contracts/UniswapV2Pair.sol\":945:959  uint liquidity */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_193\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/UniswapV2Pair.sol\":978:984  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":971:998  IERC20(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/UniswapV2Pair.sol\":999:1009  msg.sender */\n      caller\n        /* \"contracts/UniswapV2Pair.sol\":1019:1023  this */\n      address\n        /* \"contracts/UniswapV2Pair.sol\":1026:1033  amount0 */\n      dup7\n        /* \"contracts/UniswapV2Pair.sol\":971:1034  IERC20(token0).transferFrom(msg.sender, address(this), amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_199:\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":1051:1057  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1044:1071  IERC20(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/UniswapV2Pair.sol\":1072:1082  msg.sender */\n      caller\n        /* \"contracts/UniswapV2Pair.sol\":1092:1096  this */\n      address\n        /* \"contracts/UniswapV2Pair.sol\":1099:1106  amount1 */\n      dup6\n        /* \"contracts/UniswapV2Pair.sol\":1044:1107  IERC20(token1).transferFrom(msg.sender, address(this), amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_200:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_203\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_203:\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":1139:1140  0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":1122:1135  totalSupply() */\n      tag_204\n        /* \"contracts/UniswapV2Pair.sol\":1122:1133  totalSupply */\n      tag_41\n        /* \"contracts/UniswapV2Pair.sol\":1122:1135  totalSupply() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/UniswapV2Pair.sol\":1122:1140  totalSupply() == 0 */\n      sub\n        /* \"contracts/UniswapV2Pair.sol\":1118:1324  if (totalSupply() == 0) {... */\n      tag_205\n      jumpi\n        /* \"contracts/UniswapV2Pair.sol\":1168:1191  sqrt(amount0 * amount1) */\n      tag_206\n        /* \"contracts/UniswapV2Pair.sol\":1183:1190  amount1 */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":1173:1180  amount0 */\n      dup5\n        /* \"contracts/UniswapV2Pair.sol\":1173:1190  amount0 * amount1 */\n      tag_207\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_207:\n        /* \"contracts/UniswapV2Pair.sol\":1168:1172  sqrt */\n      tag_208\n        /* \"contracts/UniswapV2Pair.sol\":1168:1191  sqrt(amount0 * amount1) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/UniswapV2Pair.sol\":1156:1191  liquidity = sqrt(amount0 * amount1) */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":1118:1324  if (totalSupply() == 0) {... */\n      jump(tag_209)\n    tag_205:\n        /* \"contracts/UniswapV2Pair.sol\":1234:1313  min((amount0 * totalSupply()) / reserve0, (amount1 * totalSupply()) / reserve1) */\n      tag_210\n        /* \"contracts/UniswapV2Pair.sol\":1266:1274  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1238:1274  (amount0 * totalSupply()) / reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1249:1262  totalSupply() */\n      tag_211\n        /* \"contracts/UniswapV2Pair.sol\":1249:1260  totalSupply */\n      tag_41\n        /* \"contracts/UniswapV2Pair.sol\":1249:1262  totalSupply() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/UniswapV2Pair.sol\":1239:1246  amount0 */\n      dup6\n        /* \"contracts/UniswapV2Pair.sol\":1239:1262  amount0 * totalSupply() */\n      tag_212\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_212:\n        /* \"contracts/UniswapV2Pair.sol\":1238:1274  (amount0 * totalSupply()) / reserve0 */\n      tag_213\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_213:\n        /* \"contracts/UniswapV2Pair.sol\":1304:1312  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1276:1312  (amount1 * totalSupply()) / reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2Pair.sol\":1287:1300  totalSupply() */\n      tag_214\n        /* \"contracts/UniswapV2Pair.sol\":1287:1298  totalSupply */\n      tag_41\n        /* \"contracts/UniswapV2Pair.sol\":1287:1300  totalSupply() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/UniswapV2Pair.sol\":1277:1284  amount1 */\n      dup6\n        /* \"contracts/UniswapV2Pair.sol\":1277:1300  amount1 * totalSupply() */\n      tag_215\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_215:\n        /* \"contracts/UniswapV2Pair.sol\":1276:1312  (amount1 * totalSupply()) / reserve1 */\n      tag_216\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_216:\n        /* \"contracts/UniswapV2Pair.sol\":1234:1237  min */\n      tag_217\n        /* \"contracts/UniswapV2Pair.sol\":1234:1313  min((amount0 * totalSupply()) / reserve0, (amount1 * totalSupply()) / reserve1) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/UniswapV2Pair.sol\":1222:1313  liquidity = min((amount0 * totalSupply()) / reserve0, (amount1 * totalSupply()) / reserve1) */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":1118:1324  if (totalSupply() == 0) {... */\n    tag_209:\n        /* \"contracts/UniswapV2Pair.sol\":1334:1362  _mint(msg.sender, liquidity) */\n      tag_218\n        /* \"contracts/UniswapV2Pair.sol\":1340:1350  msg.sender */\n      caller\n        /* \"contracts/UniswapV2Pair.sol\":1352:1361  liquidity */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":1334:1339  _mint */\n      tag_219\n        /* \"contracts/UniswapV2Pair.sol\":1334:1362  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/UniswapV2Pair.sol\":1373:1398  _update(amount0, amount1) */\n      tag_220\n        /* \"contracts/UniswapV2Pair.sol\":1381:1388  amount0 */\n      dup4\n        /* \"contracts/UniswapV2Pair.sol\":1390:1397  amount1 */\n      dup4\n        /* \"contracts/UniswapV2Pair.sol\":1373:1380  _update */\n      tag_154\n        /* \"contracts/UniswapV2Pair.sol\":1373:1398  _update(amount0, amount1) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_221\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_156\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/UniswapV2Pair.sol\":864:1405  function addLiquidity(uint amount0, uint amount1) external nonReentrant returns (uint liquidity) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2Pair.sol\":313:334  address public token1 */\n    tag_85:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x05\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/UniswapV2Pair.sol\":2716:2854  function _update(uint balance0, uint balance1) private {... */\n    tag_154:\n        /* \"contracts/UniswapV2Pair.sol\":2800:2808  balance0 */\n      dup2\n        /* \"contracts/UniswapV2Pair.sol\":2781:2789  reserve0 */\n      0x08\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":2781:2809  reserve0 = uint112(balance0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2838:2846  balance1 */\n      dup1\n        /* \"contracts/UniswapV2Pair.sol\":2819:2827  reserve1 */\n      0x08\n      0x0e\n        /* \"contracts/UniswapV2Pair.sol\":2819:2847  reserve1 = uint112(balance1) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2716:2854  function _update(uint balance0, uint balance1) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x05\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2Pair.sol\":2860:3169  function sqrt(uint y) private pure returns (uint z) {... */\n    tag_208:\n        /* \"contracts/UniswapV2Pair.sol\":2904:2910  uint z */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":2930:2931  3 */\n      0x03\n        /* \"contracts/UniswapV2Pair.sol\":2926:2927  y */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":2926:2931  y > 3 */\n      gt\n        /* \"contracts/UniswapV2Pair.sol\":2922:3145  if (y > 3) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"contracts/UniswapV2Pair.sol\":2951:2952  y */\n      dup2\n        /* \"contracts/UniswapV2Pair.sol\":2947:2952  z = y */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2966:2972  uint x */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":2983:2984  1 */\n      0x01\n        /* \"contracts/UniswapV2Pair.sol\":2979:2980  2 */\n      0x02\n        /* \"contracts/UniswapV2Pair.sol\":2975:2976  y */\n      dup5\n        /* \"contracts/UniswapV2Pair.sol\":2975:2980  y / 2 */\n      tag_254\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_254:\n        /* \"contracts/UniswapV2Pair.sol\":2975:2984  y / 2 + 1 */\n      tag_255\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"contracts/UniswapV2Pair.sol\":2966:2984  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2998:3087  while (x < z) {... */\n    tag_257:\n        /* \"contracts/UniswapV2Pair.sol\":3009:3010  z */\n      dup2\n        /* \"contracts/UniswapV2Pair.sol\":3005:3006  x */\n      dup2\n        /* \"contracts/UniswapV2Pair.sol\":3005:3010  x < z */\n      lt\n        /* \"contracts/UniswapV2Pair.sol\":2998:3087  while (x < z) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/UniswapV2Pair.sol\":3034:3035  x */\n      dup1\n        /* \"contracts/UniswapV2Pair.sol\":3030:3035  z = x */\n      swap2\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":3071:3072  2 */\n      0x02\n        /* \"contracts/UniswapV2Pair.sol\":3066:3067  x */\n      dup2\n        /* \"contracts/UniswapV2Pair.sol\":3062:3063  x */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":3058:3059  y */\n      dup6\n        /* \"contracts/UniswapV2Pair.sol\":3058:3063  y / x */\n      tag_259\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_259:\n        /* \"contracts/UniswapV2Pair.sol\":3058:3067  y / x + x */\n      tag_260\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_260:\n        /* \"contracts/UniswapV2Pair.sol\":3057:3072  (y / x + x) / 2 */\n      tag_261\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_261:\n        /* \"contracts/UniswapV2Pair.sol\":3053:3072  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2998:3087  while (x < z) {... */\n      jump(tag_257)\n    tag_258:\n        /* \"contracts/UniswapV2Pair.sol\":2933:3097  {... */\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":2922:3145  if (y > 3) {... */\n      jump(tag_262)\n    tag_253:\n        /* \"contracts/UniswapV2Pair.sol\":3112:3113  0 */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":3107:3108  y */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":3107:3113  y != 0 */\n      eq\n        /* \"contracts/UniswapV2Pair.sol\":3103:3145  if (y != 0) {... */\n      tag_263\n      jumpi\n        /* \"contracts/UniswapV2Pair.sol\":3133:3134  1 */\n      0x01\n        /* \"contracts/UniswapV2Pair.sol\":3129:3134  z = 1 */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":3103:3145  if (y != 0) {... */\n    tag_263:\n        /* \"contracts/UniswapV2Pair.sol\":2922:3145  if (y > 3) {... */\n    tag_262:\n        /* \"contracts/UniswapV2Pair.sol\":2860:3169  function sqrt(uint y) private pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2Pair.sol\":3175:3269  function min(uint x, uint y) private pure returns (uint) {... */\n    tag_217:\n        /* \"contracts/UniswapV2Pair.sol\":3226:3230  uint */\n      0x00\n        /* \"contracts/UniswapV2Pair.sol\":3253:3254  y */\n      dup2\n        /* \"contracts/UniswapV2Pair.sol\":3249:3250  x */\n      dup4\n        /* \"contracts/UniswapV2Pair.sol\":3249:3254  x < y */\n      lt\n        /* \"contracts/UniswapV2Pair.sol\":3249:3262  x < y ? x : y */\n      tag_265\n      jumpi\n        /* \"contracts/UniswapV2Pair.sol\":3261:3262  y */\n      dup2\n        /* \"contracts/UniswapV2Pair.sol\":3249:3262  x < y ? x : y */\n      jump(tag_266)\n    tag_265:\n        /* \"contracts/UniswapV2Pair.sol\":3257:3258  x */\n      dup3\n        /* \"contracts/UniswapV2Pair.sol\":3249:3262  x < y ? x : y */\n    tag_266:\n        /* \"contracts/UniswapV2Pair.sol\":3242:3262  return x < y ? x : y */\n      swap1\n      pop\n        /* \"contracts/UniswapV2Pair.sol\":3175:3269  function min(uint x, uint y) private pure returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_277\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_280\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_280:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_281)\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_285)\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_286\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_287:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_288:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_289:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_290:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_291:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_330\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_287\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":711:782   */\n      tag_331\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_288\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_332\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_289\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":881:910   */\n      tag_333\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_290\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_335\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_291\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1356   */\n    tag_292:\n        /* \"#utility.yul\":1279:1286   */\n      0x00\n        /* \"#utility.yul\":1319:1349   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1312:1317   */\n      dup3\n        /* \"#utility.yul\":1308:1350   */\n      and\n        /* \"#utility.yul\":1297:1350   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1362:1480   */\n    tag_293:\n        /* \"#utility.yul\":1449:1473   */\n      tag_338\n        /* \"#utility.yul\":1467:1472   */\n      dup2\n        /* \"#utility.yul\":1449:1473   */\n      tag_292\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1444:1447   */\n      dup3\n        /* \"#utility.yul\":1437:1474   */\n      mstore\n        /* \"#utility.yul\":1362:1480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1486:1818   */\n    tag_29:\n        /* \"#utility.yul\":1607:1611   */\n      0x00\n        /* \"#utility.yul\":1645:1647   */\n      0x40\n        /* \"#utility.yul\":1634:1643   */\n      dup3\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1622:1648   */\n      swap1\n      pop\n        /* \"#utility.yul\":1658:1729   */\n      tag_340\n        /* \"#utility.yul\":1726:1727   */\n      0x00\n        /* \"#utility.yul\":1715:1724   */\n      dup4\n        /* \"#utility.yul\":1711:1728   */\n      add\n        /* \"#utility.yul\":1702:1708   */\n      dup6\n        /* \"#utility.yul\":1658:1729   */\n      tag_293\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1739:1811   */\n      tag_341\n        /* \"#utility.yul\":1807:1809   */\n      0x20\n        /* \"#utility.yul\":1796:1805   */\n      dup4\n        /* \"#utility.yul\":1792:1810   */\n      add\n        /* \"#utility.yul\":1783:1789   */\n      dup5\n        /* \"#utility.yul\":1739:1811   */\n      tag_293\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1486:1818   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1905:2022   */\n    tag_295:\n        /* \"#utility.yul\":2014:2015   */\n      0x00\n        /* \"#utility.yul\":2011:2012   */\n      dup1\n        /* \"#utility.yul\":2004:2016   */\n      revert\n        /* \"#utility.yul\":2151:2277   */\n    tag_297:\n        /* \"#utility.yul\":2188:2195   */\n      0x00\n        /* \"#utility.yul\":2228:2270   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2221:2226   */\n      dup3\n        /* \"#utility.yul\":2217:2271   */\n      and\n        /* \"#utility.yul\":2206:2271   */\n      swap1\n      pop\n        /* \"#utility.yul\":2151:2277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2283:2379   */\n    tag_298:\n        /* \"#utility.yul\":2320:2327   */\n      0x00\n        /* \"#utility.yul\":2349:2373   */\n      tag_347\n        /* \"#utility.yul\":2367:2372   */\n      dup3\n        /* \"#utility.yul\":2349:2373   */\n      tag_297\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2338:2373   */\n      swap1\n      pop\n        /* \"#utility.yul\":2283:2379   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2385:2507   */\n    tag_299:\n        /* \"#utility.yul\":2458:2482   */\n      tag_349\n        /* \"#utility.yul\":2476:2481   */\n      dup2\n        /* \"#utility.yul\":2458:2482   */\n      tag_298\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2451:2456   */\n      dup2\n        /* \"#utility.yul\":2448:2483   */\n      eq\n        /* \"#utility.yul\":2438:2501   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":2497:2498   */\n      0x00\n        /* \"#utility.yul\":2494:2495   */\n      dup1\n        /* \"#utility.yul\":2487:2499   */\n      revert\n        /* \"#utility.yul\":2438:2501   */\n    tag_350:\n        /* \"#utility.yul\":2385:2507   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2513:2652   */\n    tag_300:\n        /* \"#utility.yul\":2559:2564   */\n      0x00\n        /* \"#utility.yul\":2597:2603   */\n      dup2\n        /* \"#utility.yul\":2584:2604   */\n      calldataload\n        /* \"#utility.yul\":2575:2604   */\n      swap1\n      pop\n        /* \"#utility.yul\":2613:2646   */\n      tag_352\n        /* \"#utility.yul\":2640:2645   */\n      dup2\n        /* \"#utility.yul\":2613:2646   */\n      tag_299\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2513:2652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2658:2735   */\n    tag_301:\n        /* \"#utility.yul\":2695:2702   */\n      0x00\n        /* \"#utility.yul\":2724:2729   */\n      dup2\n        /* \"#utility.yul\":2713:2729   */\n      swap1\n      pop\n        /* \"#utility.yul\":2658:2735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2863   */\n    tag_302:\n        /* \"#utility.yul\":2814:2838   */\n      tag_355\n        /* \"#utility.yul\":2832:2837   */\n      dup2\n        /* \"#utility.yul\":2814:2838   */\n      tag_301\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2804:2839   */\n      eq\n        /* \"#utility.yul\":2794:2857   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":2853:2854   */\n      0x00\n        /* \"#utility.yul\":2850:2851   */\n      dup1\n        /* \"#utility.yul\":2843:2855   */\n      revert\n        /* \"#utility.yul\":2794:2857   */\n    tag_356:\n        /* \"#utility.yul\":2741:2863   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2869:3008   */\n    tag_303:\n        /* \"#utility.yul\":2915:2920   */\n      0x00\n        /* \"#utility.yul\":2953:2959   */\n      dup2\n        /* \"#utility.yul\":2940:2960   */\n      calldataload\n        /* \"#utility.yul\":2931:2960   */\n      swap1\n      pop\n        /* \"#utility.yul\":2969:3002   */\n      tag_358\n        /* \"#utility.yul\":2996:3001   */\n      dup2\n        /* \"#utility.yul\":2969:3002   */\n      tag_302\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2869:3008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3014:3488   */\n    tag_32:\n        /* \"#utility.yul\":3082:3088   */\n      0x00\n        /* \"#utility.yul\":3090:3096   */\n      dup1\n        /* \"#utility.yul\":3139:3141   */\n      0x40\n        /* \"#utility.yul\":3127:3136   */\n      dup4\n        /* \"#utility.yul\":3118:3125   */\n      dup6\n        /* \"#utility.yul\":3114:3137   */\n      sub\n        /* \"#utility.yul\":3110:3142   */\n      slt\n        /* \"#utility.yul\":3107:3226   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":3145:3224   */\n      tag_361\n      tag_295\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3107:3226   */\n    tag_360:\n        /* \"#utility.yul\":3265:3266   */\n      0x00\n        /* \"#utility.yul\":3290:3343   */\n      tag_362\n        /* \"#utility.yul\":3335:3342   */\n      dup6\n        /* \"#utility.yul\":3326:3332   */\n      dup3\n        /* \"#utility.yul\":3315:3324   */\n      dup7\n        /* \"#utility.yul\":3311:3333   */\n      add\n        /* \"#utility.yul\":3290:3343   */\n      tag_300\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3280:3343   */\n      swap3\n      pop\n        /* \"#utility.yul\":3236:3353   */\n      pop\n        /* \"#utility.yul\":3392:3394   */\n      0x20\n        /* \"#utility.yul\":3418:3471   */\n      tag_363\n        /* \"#utility.yul\":3463:3470   */\n      dup6\n        /* \"#utility.yul\":3454:3460   */\n      dup3\n        /* \"#utility.yul\":3443:3452   */\n      dup7\n        /* \"#utility.yul\":3439:3461   */\n      add\n        /* \"#utility.yul\":3418:3471   */\n      tag_303\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3408:3471   */\n      swap2\n      pop\n        /* \"#utility.yul\":3363:3481   */\n      pop\n        /* \"#utility.yul\":3014:3488   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3584   */\n    tag_304:\n        /* \"#utility.yul\":3528:3535   */\n      0x00\n        /* \"#utility.yul\":3571:3576   */\n      dup2\n        /* \"#utility.yul\":3564:3577   */\n      iszero\n        /* \"#utility.yul\":3557:3578   */\n      iszero\n        /* \"#utility.yul\":3546:3578   */\n      swap1\n      pop\n        /* \"#utility.yul\":3494:3584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3590:3699   */\n    tag_305:\n        /* \"#utility.yul\":3671:3692   */\n      tag_366\n        /* \"#utility.yul\":3686:3691   */\n      dup2\n        /* \"#utility.yul\":3671:3692   */\n      tag_304\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3666:3669   */\n      dup3\n        /* \"#utility.yul\":3659:3693   */\n      mstore\n        /* \"#utility.yul\":3590:3699   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3705:3915   */\n    tag_35:\n        /* \"#utility.yul\":3792:3796   */\n      0x00\n        /* \"#utility.yul\":3830:3832   */\n      0x20\n        /* \"#utility.yul\":3819:3828   */\n      dup3\n        /* \"#utility.yul\":3815:3833   */\n      add\n        /* \"#utility.yul\":3807:3833   */\n      swap1\n      pop\n        /* \"#utility.yul\":3843:3908   */\n      tag_368\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3894:3903   */\n      dup4\n        /* \"#utility.yul\":3890:3907   */\n      add\n        /* \"#utility.yul\":3881:3887   */\n      dup5\n        /* \"#utility.yul\":3843:3908   */\n      tag_305\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3705:3915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3921:4039   */\n    tag_306:\n        /* \"#utility.yul\":4008:4032   */\n      tag_370\n        /* \"#utility.yul\":4026:4031   */\n      dup2\n        /* \"#utility.yul\":4008:4032   */\n      tag_298\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4003:4006   */\n      dup3\n        /* \"#utility.yul\":3996:4033   */\n      mstore\n        /* \"#utility.yul\":3921:4039   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4045:4267   */\n    tag_39:\n        /* \"#utility.yul\":4138:4142   */\n      0x00\n        /* \"#utility.yul\":4176:4178   */\n      0x20\n        /* \"#utility.yul\":4165:4174   */\n      dup3\n        /* \"#utility.yul\":4161:4179   */\n      add\n        /* \"#utility.yul\":4153:4179   */\n      swap1\n      pop\n        /* \"#utility.yul\":4189:4260   */\n      tag_372\n        /* \"#utility.yul\":4257:4258   */\n      0x00\n        /* \"#utility.yul\":4246:4255   */\n      dup4\n        /* \"#utility.yul\":4242:4259   */\n      add\n        /* \"#utility.yul\":4233:4239   */\n      dup5\n        /* \"#utility.yul\":4189:4260   */\n      tag_306\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4045:4267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4273:4391   */\n    tag_307:\n        /* \"#utility.yul\":4360:4384   */\n      tag_374\n        /* \"#utility.yul\":4378:4383   */\n      dup2\n        /* \"#utility.yul\":4360:4384   */\n      tag_301\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4355:4358   */\n      dup3\n        /* \"#utility.yul\":4348:4385   */\n      mstore\n        /* \"#utility.yul\":4273:4391   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4397:4619   */\n    tag_43:\n        /* \"#utility.yul\":4490:4494   */\n      0x00\n        /* \"#utility.yul\":4528:4530   */\n      0x20\n        /* \"#utility.yul\":4517:4526   */\n      dup3\n        /* \"#utility.yul\":4513:4531   */\n      add\n        /* \"#utility.yul\":4505:4531   */\n      swap1\n      pop\n        /* \"#utility.yul\":4541:4612   */\n      tag_376\n        /* \"#utility.yul\":4609:4610   */\n      0x00\n        /* \"#utility.yul\":4598:4607   */\n      dup4\n        /* \"#utility.yul\":4594:4611   */\n      add\n        /* \"#utility.yul\":4585:4591   */\n      dup5\n        /* \"#utility.yul\":4541:4612   */\n      tag_307\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4397:4619   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4625:5244   */\n    tag_46:\n        /* \"#utility.yul\":4702:4708   */\n      0x00\n        /* \"#utility.yul\":4710:4716   */\n      dup1\n        /* \"#utility.yul\":4718:4724   */\n      0x00\n        /* \"#utility.yul\":4767:4769   */\n      0x60\n        /* \"#utility.yul\":4755:4764   */\n      dup5\n        /* \"#utility.yul\":4746:4753   */\n      dup7\n        /* \"#utility.yul\":4742:4765   */\n      sub\n        /* \"#utility.yul\":4738:4770   */\n      slt\n        /* \"#utility.yul\":4735:4854   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":4773:4852   */\n      tag_379\n      tag_295\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4735:4854   */\n    tag_378:\n        /* \"#utility.yul\":4893:4894   */\n      0x00\n        /* \"#utility.yul\":4918:4971   */\n      tag_380\n        /* \"#utility.yul\":4963:4970   */\n      dup7\n        /* \"#utility.yul\":4954:4960   */\n      dup3\n        /* \"#utility.yul\":4943:4952   */\n      dup8\n        /* \"#utility.yul\":4939:4961   */\n      add\n        /* \"#utility.yul\":4918:4971   */\n      tag_300\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4908:4971   */\n      swap4\n      pop\n        /* \"#utility.yul\":4864:4981   */\n      pop\n        /* \"#utility.yul\":5020:5022   */\n      0x20\n        /* \"#utility.yul\":5046:5099   */\n      tag_381\n        /* \"#utility.yul\":5091:5098   */\n      dup7\n        /* \"#utility.yul\":5082:5088   */\n      dup3\n        /* \"#utility.yul\":5071:5080   */\n      dup8\n        /* \"#utility.yul\":5067:5089   */\n      add\n        /* \"#utility.yul\":5046:5099   */\n      tag_300\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5036:5099   */\n      swap3\n      pop\n        /* \"#utility.yul\":4991:5109   */\n      pop\n        /* \"#utility.yul\":5148:5150   */\n      0x40\n        /* \"#utility.yul\":5174:5227   */\n      tag_382\n        /* \"#utility.yul\":5219:5226   */\n      dup7\n        /* \"#utility.yul\":5210:5216   */\n      dup3\n        /* \"#utility.yul\":5199:5208   */\n      dup8\n        /* \"#utility.yul\":5195:5217   */\n      add\n        /* \"#utility.yul\":5174:5227   */\n      tag_303\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5164:5227   */\n      swap2\n      pop\n        /* \"#utility.yul\":5119:5237   */\n      pop\n        /* \"#utility.yul\":4625:5244   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5250:5336   */\n    tag_308:\n        /* \"#utility.yul\":5285:5292   */\n      0x00\n        /* \"#utility.yul\":5325:5329   */\n      0xff\n        /* \"#utility.yul\":5318:5323   */\n      dup3\n        /* \"#utility.yul\":5314:5330   */\n      and\n        /* \"#utility.yul\":5303:5330   */\n      swap1\n      pop\n        /* \"#utility.yul\":5250:5336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5342:5454   */\n    tag_309:\n        /* \"#utility.yul\":5425:5447   */\n      tag_385\n        /* \"#utility.yul\":5441:5446   */\n      dup2\n        /* \"#utility.yul\":5425:5447   */\n      tag_308\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5420:5423   */\n      dup3\n        /* \"#utility.yul\":5413:5448   */\n      mstore\n        /* \"#utility.yul\":5342:5454   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5460:5674   */\n    tag_52:\n        /* \"#utility.yul\":5549:5553   */\n      0x00\n        /* \"#utility.yul\":5587:5589   */\n      0x20\n        /* \"#utility.yul\":5576:5585   */\n      dup3\n        /* \"#utility.yul\":5572:5590   */\n      add\n        /* \"#utility.yul\":5564:5590   */\n      swap1\n      pop\n        /* \"#utility.yul\":5600:5667   */\n      tag_387\n        /* \"#utility.yul\":5664:5665   */\n      0x00\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5649:5666   */\n      add\n        /* \"#utility.yul\":5640:5646   */\n      dup5\n        /* \"#utility.yul\":5600:5667   */\n      tag_309\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5460:5674   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5680:6154   */\n    tag_55:\n        /* \"#utility.yul\":5748:5754   */\n      0x00\n        /* \"#utility.yul\":5756:5762   */\n      dup1\n        /* \"#utility.yul\":5805:5807   */\n      0x40\n        /* \"#utility.yul\":5793:5802   */\n      dup4\n        /* \"#utility.yul\":5784:5791   */\n      dup6\n        /* \"#utility.yul\":5780:5803   */\n      sub\n        /* \"#utility.yul\":5776:5808   */\n      slt\n        /* \"#utility.yul\":5773:5892   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":5811:5890   */\n      tag_390\n      tag_295\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5773:5892   */\n    tag_389:\n        /* \"#utility.yul\":5931:5932   */\n      0x00\n        /* \"#utility.yul\":5956:6009   */\n      tag_391\n        /* \"#utility.yul\":6001:6008   */\n      dup6\n        /* \"#utility.yul\":5992:5998   */\n      dup3\n        /* \"#utility.yul\":5981:5990   */\n      dup7\n        /* \"#utility.yul\":5977:5999   */\n      add\n        /* \"#utility.yul\":5956:6009   */\n      tag_300\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5946:6009   */\n      swap3\n      pop\n        /* \"#utility.yul\":5902:6019   */\n      pop\n        /* \"#utility.yul\":6058:6060   */\n      0x20\n        /* \"#utility.yul\":6084:6137   */\n      tag_392\n        /* \"#utility.yul\":6129:6136   */\n      dup6\n        /* \"#utility.yul\":6120:6126   */\n      dup3\n        /* \"#utility.yul\":6109:6118   */\n      dup7\n        /* \"#utility.yul\":6105:6127   */\n      add\n        /* \"#utility.yul\":6084:6137   */\n      tag_300\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6074:6137   */\n      swap2\n      pop\n        /* \"#utility.yul\":6029:6147   */\n      pop\n        /* \"#utility.yul\":5680:6154   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6160:6779   */\n    tag_59:\n        /* \"#utility.yul\":6237:6243   */\n      0x00\n        /* \"#utility.yul\":6245:6251   */\n      dup1\n        /* \"#utility.yul\":6253:6259   */\n      0x00\n        /* \"#utility.yul\":6302:6304   */\n      0x60\n        /* \"#utility.yul\":6290:6299   */\n      dup5\n        /* \"#utility.yul\":6281:6288   */\n      dup7\n        /* \"#utility.yul\":6277:6300   */\n      sub\n        /* \"#utility.yul\":6273:6305   */\n      slt\n        /* \"#utility.yul\":6270:6389   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":6308:6387   */\n      tag_395\n      tag_295\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6270:6389   */\n    tag_394:\n        /* \"#utility.yul\":6428:6429   */\n      0x00\n        /* \"#utility.yul\":6453:6506   */\n      tag_396\n        /* \"#utility.yul\":6498:6505   */\n      dup7\n        /* \"#utility.yul\":6489:6495   */\n      dup3\n        /* \"#utility.yul\":6478:6487   */\n      dup8\n        /* \"#utility.yul\":6474:6496   */\n      add\n        /* \"#utility.yul\":6453:6506   */\n      tag_303\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6443:6506   */\n      swap4\n      pop\n        /* \"#utility.yul\":6399:6516   */\n      pop\n        /* \"#utility.yul\":6555:6557   */\n      0x20\n        /* \"#utility.yul\":6581:6634   */\n      tag_397\n        /* \"#utility.yul\":6626:6633   */\n      dup7\n        /* \"#utility.yul\":6617:6623   */\n      dup3\n        /* \"#utility.yul\":6606:6615   */\n      dup8\n        /* \"#utility.yul\":6602:6624   */\n      add\n        /* \"#utility.yul\":6581:6634   */\n      tag_303\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6571:6634   */\n      swap3\n      pop\n        /* \"#utility.yul\":6526:6644   */\n      pop\n        /* \"#utility.yul\":6683:6685   */\n      0x40\n        /* \"#utility.yul\":6709:6762   */\n      tag_398\n        /* \"#utility.yul\":6754:6761   */\n      dup7\n        /* \"#utility.yul\":6745:6751   */\n      dup3\n        /* \"#utility.yul\":6734:6743   */\n      dup8\n        /* \"#utility.yul\":6730:6752   */\n      add\n        /* \"#utility.yul\":6709:6762   */\n      tag_300\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6699:6762   */\n      swap2\n      pop\n        /* \"#utility.yul\":6654:6772   */\n      pop\n        /* \"#utility.yul\":6160:6779   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6785:7114   */\n    tag_63:\n        /* \"#utility.yul\":6844:6850   */\n      0x00\n        /* \"#utility.yul\":6893:6895   */\n      0x20\n        /* \"#utility.yul\":6881:6890   */\n      dup3\n        /* \"#utility.yul\":6872:6879   */\n      dup5\n        /* \"#utility.yul\":6868:6891   */\n      sub\n        /* \"#utility.yul\":6864:6896   */\n      slt\n        /* \"#utility.yul\":6861:6980   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":6899:6978   */\n      tag_401\n      tag_295\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":6861:6980   */\n    tag_400:\n        /* \"#utility.yul\":7019:7020   */\n      0x00\n        /* \"#utility.yul\":7044:7097   */\n      tag_402\n        /* \"#utility.yul\":7089:7096   */\n      dup5\n        /* \"#utility.yul\":7080:7086   */\n      dup3\n        /* \"#utility.yul\":7069:7078   */\n      dup6\n        /* \"#utility.yul\":7065:7087   */\n      add\n        /* \"#utility.yul\":7044:7097   */\n      tag_300\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7034:7097   */\n      swap2\n      pop\n        /* \"#utility.yul\":6990:7107   */\n      pop\n        /* \"#utility.yul\":6785:7114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7120:7449   */\n    tag_71:\n        /* \"#utility.yul\":7179:7185   */\n      0x00\n        /* \"#utility.yul\":7228:7230   */\n      0x20\n        /* \"#utility.yul\":7216:7225   */\n      dup3\n        /* \"#utility.yul\":7207:7214   */\n      dup5\n        /* \"#utility.yul\":7203:7226   */\n      sub\n        /* \"#utility.yul\":7199:7231   */\n      slt\n        /* \"#utility.yul\":7196:7315   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":7234:7313   */\n      tag_405\n      tag_295\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7196:7315   */\n    tag_404:\n        /* \"#utility.yul\":7354:7355   */\n      0x00\n        /* \"#utility.yul\":7379:7432   */\n      tag_406\n        /* \"#utility.yul\":7424:7431   */\n      dup5\n        /* \"#utility.yul\":7415:7421   */\n      dup3\n        /* \"#utility.yul\":7404:7413   */\n      dup6\n        /* \"#utility.yul\":7400:7422   */\n      add\n        /* \"#utility.yul\":7379:7432   */\n      tag_303\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7369:7432   */\n      swap2\n      pop\n        /* \"#utility.yul\":7325:7442   */\n      pop\n        /* \"#utility.yul\":7120:7449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7455:7787   */\n    tag_74:\n        /* \"#utility.yul\":7576:7580   */\n      0x00\n        /* \"#utility.yul\":7614:7616   */\n      0x40\n        /* \"#utility.yul\":7603:7612   */\n      dup3\n        /* \"#utility.yul\":7599:7617   */\n      add\n        /* \"#utility.yul\":7591:7617   */\n      swap1\n      pop\n        /* \"#utility.yul\":7627:7698   */\n      tag_408\n        /* \"#utility.yul\":7695:7696   */\n      0x00\n        /* \"#utility.yul\":7684:7693   */\n      dup4\n        /* \"#utility.yul\":7680:7697   */\n      add\n        /* \"#utility.yul\":7671:7677   */\n      dup6\n        /* \"#utility.yul\":7627:7698   */\n      tag_307\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7708:7780   */\n      tag_409\n        /* \"#utility.yul\":7776:7778   */\n      0x20\n        /* \"#utility.yul\":7765:7774   */\n      dup4\n        /* \"#utility.yul\":7761:7779   */\n      add\n        /* \"#utility.yul\":7752:7758   */\n      dup5\n        /* \"#utility.yul\":7708:7780   */\n      tag_307\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7455:7787   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7793:8267   */\n    tag_77:\n        /* \"#utility.yul\":7861:7867   */\n      0x00\n        /* \"#utility.yul\":7869:7875   */\n      dup1\n        /* \"#utility.yul\":7918:7920   */\n      0x40\n        /* \"#utility.yul\":7906:7915   */\n      dup4\n        /* \"#utility.yul\":7897:7904   */\n      dup6\n        /* \"#utility.yul\":7893:7916   */\n      sub\n        /* \"#utility.yul\":7889:7921   */\n      slt\n        /* \"#utility.yul\":7886:8005   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":7924:8003   */\n      tag_412\n      tag_295\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7886:8005   */\n    tag_411:\n        /* \"#utility.yul\":8044:8045   */\n      0x00\n        /* \"#utility.yul\":8069:8122   */\n      tag_413\n        /* \"#utility.yul\":8114:8121   */\n      dup6\n        /* \"#utility.yul\":8105:8111   */\n      dup3\n        /* \"#utility.yul\":8094:8103   */\n      dup7\n        /* \"#utility.yul\":8090:8112   */\n      add\n        /* \"#utility.yul\":8069:8122   */\n      tag_303\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8059:8122   */\n      swap3\n      pop\n        /* \"#utility.yul\":8015:8132   */\n      pop\n        /* \"#utility.yul\":8171:8173   */\n      0x20\n        /* \"#utility.yul\":8197:8250   */\n      tag_414\n        /* \"#utility.yul\":8242:8249   */\n      dup6\n        /* \"#utility.yul\":8233:8239   */\n      dup3\n        /* \"#utility.yul\":8222:8231   */\n      dup7\n        /* \"#utility.yul\":8218:8240   */\n      add\n        /* \"#utility.yul\":8197:8250   */\n      tag_303\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8187:8250   */\n      swap2\n      pop\n        /* \"#utility.yul\":8142:8260   */\n      pop\n        /* \"#utility.yul\":7793:8267   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8273:8453   */\n    tag_310:\n        /* \"#utility.yul\":8321:8398   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8318:8319   */\n      0x00\n        /* \"#utility.yul\":8311:8399   */\n      mstore\n        /* \"#utility.yul\":8418:8422   */\n      0x22\n        /* \"#utility.yul\":8415:8416   */\n      0x04\n        /* \"#utility.yul\":8408:8423   */\n      mstore\n        /* \"#utility.yul\":8442:8446   */\n      0x24\n        /* \"#utility.yul\":8439:8440   */\n      0x00\n        /* \"#utility.yul\":8432:8447   */\n      revert\n        /* \"#utility.yul\":8459:8779   */\n    tag_93:\n        /* \"#utility.yul\":8503:8509   */\n      0x00\n        /* \"#utility.yul\":8540:8541   */\n      0x02\n        /* \"#utility.yul\":8534:8538   */\n      dup3\n        /* \"#utility.yul\":8530:8542   */\n      div\n        /* \"#utility.yul\":8520:8542   */\n      swap1\n      pop\n        /* \"#utility.yul\":8587:8588   */\n      0x01\n        /* \"#utility.yul\":8581:8585   */\n      dup3\n        /* \"#utility.yul\":8577:8589   */\n      and\n        /* \"#utility.yul\":8608:8626   */\n      dup1\n        /* \"#utility.yul\":8598:8679   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":8664:8668   */\n      0x7f\n        /* \"#utility.yul\":8656:8662   */\n      dup3\n        /* \"#utility.yul\":8652:8669   */\n      and\n        /* \"#utility.yul\":8642:8669   */\n      swap2\n      pop\n        /* \"#utility.yul\":8598:8679   */\n    tag_417:\n        /* \"#utility.yul\":8726:8728   */\n      0x20\n        /* \"#utility.yul\":8718:8724   */\n      dup3\n        /* \"#utility.yul\":8715:8729   */\n      lt\n        /* \"#utility.yul\":8695:8713   */\n      dup2\n        /* \"#utility.yul\":8692:8730   */\n      sub\n        /* \"#utility.yul\":8689:8773   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":8745:8763   */\n      tag_419\n      tag_310\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8689:8773   */\n    tag_418:\n        /* \"#utility.yul\":8510:8779   */\n      pop\n        /* \"#utility.yul\":8459:8779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8785:8954   */\n    tag_311:\n        /* \"#utility.yul\":8925:8946   */\n      0x416c726561647920696e697469616c697a656400000000000000000000000000\n        /* \"#utility.yul\":8921:8922   */\n      0x00\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8909:8923   */\n      add\n        /* \"#utility.yul\":8902:8947   */\n      mstore\n        /* \"#utility.yul\":8785:8954   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8960:9326   */\n    tag_312:\n        /* \"#utility.yul\":9102:9105   */\n      0x00\n        /* \"#utility.yul\":9123:9190   */\n      tag_422\n        /* \"#utility.yul\":9187:9189   */\n      0x13\n        /* \"#utility.yul\":9182:9185   */\n      dup4\n        /* \"#utility.yul\":9123:9190   */\n      tag_288\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9116:9190   */\n      swap2\n      pop\n        /* \"#utility.yul\":9199:9292   */\n      tag_423\n        /* \"#utility.yul\":9288:9291   */\n      dup3\n        /* \"#utility.yul\":9199:9292   */\n      tag_311\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9317:9319   */\n      0x20\n        /* \"#utility.yul\":9312:9315   */\n      dup3\n        /* \"#utility.yul\":9308:9320   */\n      add\n        /* \"#utility.yul\":9301:9320   */\n      swap1\n      pop\n        /* \"#utility.yul\":8960:9326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9332:9751   */\n    tag_116:\n        /* \"#utility.yul\":9498:9502   */\n      0x00\n        /* \"#utility.yul\":9536:9538   */\n      0x20\n        /* \"#utility.yul\":9525:9534   */\n      dup3\n        /* \"#utility.yul\":9521:9539   */\n      add\n        /* \"#utility.yul\":9513:9539   */\n      swap1\n      pop\n        /* \"#utility.yul\":9585:9594   */\n      dup2\n        /* \"#utility.yul\":9579:9583   */\n      dup2\n        /* \"#utility.yul\":9575:9595   */\n      sub\n        /* \"#utility.yul\":9571:9572   */\n      0x00\n        /* \"#utility.yul\":9560:9569   */\n      dup4\n        /* \"#utility.yul\":9556:9573   */\n      add\n        /* \"#utility.yul\":9549:9596   */\n      mstore\n        /* \"#utility.yul\":9613:9744   */\n      tag_425\n        /* \"#utility.yul\":9739:9743   */\n      dup2\n        /* \"#utility.yul\":9613:9744   */\n      tag_312\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9605:9744   */\n      swap1\n      pop\n        /* \"#utility.yul\":9332:9751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9757:9981   */\n    tag_313:\n        /* \"#utility.yul\":9897:9931   */\n      0x556e697377617056323a20494e53554646494349454e545f4f55545055545f41\n        /* \"#utility.yul\":9893:9894   */\n      0x00\n        /* \"#utility.yul\":9885:9891   */\n      dup3\n        /* \"#utility.yul\":9881:9895   */\n      add\n        /* \"#utility.yul\":9874:9932   */\n      mstore\n        /* \"#utility.yul\":9966:9973   */\n      0x4d4f554e54000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9961:9963   */\n      0x20\n        /* \"#utility.yul\":9953:9959   */\n      dup3\n        /* \"#utility.yul\":9949:9964   */\n      add\n        /* \"#utility.yul\":9942:9974   */\n      mstore\n        /* \"#utility.yul\":9757:9981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9987:10353   */\n    tag_314:\n        /* \"#utility.yul\":10129:10132   */\n      0x00\n        /* \"#utility.yul\":10150:10217   */\n      tag_428\n        /* \"#utility.yul\":10214:10216   */\n      0x25\n        /* \"#utility.yul\":10209:10212   */\n      dup4\n        /* \"#utility.yul\":10150:10217   */\n      tag_288\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10143:10217   */\n      swap2\n      pop\n        /* \"#utility.yul\":10226:10319   */\n      tag_429\n        /* \"#utility.yul\":10315:10318   */\n      dup3\n        /* \"#utility.yul\":10226:10319   */\n      tag_313\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10344:10346   */\n      0x40\n        /* \"#utility.yul\":10339:10342   */\n      dup3\n        /* \"#utility.yul\":10335:10347   */\n      add\n        /* \"#utility.yul\":10328:10347   */\n      swap1\n      pop\n        /* \"#utility.yul\":9987:10353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10359:10778   */\n    tag_124:\n        /* \"#utility.yul\":10525:10529   */\n      0x00\n        /* \"#utility.yul\":10563:10565   */\n      0x20\n        /* \"#utility.yul\":10552:10561   */\n      dup3\n        /* \"#utility.yul\":10548:10566   */\n      add\n        /* \"#utility.yul\":10540:10566   */\n      swap1\n      pop\n        /* \"#utility.yul\":10612:10621   */\n      dup2\n        /* \"#utility.yul\":10606:10610   */\n      dup2\n        /* \"#utility.yul\":10602:10622   */\n      sub\n        /* \"#utility.yul\":10598:10599   */\n      0x00\n        /* \"#utility.yul\":10587:10596   */\n      dup4\n        /* \"#utility.yul\":10583:10600   */\n      add\n        /* \"#utility.yul\":10576:10623   */\n      mstore\n        /* \"#utility.yul\":10640:10771   */\n      tag_431\n        /* \"#utility.yul\":10766:10770   */\n      dup2\n        /* \"#utility.yul\":10640:10771   */\n      tag_314\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10632:10771   */\n      swap1\n      pop\n        /* \"#utility.yul\":10359:10778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10784:11116   */\n    tag_128:\n        /* \"#utility.yul\":10905:10909   */\n      0x00\n        /* \"#utility.yul\":10943:10945   */\n      0x40\n        /* \"#utility.yul\":10932:10941   */\n      dup3\n        /* \"#utility.yul\":10928:10946   */\n      add\n        /* \"#utility.yul\":10920:10946   */\n      swap1\n      pop\n        /* \"#utility.yul\":10956:11027   */\n      tag_433\n        /* \"#utility.yul\":11024:11025   */\n      0x00\n        /* \"#utility.yul\":11013:11022   */\n      dup4\n        /* \"#utility.yul\":11009:11026   */\n      add\n        /* \"#utility.yul\":11000:11006   */\n      dup6\n        /* \"#utility.yul\":10956:11027   */\n      tag_306\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11037:11109   */\n      tag_434\n        /* \"#utility.yul\":11105:11107   */\n      0x20\n        /* \"#utility.yul\":11094:11103   */\n      dup4\n        /* \"#utility.yul\":11090:11108   */\n      add\n        /* \"#utility.yul\":11081:11087   */\n      dup5\n        /* \"#utility.yul\":11037:11109   */\n      tag_307\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10784:11116   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11122:11238   */\n    tag_315:\n        /* \"#utility.yul\":11192:11213   */\n      tag_436\n        /* \"#utility.yul\":11207:11212   */\n      dup2\n        /* \"#utility.yul\":11192:11213   */\n      tag_304\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":11185:11190   */\n      dup2\n        /* \"#utility.yul\":11182:11214   */\n      eq\n        /* \"#utility.yul\":11172:11232   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":11228:11229   */\n      0x00\n        /* \"#utility.yul\":11225:11226   */\n      dup1\n        /* \"#utility.yul\":11218:11230   */\n      revert\n        /* \"#utility.yul\":11172:11232   */\n    tag_437:\n        /* \"#utility.yul\":11122:11238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11244:11381   */\n    tag_316:\n        /* \"#utility.yul\":11298:11303   */\n      0x00\n        /* \"#utility.yul\":11329:11335   */\n      dup2\n        /* \"#utility.yul\":11323:11336   */\n      mload\n        /* \"#utility.yul\":11314:11336   */\n      swap1\n      pop\n        /* \"#utility.yul\":11345:11375   */\n      tag_439\n        /* \"#utility.yul\":11369:11374   */\n      dup2\n        /* \"#utility.yul\":11345:11375   */\n      tag_315\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":11244:11381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11387:11732   */\n    tag_132:\n        /* \"#utility.yul\":11454:11460   */\n      0x00\n        /* \"#utility.yul\":11503:11505   */\n      0x20\n        /* \"#utility.yul\":11491:11500   */\n      dup3\n        /* \"#utility.yul\":11482:11489   */\n      dup5\n        /* \"#utility.yul\":11478:11501   */\n      sub\n        /* \"#utility.yul\":11474:11506   */\n      slt\n        /* \"#utility.yul\":11471:11590   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":11509:11588   */\n      tag_442\n      tag_295\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11471:11590   */\n    tag_441:\n        /* \"#utility.yul\":11629:11630   */\n      0x00\n        /* \"#utility.yul\":11654:11715   */\n      tag_443\n        /* \"#utility.yul\":11707:11714   */\n      dup5\n        /* \"#utility.yul\":11698:11704   */\n      dup3\n        /* \"#utility.yul\":11687:11696   */\n      dup6\n        /* \"#utility.yul\":11683:11705   */\n      add\n        /* \"#utility.yul\":11654:11715   */\n      tag_316\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11644:11715   */\n      swap2\n      pop\n        /* \"#utility.yul\":11600:11725   */\n      pop\n        /* \"#utility.yul\":11387:11732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11738:11881   */\n    tag_317:\n        /* \"#utility.yul\":11795:11800   */\n      0x00\n        /* \"#utility.yul\":11826:11832   */\n      dup2\n        /* \"#utility.yul\":11820:11833   */\n      mload\n        /* \"#utility.yul\":11811:11833   */\n      swap1\n      pop\n        /* \"#utility.yul\":11842:11875   */\n      tag_445\n        /* \"#utility.yul\":11869:11874   */\n      dup2\n        /* \"#utility.yul\":11842:11875   */\n      tag_302\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11738:11881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11887:12238   */\n    tag_142:\n        /* \"#utility.yul\":11957:11963   */\n      0x00\n        /* \"#utility.yul\":12006:12008   */\n      0x20\n        /* \"#utility.yul\":11994:12003   */\n      dup3\n        /* \"#utility.yul\":11985:11992   */\n      dup5\n        /* \"#utility.yul\":11981:12004   */\n      sub\n        /* \"#utility.yul\":11977:12009   */\n      slt\n        /* \"#utility.yul\":11974:12093   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":12012:12091   */\n      tag_448\n      tag_295\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11974:12093   */\n    tag_447:\n        /* \"#utility.yul\":12132:12133   */\n      0x00\n        /* \"#utility.yul\":12157:12221   */\n      tag_449\n        /* \"#utility.yul\":12213:12220   */\n      dup5\n        /* \"#utility.yul\":12204:12210   */\n      dup3\n        /* \"#utility.yul\":12193:12202   */\n      dup6\n        /* \"#utility.yul\":12189:12211   */\n      add\n        /* \"#utility.yul\":12157:12221   */\n      tag_317\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":12147:12221   */\n      swap2\n      pop\n        /* \"#utility.yul\":12103:12231   */\n      pop\n        /* \"#utility.yul\":11887:12238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12244:12424   */\n    tag_318:\n        /* \"#utility.yul\":12292:12369   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12289:12290   */\n      0x00\n        /* \"#utility.yul\":12282:12370   */\n      mstore\n        /* \"#utility.yul\":12389:12393   */\n      0x11\n        /* \"#utility.yul\":12386:12387   */\n      0x04\n        /* \"#utility.yul\":12379:12394   */\n      mstore\n        /* \"#utility.yul\":12413:12417   */\n      0x24\n        /* \"#utility.yul\":12410:12411   */\n      0x00\n        /* \"#utility.yul\":12403:12418   */\n      revert\n        /* \"#utility.yul\":12430:12840   */\n    tag_148:\n        /* \"#utility.yul\":12470:12477   */\n      0x00\n        /* \"#utility.yul\":12493:12513   */\n      tag_452\n        /* \"#utility.yul\":12511:12512   */\n      dup3\n        /* \"#utility.yul\":12493:12513   */\n      tag_301\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":12488:12513   */\n      swap2\n      pop\n        /* \"#utility.yul\":12527:12547   */\n      tag_453\n        /* \"#utility.yul\":12545:12546   */\n      dup4\n        /* \"#utility.yul\":12527:12547   */\n      tag_301\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12522:12547   */\n      swap3\n      pop\n        /* \"#utility.yul\":12582:12583   */\n      dup3\n        /* \"#utility.yul\":12579:12580   */\n      dup3\n        /* \"#utility.yul\":12575:12584   */\n      mul\n        /* \"#utility.yul\":12604:12634   */\n      tag_454\n        /* \"#utility.yul\":12622:12633   */\n      dup2\n        /* \"#utility.yul\":12604:12634   */\n      tag_301\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12593:12634   */\n      swap2\n      pop\n        /* \"#utility.yul\":12783:12784   */\n      dup3\n        /* \"#utility.yul\":12774:12781   */\n      dup3\n        /* \"#utility.yul\":12770:12785   */\n      div\n        /* \"#utility.yul\":12767:12768   */\n      dup5\n        /* \"#utility.yul\":12764:12786   */\n      eq\n        /* \"#utility.yul\":12744:12745   */\n      dup4\n        /* \"#utility.yul\":12737:12746   */\n      iszero\n        /* \"#utility.yul\":12717:12800   */\n      or\n        /* \"#utility.yul\":12694:12833   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":12813:12831   */\n      tag_456\n      tag_318\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12694:12833   */\n    tag_455:\n        /* \"#utility.yul\":12478:12840   */\n      pop\n        /* \"#utility.yul\":12430:12840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12846:13008   */\n    tag_319:\n        /* \"#utility.yul\":12986:13000   */\n      0x556e697377617056323a204b0000000000000000000000000000000000000000\n        /* \"#utility.yul\":12982:12983   */\n      0x00\n        /* \"#utility.yul\":12974:12980   */\n      dup3\n        /* \"#utility.yul\":12970:12984   */\n      add\n        /* \"#utility.yul\":12963:13001   */\n      mstore\n        /* \"#utility.yul\":12846:13008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13014:13380   */\n    tag_320:\n        /* \"#utility.yul\":13156:13159   */\n      0x00\n        /* \"#utility.yul\":13177:13244   */\n      tag_459\n        /* \"#utility.yul\":13241:13243   */\n      0x0c\n        /* \"#utility.yul\":13236:13239   */\n      dup4\n        /* \"#utility.yul\":13177:13244   */\n      tag_288\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13170:13244   */\n      swap2\n      pop\n        /* \"#utility.yul\":13253:13346   */\n      tag_460\n        /* \"#utility.yul\":13342:13345   */\n      dup3\n        /* \"#utility.yul\":13253:13346   */\n      tag_319\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13371:13373   */\n      0x20\n        /* \"#utility.yul\":13366:13369   */\n      dup3\n        /* \"#utility.yul\":13362:13374   */\n      add\n        /* \"#utility.yul\":13355:13374   */\n      swap1\n      pop\n        /* \"#utility.yul\":13014:13380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13386:13805   */\n    tag_152:\n        /* \"#utility.yul\":13552:13556   */\n      0x00\n        /* \"#utility.yul\":13590:13592   */\n      0x20\n        /* \"#utility.yul\":13579:13588   */\n      dup3\n        /* \"#utility.yul\":13575:13593   */\n      add\n        /* \"#utility.yul\":13567:13593   */\n      swap1\n      pop\n        /* \"#utility.yul\":13639:13648   */\n      dup2\n        /* \"#utility.yul\":13633:13637   */\n      dup2\n        /* \"#utility.yul\":13629:13649   */\n      sub\n        /* \"#utility.yul\":13625:13626   */\n      0x00\n        /* \"#utility.yul\":13614:13623   */\n      dup4\n        /* \"#utility.yul\":13610:13627   */\n      add\n        /* \"#utility.yul\":13603:13650   */\n      mstore\n        /* \"#utility.yul\":13667:13798   */\n      tag_462\n        /* \"#utility.yul\":13793:13797   */\n      dup2\n        /* \"#utility.yul\":13667:13798   */\n      tag_320\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13659:13798   */\n      swap1\n      pop\n        /* \"#utility.yul\":13386:13805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13811:13981   */\n    tag_321:\n        /* \"#utility.yul\":13951:13973   */\n      0x4e6f7420656e6f756768206c6971756964697479000000000000000000000000\n        /* \"#utility.yul\":13947:13948   */\n      0x00\n        /* \"#utility.yul\":13939:13945   */\n      dup3\n        /* \"#utility.yul\":13935:13949   */\n      add\n        /* \"#utility.yul\":13928:13974   */\n      mstore\n        /* \"#utility.yul\":13811:13981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13987:14353   */\n    tag_322:\n        /* \"#utility.yul\":14129:14132   */\n      0x00\n        /* \"#utility.yul\":14150:14217   */\n      tag_465\n        /* \"#utility.yul\":14214:14216   */\n      0x14\n        /* \"#utility.yul\":14209:14212   */\n      dup4\n        /* \"#utility.yul\":14150:14217   */\n      tag_288\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14143:14217   */\n      swap2\n      pop\n        /* \"#utility.yul\":14226:14319   */\n      tag_466\n        /* \"#utility.yul\":14315:14318   */\n      dup3\n        /* \"#utility.yul\":14226:14319   */\n      tag_321\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":14344:14346   */\n      0x20\n        /* \"#utility.yul\":14339:14342   */\n      dup3\n        /* \"#utility.yul\":14335:14347   */\n      add\n        /* \"#utility.yul\":14328:14347   */\n      swap1\n      pop\n        /* \"#utility.yul\":13987:14353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14359:14778   */\n    tag_170:\n        /* \"#utility.yul\":14525:14529   */\n      0x00\n        /* \"#utility.yul\":14563:14565   */\n      0x20\n        /* \"#utility.yul\":14552:14561   */\n      dup3\n        /* \"#utility.yul\":14548:14566   */\n      add\n        /* \"#utility.yul\":14540:14566   */\n      swap1\n      pop\n        /* \"#utility.yul\":14612:14621   */\n      dup2\n        /* \"#utility.yul\":14606:14610   */\n      dup2\n        /* \"#utility.yul\":14602:14622   */\n      sub\n        /* \"#utility.yul\":14598:14599   */\n      0x00\n        /* \"#utility.yul\":14587:14596   */\n      dup4\n        /* \"#utility.yul\":14583:14600   */\n      add\n        /* \"#utility.yul\":14576:14623   */\n      mstore\n        /* \"#utility.yul\":14640:14771   */\n      tag_468\n        /* \"#utility.yul\":14766:14770   */\n      dup2\n        /* \"#utility.yul\":14640:14771   */\n      tag_322\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":14632:14771   */\n      swap1\n      pop\n        /* \"#utility.yul\":14359:14778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14784:14964   */\n    tag_323:\n        /* \"#utility.yul\":14832:14909   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14829:14830   */\n      0x00\n        /* \"#utility.yul\":14822:14910   */\n      mstore\n        /* \"#utility.yul\":14929:14933   */\n      0x12\n        /* \"#utility.yul\":14926:14927   */\n      0x04\n        /* \"#utility.yul\":14919:14934   */\n      mstore\n        /* \"#utility.yul\":14953:14957   */\n      0x24\n        /* \"#utility.yul\":14950:14951   */\n      0x00\n        /* \"#utility.yul\":14943:14958   */\n      revert\n        /* \"#utility.yul\":14970:15155   */\n    tag_174:\n        /* \"#utility.yul\":15010:15011   */\n      0x00\n        /* \"#utility.yul\":15027:15047   */\n      tag_471\n        /* \"#utility.yul\":15045:15046   */\n      dup3\n        /* \"#utility.yul\":15027:15047   */\n      tag_301\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15022:15047   */\n      swap2\n      pop\n        /* \"#utility.yul\":15061:15081   */\n      tag_472\n        /* \"#utility.yul\":15079:15080   */\n      dup4\n        /* \"#utility.yul\":15061:15081   */\n      tag_301\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":15056:15081   */\n      swap3\n      pop\n        /* \"#utility.yul\":15100:15101   */\n      dup3\n        /* \"#utility.yul\":15090:15125   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":15105:15123   */\n      tag_474\n      tag_323\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":15090:15125   */\n    tag_473:\n        /* \"#utility.yul\":15147:15148   */\n      dup3\n        /* \"#utility.yul\":15144:15145   */\n      dup3\n        /* \"#utility.yul\":15140:15149   */\n      div\n        /* \"#utility.yul\":15135:15149   */\n      swap1\n      pop\n        /* \"#utility.yul\":14970:15155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15161:15384   */\n    tag_189:\n        /* \"#utility.yul\":15201:15205   */\n      0x00\n        /* \"#utility.yul\":15221:15241   */\n      tag_476\n        /* \"#utility.yul\":15239:15240   */\n      dup3\n        /* \"#utility.yul\":15221:15241   */\n      tag_292\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":15216:15241   */\n      swap2\n      pop\n        /* \"#utility.yul\":15255:15275   */\n      tag_477\n        /* \"#utility.yul\":15273:15274   */\n      dup4\n        /* \"#utility.yul\":15255:15275   */\n      tag_292\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":15250:15275   */\n      swap3\n      pop\n        /* \"#utility.yul\":15299:15300   */\n      dup3\n        /* \"#utility.yul\":15296:15297   */\n      dup3\n        /* \"#utility.yul\":15292:15301   */\n      sub\n        /* \"#utility.yul\":15284:15301   */\n      swap1\n      pop\n        /* \"#utility.yul\":15323:15353   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15317:15321   */\n      dup2\n        /* \"#utility.yul\":15314:15354   */\n      gt\n        /* \"#utility.yul\":15311:15377   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":15357:15375   */\n      tag_479\n      tag_318\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15311:15377   */\n    tag_478:\n        /* \"#utility.yul\":15161:15384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15390:15832   */\n    tag_196:\n        /* \"#utility.yul\":15539:15543   */\n      0x00\n        /* \"#utility.yul\":15577:15579   */\n      0x60\n        /* \"#utility.yul\":15566:15575   */\n      dup3\n        /* \"#utility.yul\":15562:15580   */\n      add\n        /* \"#utility.yul\":15554:15580   */\n      swap1\n      pop\n        /* \"#utility.yul\":15590:15661   */\n      tag_481\n        /* \"#utility.yul\":15658:15659   */\n      0x00\n        /* \"#utility.yul\":15647:15656   */\n      dup4\n        /* \"#utility.yul\":15643:15660   */\n      add\n        /* \"#utility.yul\":15634:15640   */\n      dup7\n        /* \"#utility.yul\":15590:15661   */\n      tag_306\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":15671:15743   */\n      tag_482\n        /* \"#utility.yul\":15739:15741   */\n      0x20\n        /* \"#utility.yul\":15728:15737   */\n      dup4\n        /* \"#utility.yul\":15724:15742   */\n      add\n        /* \"#utility.yul\":15715:15721   */\n      dup6\n        /* \"#utility.yul\":15671:15743   */\n      tag_306\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":15753:15825   */\n      tag_483\n        /* \"#utility.yul\":15821:15823   */\n      0x40\n        /* \"#utility.yul\":15810:15819   */\n      dup4\n        /* \"#utility.yul\":15806:15824   */\n      add\n        /* \"#utility.yul\":15797:15803   */\n      dup5\n        /* \"#utility.yul\":15753:15825   */\n      tag_307\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15390:15832   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15838:16280   */\n    tag_235:\n        /* \"#utility.yul\":15987:15991   */\n      0x00\n        /* \"#utility.yul\":16025:16027   */\n      0x60\n        /* \"#utility.yul\":16014:16023   */\n      dup3\n        /* \"#utility.yul\":16010:16028   */\n      add\n        /* \"#utility.yul\":16002:16028   */\n      swap1\n      pop\n        /* \"#utility.yul\":16038:16109   */\n      tag_485\n        /* \"#utility.yul\":16106:16107   */\n      0x00\n        /* \"#utility.yul\":16095:16104   */\n      dup4\n        /* \"#utility.yul\":16091:16108   */\n      add\n        /* \"#utility.yul\":16082:16088   */\n      dup7\n        /* \"#utility.yul\":16038:16109   */\n      tag_306\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":16119:16191   */\n      tag_486\n        /* \"#utility.yul\":16187:16189   */\n      0x20\n        /* \"#utility.yul\":16176:16185   */\n      dup4\n        /* \"#utility.yul\":16172:16190   */\n      add\n        /* \"#utility.yul\":16163:16169   */\n      dup6\n        /* \"#utility.yul\":16119:16191   */\n      tag_307\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":16201:16273   */\n      tag_487\n        /* \"#utility.yul\":16269:16271   */\n      0x40\n        /* \"#utility.yul\":16258:16267   */\n      dup4\n        /* \"#utility.yul\":16254:16272   */\n      add\n        /* \"#utility.yul\":16245:16251   */\n      dup5\n        /* \"#utility.yul\":16201:16273   */\n      tag_307\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":15838:16280   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16286:16477   */\n    tag_256:\n        /* \"#utility.yul\":16326:16329   */\n      0x00\n        /* \"#utility.yul\":16345:16365   */\n      tag_489\n        /* \"#utility.yul\":16363:16364   */\n      dup3\n        /* \"#utility.yul\":16345:16365   */\n      tag_301\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":16340:16365   */\n      swap2\n      pop\n        /* \"#utility.yul\":16379:16399   */\n      tag_490\n        /* \"#utility.yul\":16397:16398   */\n      dup4\n        /* \"#utility.yul\":16379:16399   */\n      tag_301\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":16374:16399   */\n      swap3\n      pop\n        /* \"#utility.yul\":16422:16423   */\n      dup3\n        /* \"#utility.yul\":16419:16420   */\n      dup3\n        /* \"#utility.yul\":16415:16424   */\n      add\n        /* \"#utility.yul\":16408:16424   */\n      swap1\n      pop\n        /* \"#utility.yul\":16443:16446   */\n      dup1\n        /* \"#utility.yul\":16440:16441   */\n      dup3\n        /* \"#utility.yul\":16437:16447   */\n      gt\n        /* \"#utility.yul\":16434:16470   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":16450:16468   */\n      tag_492\n      tag_318\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":16434:16470   */\n    tag_491:\n        /* \"#utility.yul\":16286:16477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203e4a10f6c1ffc13ed6390cc00c1723459835fff29386ec06c5ffba92c2815f3e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:7",
										"nodeType": "YulBlock",
										"src": "0:5231:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280601381526020017f556e6973776170205632204c5020546f6b656e000000000000000000000000008152506040518060400160405280600681526020017f554e492d56320000000000000000000000000000000000000000000000000000815250816003908161008b91906102e5565b50806004908161009b91906102e5565b50505060016005819055506103b4565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061012657607f821691505b602082108103610139576101386100e2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261019b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610160565b6101a58683610160565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e96101e46101df846101bd565b6101c6565b6101bd565b9050919050565b5f819050919050565b610202836101cf565b61021661020e826101f0565b84845461016c565b825550505050565b5f90565b61022a61021e565b6102358184846101f9565b505050565b5b818110156102585761024d5f82610222565b60018101905061023b565b5050565b601f82111561029d5761026e8161013f565b61027784610151565b81016020851015610286578190505b61029a61029285610151565b83018261023a565b50505b505050565b5f82821c905092915050565b5f6102bd5f19846008026102a2565b1980831691505092915050565b5f6102d583836102ae565b9150826002028217905092915050565b6102ee826100ab565b67ffffffffffffffff811115610307576103066100b5565b5b610311825461010f565b61031c82828561025c565b5f60209050601f83116001811461034d575f841561033b578287015190505b61034585826102ca565b8655506103ac565b601f19841661035b8661013f565b5f5b828110156103825784890151825560018201915060208501945060208101905061035d565b8683101561039f578489015161039b601f8916826102ae565b8355505b6001600288020188555050505b505050505050565b6120a4806103c15f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80636d9a640a116100955780639cd441da116100645780639cd441da146102b0578063a9059cbb146102e0578063d21220a714610310578063dd62ed3e1461032e576100fe565b80636d9a640a1461021557806370a082311461023157806395d89b41146102615780639c8f9f231461027f576100fe565b806318160ddd116100d157806318160ddd1461018d57806323b872dd146101ab578063313ce567146101db578063485cc955146101f9576100fe565b806306fdde03146101025780630902f1ac14610120578063095ea7b31461013f5780630dfe16811461016f575b5f80fd5b61010a61035e565b6040516101179190611859565b60405180910390f35b6101286103ee565b6040516101369291906118a1565b60405180910390f35b61015960048036038101906101549190611959565b610431565b60405161016691906119b1565b60405180910390f35b610177610453565b60405161018491906119d9565b60405180910390f35b610195610478565b6040516101a29190611a01565b60405180910390f35b6101c560048036038101906101c09190611a1a565b610481565b6040516101d291906119b1565b60405180910390f35b6101e36104af565b6040516101f09190611a85565b60405180910390f35b610213600480360381019061020e9190611a9e565b6104b7565b005b61022f600480360381019061022a9190611adc565b610622565b005b61024b60048036038101906102469190611b2c565b61099c565b6040516102589190611a01565b60405180910390f35b6102696109e1565b6040516102769190611859565b60405180910390f35b61029960048036038101906102949190611b57565b610a71565b6040516102a7929190611b82565b60405180910390f35b6102ca60048036038101906102c59190611ba9565b610d23565b6040516102d79190611a01565b60405180910390f35b6102fa60048036038101906102f59190611959565b610f53565b60405161030791906119b1565b60405180910390f35b610318610f75565b60405161032591906119d9565b60405180910390f35b61034860048036038101906103439190611a9e565b610f9a565b6040516103559190611a01565b60405180910390f35b60606003805461036d90611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461039990611c14565b80156103e45780601f106103bb576101008083540402835291602001916103e4565b820191905f5260205f20905b8154815290600101906020018083116103c757829003601f168201915b5050505050905090565b5f8060085f9054906101000a90046dffffffffffffffffffffffffffff1691506008600e9054906101000a90046dffffffffffffffffffffffffffff1690509091565b5f8061043b61101c565b9050610448818585611023565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f8061048b61101c565b9050610498858285611035565b6104a38585856110c7565b60019150509392505050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561055f57505f73ffffffffffffffffffffffffffffffffffffffff1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b61059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590611c8e565b60405180910390fd5b8160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61062a6111b7565b5f83118061063757505f82115b610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90611d1c565b60405180910390fd5b5f806106806103ee565b915091505f85111561072a5760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84876040518363ffffffff1660e01b81526004016106e8929190611d3a565b6020604051808303815f875af1158015610704573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107289190611d8b565b505b5f8411156107d05760075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b815260040161078e929190611d3a565b6020604051808303815f875af11580156107aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ce9190611d8b565b505b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161082b91906119d9565b602060405180830381865afa158015610846573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061086a9190611dca565b90505f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108c791906119d9565b602060405180830381865afa1580156108e2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109069190611dca565b9050826dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff166109349190611e22565b81836109409190611e22565b1015610981576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097890611ead565b60405180910390fd5b61098b82826111fd565b5050505061099761126a565b505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546109f090611c14565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1c90611c14565b8015610a675780601f10610a3e57610100808354040283529160200191610a67565b820191905f5260205f20905b815481529060010190602001808311610a4a57829003601f168201915b5050505050905090565b5f80610a7b6111b7565b82610a853361099c565b1015610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd90611f15565b60405180910390fd5b5f610acf610478565b90508060085f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1685610b099190611e22565b610b139190611f60565b9250806008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1685610b4e9190611e22565b610b589190611f60565b9150610b643385611274565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610bc0929190611d3a565b6020604051808303815f875af1158015610bdc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c009190611d8b565b5060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610c5d929190611d3a565b6020604051808303815f875af1158015610c79573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c9d9190611d8b565b50610d158360085f9054906101000a90046dffffffffffffffffffffffffffff16610cc89190611f90565b6dffffffffffffffffffffffffffff16836008600e9054906101000a90046dffffffffffffffffffffffffffff16610d009190611f90565b6dffffffffffffffffffffffffffff166111fd565b50610d1e61126a565b915091565b5f610d2c6111b7565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d8a93929190611fd1565b6020604051808303815f875af1158015610da6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dca9190611d8b565b5060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e2993929190611fd1565b6020604051808303815f875af1158015610e45573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e699190611d8b565b505f610e73610478565b03610e9357610e8c8284610e879190611e22565b6112f3565b9050610f31565b610f2e60085f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610eca610478565b85610ed59190611e22565b610edf9190611f60565b6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610f14610478565b85610f1f9190611e22565b610f299190611f60565b61136a565b90505b610f3b3382611382565b610f4583836111fd565b610f4d61126a565b92915050565b5f80610f5d61101c565b9050610f6a8185856110c7565b600191505092915050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6110308383836001611401565b505050565b5f6110408484610f9a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110c157818110156110b2578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110a993929190612006565b60405180910390fd5b6110c084848484035f611401565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611137575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161112e91906119d9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111a7575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161119e91906119d9565b60405180910390fd5b6111b28383836115d0565b505050565b6002600554036111f3576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600581905550565b8160085f6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550806008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055505050565b6001600581905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112e4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112db91906119d9565b60405180910390fd5b6112ef825f836115d0565b5050565b5f6003821115611358578190505f60016002846113109190611f60565b61131a919061203b565b90505b818110156113525780915060028182856113379190611f60565b611341919061203b565b61134b9190611f60565b905061131d565b50611365565b5f821461136457600190505b5b919050565b5f818310611378578161137a565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113f2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113e991906119d9565b60405180910390fd5b6113fd5f83836115d0565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611471575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161146891906119d9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114e1575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114d891906119d9565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156115ca578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115c19190611a01565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611620578060025f828254611614919061203b565b925050819055506116ee565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156116a9578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116a093929190612006565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611735578060025f828254039250508190555061177f565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117dc9190611a01565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61182b826117e9565b61183581856117f3565b9350611845818560208601611803565b61184e81611811565b840191505092915050565b5f6020820190508181035f8301526118718184611821565b905092915050565b5f6dffffffffffffffffffffffffffff82169050919050565b61189b81611879565b82525050565b5f6040820190506118b45f830185611892565b6118c16020830184611892565b9392505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118f5826118cc565b9050919050565b611905816118eb565b811461190f575f80fd5b50565b5f81359050611920816118fc565b92915050565b5f819050919050565b61193881611926565b8114611942575f80fd5b50565b5f813590506119538161192f565b92915050565b5f806040838503121561196f5761196e6118c8565b5b5f61197c85828601611912565b925050602061198d85828601611945565b9150509250929050565b5f8115159050919050565b6119ab81611997565b82525050565b5f6020820190506119c45f8301846119a2565b92915050565b6119d3816118eb565b82525050565b5f6020820190506119ec5f8301846119ca565b92915050565b6119fb81611926565b82525050565b5f602082019050611a145f8301846119f2565b92915050565b5f805f60608486031215611a3157611a306118c8565b5b5f611a3e86828701611912565b9350506020611a4f86828701611912565b9250506040611a6086828701611945565b9150509250925092565b5f60ff82169050919050565b611a7f81611a6a565b82525050565b5f602082019050611a985f830184611a76565b92915050565b5f8060408385031215611ab457611ab36118c8565b5b5f611ac185828601611912565b9250506020611ad285828601611912565b9150509250929050565b5f805f60608486031215611af357611af26118c8565b5b5f611b0086828701611945565b9350506020611b1186828701611945565b9250506040611b2286828701611912565b9150509250925092565b5f60208284031215611b4157611b406118c8565b5b5f611b4e84828501611912565b91505092915050565b5f60208284031215611b6c57611b6b6118c8565b5b5f611b7984828501611945565b91505092915050565b5f604082019050611b955f8301856119f2565b611ba260208301846119f2565b9392505050565b5f8060408385031215611bbf57611bbe6118c8565b5b5f611bcc85828601611945565b9250506020611bdd85828601611945565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c2b57607f821691505b602082108103611c3e57611c3d611be7565b5b50919050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f611c786013836117f3565b9150611c8382611c44565b602082019050919050565b5f6020820190508181035f830152611ca581611c6c565b9050919050565b7f556e697377617056323a20494e53554646494349454e545f4f55545055545f415f8201527f4d4f554e54000000000000000000000000000000000000000000000000000000602082015250565b5f611d066025836117f3565b9150611d1182611cac565b604082019050919050565b5f6020820190508181035f830152611d3381611cfa565b9050919050565b5f604082019050611d4d5f8301856119ca565b611d5a60208301846119f2565b9392505050565b611d6a81611997565b8114611d74575f80fd5b50565b5f81519050611d8581611d61565b92915050565b5f60208284031215611da057611d9f6118c8565b5b5f611dad84828501611d77565b91505092915050565b5f81519050611dc48161192f565b92915050565b5f60208284031215611ddf57611dde6118c8565b5b5f611dec84828501611db6565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e2c82611926565b9150611e3783611926565b9250828202611e4581611926565b91508282048414831517611e5c57611e5b611df5565b5b5092915050565b7f556e697377617056323a204b00000000000000000000000000000000000000005f82015250565b5f611e97600c836117f3565b9150611ea282611e63565b602082019050919050565b5f6020820190508181035f830152611ec481611e8b565b9050919050565b7f4e6f7420656e6f756768206c69717569646974790000000000000000000000005f82015250565b5f611eff6014836117f3565b9150611f0a82611ecb565b602082019050919050565b5f6020820190508181035f830152611f2c81611ef3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f6a82611926565b9150611f7583611926565b925082611f8557611f84611f33565b5b828204905092915050565b5f611f9a82611879565b9150611fa583611879565b925082820390506dffffffffffffffffffffffffffff811115611fcb57611fca611df5565b5b92915050565b5f606082019050611fe45f8301866119ca565b611ff160208301856119ca565b611ffe60408301846119f2565b949350505050565b5f6060820190506120195f8301866119ca565b61202660208301856119f2565b61203360408301846119f2565b949350505050565b5f61204582611926565b915061205083611926565b925082820190508082111561206857612067611df5565b5b9291505056fea26469706673582212203e4a10f6c1ffc13ed6390cc00c1723459835fff29386ec06c5ffba92c2815f3e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E6973776170205632204C5020546F6B656E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x554E492D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x3B4 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x126 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x139 JUMPI PUSH2 0x138 PUSH2 0xE2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x19B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x160 JUMP JUMPDEST PUSH2 0x1A5 DUP7 DUP4 PUSH2 0x160 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E9 PUSH2 0x1E4 PUSH2 0x1DF DUP5 PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202 DUP4 PUSH2 0x1CF JUMP JUMPDEST PUSH2 0x216 PUSH2 0x20E DUP3 PUSH2 0x1F0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x16C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x22A PUSH2 0x21E JUMP JUMPDEST PUSH2 0x235 DUP2 DUP5 DUP5 PUSH2 0x1F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH2 0x24D PUSH0 DUP3 PUSH2 0x222 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x29D JUMPI PUSH2 0x26E DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH2 0x277 DUP5 PUSH2 0x151 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x286 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x29A PUSH2 0x292 DUP6 PUSH2 0x151 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x23A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2A2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D5 DUP4 DUP4 PUSH2 0x2AE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EE DUP3 PUSH2 0xAB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x307 JUMPI PUSH2 0x306 PUSH2 0xB5 JUMP JUMPDEST JUMPDEST PUSH2 0x311 DUP3 SLOAD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x31C DUP3 DUP3 DUP6 PUSH2 0x25C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x34D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x33B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x345 DUP6 DUP3 PUSH2 0x2CA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x35B DUP7 PUSH2 0x13F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x382 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x35D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x39B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2AE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20A4 DUP1 PUSH2 0x3C1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D9A640A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6D9A640A EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x27F JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x1F9 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x16F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP3 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1A1A JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH2 0x622 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36D SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x399 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x43B PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH2 0x448 DUP2 DUP6 DUP6 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x48B PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH2 0x498 DUP6 DUP3 DUP6 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x4A3 DUP6 DUP6 DUP6 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x55F JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x595 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x62A PUSH2 0x11B7 JUMP JUMPDEST PUSH0 DUP4 GT DUP1 PUSH2 0x637 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66D SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x680 PUSH2 0x3EE JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP6 GT ISZERO PUSH2 0x72A JUMPI PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E8 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x704 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP JUMPDEST PUSH0 DUP5 GT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP3 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x846 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86A SWAP2 SWAP1 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 POP DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x934 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST DUP2 DUP4 PUSH2 0x940 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST LT ISZERO PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP1 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98B DUP3 DUP3 PUSH2 0x11FD JUMP JUMPDEST POP POP POP POP PUSH2 0x997 PUSH2 0x126A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9F0 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA1C SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA3E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA7B PUSH2 0x11B7 JUMP JUMPDEST DUP3 PUSH2 0xA85 CALLER PUSH2 0x99C JUMP JUMPDEST LT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABD SWAP1 PUSH2 0x1F15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xACF PUSH2 0x478 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST SWAP2 POP PUSH2 0xB64 CALLER DUP6 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC0 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBDC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5D SWAP3 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC79 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP PUSH2 0xD15 DUP4 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD00 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11FD JUMP JUMPDEST POP PUSH2 0xD1E PUSH2 0x126A JUMP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0xD2C PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE45 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE69 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP PUSH0 PUSH2 0xE73 PUSH2 0x478 JUMP JUMPDEST SUB PUSH2 0xE93 JUMPI PUSH2 0xE8C DUP3 DUP5 PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0x12F3 JUMP JUMPDEST SWAP1 POP PUSH2 0xF31 JUMP JUMPDEST PUSH2 0xF2E PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xECA PUSH2 0x478 JUMP JUMPDEST DUP6 PUSH2 0xED5 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0xEDF SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF14 PUSH2 0x478 JUMP JUMPDEST DUP6 PUSH2 0xF1F SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0xF29 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x136A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xF3B CALLER DUP3 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0xF45 DUP4 DUP4 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0xF4D PUSH2 0x126A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF5D PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH2 0xF6A DUP2 DUP6 DUP6 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1030 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1401 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1040 DUP5 DUP5 PUSH2 0xF9A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x10C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10B2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1401 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1137 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112E SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119E SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B2 DUP4 DUP4 DUP4 PUSH2 0x15D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x11F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DB SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12EF DUP3 PUSH0 DUP4 PUSH2 0x15D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1358 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1310 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x131A SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1352 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x1341 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x134B SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST SWAP1 POP PUSH2 0x131D JUMP JUMPDEST POP PUSH2 0x1365 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1364 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1378 JUMPI DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13F2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E9 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13FD PUSH0 DUP4 DUP4 PUSH2 0x15D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1471 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15CA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1620 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16EE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16A9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1735 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x177F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x182B DUP3 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0x1835 DUP2 DUP6 PUSH2 0x17F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1845 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x184E DUP2 PUSH2 0x1811 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1871 DUP2 DUP5 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189B DUP2 PUSH2 0x1879 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18B4 PUSH0 DUP4 ADD DUP6 PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x18C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1892 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18F5 DUP3 PUSH2 0x18CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1905 DUP2 PUSH2 0x18EB JUMP JUMPDEST DUP2 EQ PUSH2 0x190F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1920 DUP2 PUSH2 0x18FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1938 DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP2 EQ PUSH2 0x1942 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1953 DUP2 PUSH2 0x192F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x196F JUMPI PUSH2 0x196E PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197C DUP6 DUP3 DUP7 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x198D DUP6 DUP3 DUP7 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19AB DUP2 PUSH2 0x1997 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x19A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D3 DUP2 PUSH2 0x18EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19EC PUSH0 DUP4 ADD DUP5 PUSH2 0x19CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19FB DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A14 PUSH0 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A31 JUMPI PUSH2 0x1A30 PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A3E DUP7 DUP3 DUP8 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A4F DUP7 DUP3 DUP8 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A60 DUP7 DUP3 DUP8 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7F DUP2 PUSH2 0x1A6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A98 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB4 JUMPI PUSH2 0x1AB3 PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AD2 DUP6 DUP3 DUP7 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AF3 JUMPI PUSH2 0x1AF2 PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B00 DUP7 DUP3 DUP8 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B11 DUP7 DUP3 DUP8 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B22 DUP7 DUP3 DUP8 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4E DUP5 DUP3 DUP6 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B6C JUMPI PUSH2 0x1B6B PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B79 DUP5 DUP3 DUP6 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B95 PUSH0 DUP4 ADD DUP6 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1BA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BBF JUMPI PUSH2 0x1BBE PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BCC DUP6 DUP3 DUP7 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BDD DUP6 DUP3 DUP7 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C3E JUMPI PUSH2 0x1C3D PUSH2 0x1BE7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C78 PUSH1 0x13 DUP4 PUSH2 0x17F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C83 DUP3 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CA5 DUP2 PUSH2 0x1C6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E697377617056323A20494E53554646494349454E545F4F55545055545F41 PUSH0 DUP3 ADD MSTORE PUSH32 0x4D4F554E54000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D06 PUSH1 0x25 DUP4 PUSH2 0x17F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D11 DUP3 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D33 DUP2 PUSH2 0x1CFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D4D PUSH0 DUP4 ADD DUP6 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x1D5A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1D6A DUP2 PUSH2 0x1997 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D74 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D85 DUP2 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA0 JUMPI PUSH2 0x1D9F PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DAD DUP5 DUP3 DUP6 ADD PUSH2 0x1D77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DC4 DUP2 PUSH2 0x192F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DEC DUP5 DUP3 DUP6 ADD PUSH2 0x1DB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E2C DUP3 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E37 DUP4 PUSH2 0x1926 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E45 DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E5C JUMPI PUSH2 0x1E5B PUSH2 0x1DF5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E697377617056323A204B0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E97 PUSH1 0xC DUP4 PUSH2 0x17F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA2 DUP3 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EC4 DUP2 PUSH2 0x1E8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768206C6971756964697479000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EFF PUSH1 0x14 DUP4 PUSH2 0x17F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0A DUP3 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F2C DUP2 PUSH2 0x1EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F6A DUP3 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F75 DUP4 PUSH2 0x1926 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F85 JUMPI PUSH2 0x1F84 PUSH2 0x1F33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9A DUP3 PUSH2 0x1879 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA5 DUP4 PUSH2 0x1879 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCB JUMPI PUSH2 0x1FCA PUSH2 0x1DF5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FE4 PUSH0 DUP4 ADD DUP7 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x1FF1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x1FFE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2019 PUSH0 DUP4 ADD DUP7 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x2026 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x2033 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2045 DUP3 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP PUSH2 0x2050 DUP4 PUSH2 0x1926 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2068 JUMPI PUSH2 0x2067 PUSH2 0x1DF5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY BLOBBASEFEE LT 0xF6 0xC1 SELFDESTRUCT 0xC1 RETURNDATACOPY 0xD6 CODECOPY 0xC 0xC0 0xC OR 0x23 GASLIMIT SWAP9 CALLDATALOAD SELFDESTRUCT CALLCODE SWAP4 DUP7 0xEC MOD 0xC5 SELFDESTRUCT 0xBA SWAP3 0xC2 DUP2 PUSH0 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "231:3040:6:-:0;;;401:55;;;;;;;;;;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1713:1:5;1917:7;:21;;;;231:3040:6;;7:99:7;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;231:3040:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 4131,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 5121,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 4724,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 4994,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 4124,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_842": {
									"entryPoint": 4714,
									"id": 842,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_834": {
									"entryPoint": 4535,
									"id": 834,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_650": {
									"entryPoint": 4149,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 4295,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1217": {
									"entryPoint": 4605,
									"id": 1217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 5584,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_1011": {
									"entryPoint": 3363,
									"id": 1011,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_278": {
									"entryPoint": 3994,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1073,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 2460,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1199,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getReserves_928": {
									"entryPoint": 1006,
									"id": 928,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@initialize_912": {
									"entryPoint": 1207,
									"id": 912,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@min_1290": {
									"entryPoint": 4970,
									"id": 1290,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 862,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_1095": {
									"entryPoint": 2673,
									"id": 1095,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@sqrt_1273": {
									"entryPoint": 4851,
									"id": 1273,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swap_1195": {
									"entryPoint": 1570,
									"id": 1195,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 2529,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token0_865": {
									"entryPoint": 1107,
									"id": 865,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_867": {
									"entryPoint": 3957,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": 1144,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1153,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 3923,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint112_to_t_uint112_fromStack": {
									"entryPoint": 6290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8145,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7482,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8198,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint112_t_uint112__to_t_uint112_t_uint112__fromStack_reversed": {
									"entryPoint": 6305,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7042,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint112": {
									"entryPoint": 8080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint112": {
									"entryPoint": 6265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7669,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7987,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6344,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af": {
									"entryPoint": 7779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0": {
									"entryPoint": 7236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691": {
									"entryPoint": 7883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16480:7",
										"nodeType": "YulBlock",
										"src": "0:16480:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1287:69:7",
													"nodeType": "YulBlock",
													"src": "1287:69:7",
													"statements": [
														{
															"nativeSrc": "1297:53:7",
															"nodeType": "YulAssignment",
															"src": "1297:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1312:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1312:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1319:30:7",
																		"nodeType": "YulLiteral",
																		"src": "1319:30:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1308:3:7"
																},
																"nativeSrc": "1308:42:7",
																"nodeType": "YulFunctionCall",
																"src": "1308:42:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1297:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1297:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint112",
												"nativeSrc": "1242:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1269:5:7",
														"nodeType": "YulTypedName",
														"src": "1269:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1279:7:7",
														"nodeType": "YulTypedName",
														"src": "1279:7:7",
														"type": ""
													}
												],
												"src": "1242:114:7"
											},
											{
												"body": {
													"nativeSrc": "1427:53:7",
													"nodeType": "YulBlock",
													"src": "1427:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1444:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1444:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1467:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1467:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint112",
																			"nativeSrc": "1449:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1449:17:7"
																		},
																		"nativeSrc": "1449:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1449:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1437:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:7"
																},
																"nativeSrc": "1437:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1437:37:7"
															},
															"nativeSrc": "1437:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1437:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint112_to_t_uint112_fromStack",
												"nativeSrc": "1362:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1415:5:7",
														"nodeType": "YulTypedName",
														"src": "1415:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1422:3:7",
														"nodeType": "YulTypedName",
														"src": "1422:3:7",
														"type": ""
													}
												],
												"src": "1362:118:7"
											},
											{
												"body": {
													"nativeSrc": "1612:206:7",
													"nodeType": "YulBlock",
													"src": "1612:206:7",
													"statements": [
														{
															"nativeSrc": "1622:26:7",
															"nodeType": "YulAssignment",
															"src": "1622:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1634:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1634:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1630:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1630:3:7"
																},
																"nativeSrc": "1630:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1630:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1622:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1622:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1702:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1715:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1715:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1726:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1726:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1711:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:7"
																		},
																		"nativeSrc": "1711:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint112_to_t_uint112_fromStack",
																	"nativeSrc": "1658:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1658:43:7"
																},
																"nativeSrc": "1658:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1658:71:7"
															},
															"nativeSrc": "1658:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1658:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1783:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1783:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1796:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1796:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1807:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1807:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1792:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1792:3:7"
																		},
																		"nativeSrc": "1792:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1792:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint112_to_t_uint112_fromStack",
																	"nativeSrc": "1739:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1739:43:7"
																},
																"nativeSrc": "1739:72:7",
																"nodeType": "YulFunctionCall",
																"src": "1739:72:7"
															},
															"nativeSrc": "1739:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "1739:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint112_t_uint112__to_t_uint112_t_uint112__fromStack_reversed",
												"nativeSrc": "1486:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1576:9:7",
														"nodeType": "YulTypedName",
														"src": "1576:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1588:6:7",
														"nodeType": "YulTypedName",
														"src": "1588:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1596:6:7",
														"nodeType": "YulTypedName",
														"src": "1596:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1607:4:7",
														"nodeType": "YulTypedName",
														"src": "1607:4:7",
														"type": ""
													}
												],
												"src": "1486:332:7"
											},
											{
												"body": {
													"nativeSrc": "1864:35:7",
													"nodeType": "YulBlock",
													"src": "1864:35:7",
													"statements": [
														{
															"nativeSrc": "1874:19:7",
															"nodeType": "YulAssignment",
															"src": "1874:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1890:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1884:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1884:5:7"
																},
																"nativeSrc": "1884:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1884:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1874:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1874:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1824:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1857:6:7",
														"nodeType": "YulTypedName",
														"src": "1857:6:7",
														"type": ""
													}
												],
												"src": "1824:75:7"
											},
											{
												"body": {
													"nativeSrc": "1994:28:7",
													"nodeType": "YulBlock",
													"src": "1994:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2011:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2011:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2014:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2014:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:7"
																},
																"nativeSrc": "2004:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2004:12:7"
															},
															"nativeSrc": "2004:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2004:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1905:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1905:117:7"
											},
											{
												"body": {
													"nativeSrc": "2117:28:7",
													"nodeType": "YulBlock",
													"src": "2117:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2134:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2134:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2137:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:7"
																},
																"nativeSrc": "2127:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2127:12:7"
															},
															"nativeSrc": "2127:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2127:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2028:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2028:117:7"
											},
											{
												"body": {
													"nativeSrc": "2196:81:7",
													"nodeType": "YulBlock",
													"src": "2196:81:7",
													"statements": [
														{
															"nativeSrc": "2206:65:7",
															"nodeType": "YulAssignment",
															"src": "2206:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2221:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2221:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2228:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2228:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:7"
																},
																"nativeSrc": "2217:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2217:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2206:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2206:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2151:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2178:5:7",
														"nodeType": "YulTypedName",
														"src": "2178:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2188:7:7",
														"nodeType": "YulTypedName",
														"src": "2188:7:7",
														"type": ""
													}
												],
												"src": "2151:126:7"
											},
											{
												"body": {
													"nativeSrc": "2328:51:7",
													"nodeType": "YulBlock",
													"src": "2328:51:7",
													"statements": [
														{
															"nativeSrc": "2338:35:7",
															"nodeType": "YulAssignment",
															"src": "2338:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2367:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2367:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2349:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:17:7"
																},
																"nativeSrc": "2349:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2349:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2338:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2338:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2283:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2310:5:7",
														"nodeType": "YulTypedName",
														"src": "2310:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2320:7:7",
														"nodeType": "YulTypedName",
														"src": "2320:7:7",
														"type": ""
													}
												],
												"src": "2283:96:7"
											},
											{
												"body": {
													"nativeSrc": "2428:79:7",
													"nodeType": "YulBlock",
													"src": "2428:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2485:16:7",
																"nodeType": "YulBlock",
																"src": "2485:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2494:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2494:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2497:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2497:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2487:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2487:6:7"
																			},
																			"nativeSrc": "2487:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2487:12:7"
																		},
																		"nativeSrc": "2487:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2487:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2451:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2451:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2476:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2476:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2458:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2458:17:7"
																				},
																				"nativeSrc": "2458:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2458:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2448:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2448:2:7"
																		},
																		"nativeSrc": "2448:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2441:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2441:6:7"
																},
																"nativeSrc": "2441:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2441:43:7"
															},
															"nativeSrc": "2438:63:7",
															"nodeType": "YulIf",
															"src": "2438:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2385:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2421:5:7",
														"nodeType": "YulTypedName",
														"src": "2421:5:7",
														"type": ""
													}
												],
												"src": "2385:122:7"
											},
											{
												"body": {
													"nativeSrc": "2565:87:7",
													"nodeType": "YulBlock",
													"src": "2565:87:7",
													"statements": [
														{
															"nativeSrc": "2575:29:7",
															"nodeType": "YulAssignment",
															"src": "2575:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2597:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2597:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2584:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2584:12:7"
																},
																"nativeSrc": "2584:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2584:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2575:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2575:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2613:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2613:26:7"
																},
																"nativeSrc": "2613:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2613:33:7"
															},
															"nativeSrc": "2613:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2613:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2513:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2543:6:7",
														"nodeType": "YulTypedName",
														"src": "2543:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2551:3:7",
														"nodeType": "YulTypedName",
														"src": "2551:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2559:5:7",
														"nodeType": "YulTypedName",
														"src": "2559:5:7",
														"type": ""
													}
												],
												"src": "2513:139:7"
											},
											{
												"body": {
													"nativeSrc": "2703:32:7",
													"nodeType": "YulBlock",
													"src": "2703:32:7",
													"statements": [
														{
															"nativeSrc": "2713:16:7",
															"nodeType": "YulAssignment",
															"src": "2713:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2724:5:7",
																"nodeType": "YulIdentifier",
																"src": "2724:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2713:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2713:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2658:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2685:5:7",
														"nodeType": "YulTypedName",
														"src": "2685:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2695:7:7",
														"nodeType": "YulTypedName",
														"src": "2695:7:7",
														"type": ""
													}
												],
												"src": "2658:77:7"
											},
											{
												"body": {
													"nativeSrc": "2784:79:7",
													"nodeType": "YulBlock",
													"src": "2784:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2841:16:7",
																"nodeType": "YulBlock",
																"src": "2841:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2850:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2850:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2853:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2853:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2843:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2843:6:7"
																			},
																			"nativeSrc": "2843:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:12:7"
																		},
																		"nativeSrc": "2843:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2843:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2807:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2807:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2832:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2832:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2814:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2814:17:7"
																				},
																				"nativeSrc": "2814:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2814:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2804:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2804:2:7"
																		},
																		"nativeSrc": "2804:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2804:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2797:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2797:6:7"
																},
																"nativeSrc": "2797:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2797:43:7"
															},
															"nativeSrc": "2794:63:7",
															"nodeType": "YulIf",
															"src": "2794:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2741:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2777:5:7",
														"nodeType": "YulTypedName",
														"src": "2777:5:7",
														"type": ""
													}
												],
												"src": "2741:122:7"
											},
											{
												"body": {
													"nativeSrc": "2921:87:7",
													"nodeType": "YulBlock",
													"src": "2921:87:7",
													"statements": [
														{
															"nativeSrc": "2931:29:7",
															"nodeType": "YulAssignment",
															"src": "2931:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2953:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2953:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2940:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2940:12:7"
																},
																"nativeSrc": "2940:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2940:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2931:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2931:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2996:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2996:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2969:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2969:26:7"
																},
																"nativeSrc": "2969:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2969:33:7"
															},
															"nativeSrc": "2969:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2969:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2869:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2899:6:7",
														"nodeType": "YulTypedName",
														"src": "2899:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2907:3:7",
														"nodeType": "YulTypedName",
														"src": "2907:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2915:5:7",
														"nodeType": "YulTypedName",
														"src": "2915:5:7",
														"type": ""
													}
												],
												"src": "2869:139:7"
											},
											{
												"body": {
													"nativeSrc": "3097:391:7",
													"nodeType": "YulBlock",
													"src": "3097:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3143:83:7",
																"nodeType": "YulBlock",
																"src": "3143:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3145:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3145:77:7"
																			},
																			"nativeSrc": "3145:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3145:79:7"
																		},
																		"nativeSrc": "3145:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3145:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3118:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3118:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3127:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3127:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3114:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3114:3:7"
																		},
																		"nativeSrc": "3114:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3114:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3139:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3139:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3110:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3110:3:7"
																},
																"nativeSrc": "3110:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3110:32:7"
															},
															"nativeSrc": "3107:119:7",
															"nodeType": "YulIf",
															"src": "3107:119:7"
														},
														{
															"nativeSrc": "3236:117:7",
															"nodeType": "YulBlock",
															"src": "3236:117:7",
															"statements": [
																{
																	"nativeSrc": "3251:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3251:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3265:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3265:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3255:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3255:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3280:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3280:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3315:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3315:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3326:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3326:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3311:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3311:3:7"
																				},
																				"nativeSrc": "3311:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3311:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3335:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3335:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3290:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3290:20:7"
																		},
																		"nativeSrc": "3290:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3290:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3280:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3280:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3363:118:7",
															"nodeType": "YulBlock",
															"src": "3363:118:7",
															"statements": [
																{
																	"nativeSrc": "3378:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3378:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3392:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3392:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3382:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3382:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3408:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3408:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3443:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3443:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3454:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3454:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3439:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3439:3:7"
																				},
																				"nativeSrc": "3439:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3439:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3463:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3463:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3418:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3418:20:7"
																		},
																		"nativeSrc": "3418:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3418:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3408:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3408:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3014:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3059:9:7",
														"nodeType": "YulTypedName",
														"src": "3059:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3070:7:7",
														"nodeType": "YulTypedName",
														"src": "3070:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3082:6:7",
														"nodeType": "YulTypedName",
														"src": "3082:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3090:6:7",
														"nodeType": "YulTypedName",
														"src": "3090:6:7",
														"type": ""
													}
												],
												"src": "3014:474:7"
											},
											{
												"body": {
													"nativeSrc": "3536:48:7",
													"nodeType": "YulBlock",
													"src": "3536:48:7",
													"statements": [
														{
															"nativeSrc": "3546:32:7",
															"nodeType": "YulAssignment",
															"src": "3546:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3571:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3571:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3564:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3564:6:7"
																		},
																		"nativeSrc": "3564:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3564:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3557:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:7"
																},
																"nativeSrc": "3557:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3557:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3546:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3546:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3494:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3518:5:7",
														"nodeType": "YulTypedName",
														"src": "3518:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3528:7:7",
														"nodeType": "YulTypedName",
														"src": "3528:7:7",
														"type": ""
													}
												],
												"src": "3494:90:7"
											},
											{
												"body": {
													"nativeSrc": "3649:50:7",
													"nodeType": "YulBlock",
													"src": "3649:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3666:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3666:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3686:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3686:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3671:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3671:14:7"
																		},
																		"nativeSrc": "3671:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3671:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3659:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3659:6:7"
																},
																"nativeSrc": "3659:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3659:34:7"
															},
															"nativeSrc": "3659:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3659:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3590:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3637:5:7",
														"nodeType": "YulTypedName",
														"src": "3637:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3644:3:7",
														"nodeType": "YulTypedName",
														"src": "3644:3:7",
														"type": ""
													}
												],
												"src": "3590:109:7"
											},
											{
												"body": {
													"nativeSrc": "3797:118:7",
													"nodeType": "YulBlock",
													"src": "3797:118:7",
													"statements": [
														{
															"nativeSrc": "3807:26:7",
															"nodeType": "YulAssignment",
															"src": "3807:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3819:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3819:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3830:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3830:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3815:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3815:3:7"
																},
																"nativeSrc": "3815:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3815:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3807:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3807:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3881:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3881:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3894:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3894:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3905:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3905:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3890:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3890:3:7"
																		},
																		"nativeSrc": "3890:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3890:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3843:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3843:37:7"
																},
																"nativeSrc": "3843:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3843:65:7"
															},
															"nativeSrc": "3843:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3843:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3705:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3769:9:7",
														"nodeType": "YulTypedName",
														"src": "3769:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3781:6:7",
														"nodeType": "YulTypedName",
														"src": "3781:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3792:4:7",
														"nodeType": "YulTypedName",
														"src": "3792:4:7",
														"type": ""
													}
												],
												"src": "3705:210:7"
											},
											{
												"body": {
													"nativeSrc": "3986:53:7",
													"nodeType": "YulBlock",
													"src": "3986:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4003:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4003:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4026:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4026:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4008:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4008:17:7"
																		},
																		"nativeSrc": "4008:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4008:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3996:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3996:6:7"
																},
																"nativeSrc": "3996:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3996:37:7"
															},
															"nativeSrc": "3996:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3996:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3921:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3974:5:7",
														"nodeType": "YulTypedName",
														"src": "3974:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3981:3:7",
														"nodeType": "YulTypedName",
														"src": "3981:3:7",
														"type": ""
													}
												],
												"src": "3921:118:7"
											},
											{
												"body": {
													"nativeSrc": "4143:124:7",
													"nodeType": "YulBlock",
													"src": "4143:124:7",
													"statements": [
														{
															"nativeSrc": "4153:26:7",
															"nodeType": "YulAssignment",
															"src": "4153:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4165:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4165:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4176:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4176:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4161:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4161:3:7"
																},
																"nativeSrc": "4161:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4161:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4153:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4153:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4233:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4233:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4246:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4246:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4257:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4257:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4242:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4242:3:7"
																		},
																		"nativeSrc": "4242:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4242:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4189:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4189:43:7"
																},
																"nativeSrc": "4189:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4189:71:7"
															},
															"nativeSrc": "4189:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4189:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4045:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4115:9:7",
														"nodeType": "YulTypedName",
														"src": "4115:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4127:6:7",
														"nodeType": "YulTypedName",
														"src": "4127:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4138:4:7",
														"nodeType": "YulTypedName",
														"src": "4138:4:7",
														"type": ""
													}
												],
												"src": "4045:222:7"
											},
											{
												"body": {
													"nativeSrc": "4338:53:7",
													"nodeType": "YulBlock",
													"src": "4338:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4355:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4355:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4378:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4378:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4360:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4360:17:7"
																		},
																		"nativeSrc": "4360:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4360:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4348:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4348:6:7"
																},
																"nativeSrc": "4348:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4348:37:7"
															},
															"nativeSrc": "4348:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "4348:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4273:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4326:5:7",
														"nodeType": "YulTypedName",
														"src": "4326:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4333:3:7",
														"nodeType": "YulTypedName",
														"src": "4333:3:7",
														"type": ""
													}
												],
												"src": "4273:118:7"
											},
											{
												"body": {
													"nativeSrc": "4495:124:7",
													"nodeType": "YulBlock",
													"src": "4495:124:7",
													"statements": [
														{
															"nativeSrc": "4505:26:7",
															"nodeType": "YulAssignment",
															"src": "4505:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4517:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4517:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4528:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4528:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4513:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:7"
																},
																"nativeSrc": "4513:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4513:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4505:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4505:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4585:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4585:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4598:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4598:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4609:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4609:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4594:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4594:3:7"
																		},
																		"nativeSrc": "4594:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4594:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4541:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4541:43:7"
																},
																"nativeSrc": "4541:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4541:71:7"
															},
															"nativeSrc": "4541:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4541:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4397:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4467:9:7",
														"nodeType": "YulTypedName",
														"src": "4467:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4479:6:7",
														"nodeType": "YulTypedName",
														"src": "4479:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4490:4:7",
														"nodeType": "YulTypedName",
														"src": "4490:4:7",
														"type": ""
													}
												],
												"src": "4397:222:7"
											},
											{
												"body": {
													"nativeSrc": "4725:519:7",
													"nodeType": "YulBlock",
													"src": "4725:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4771:83:7",
																"nodeType": "YulBlock",
																"src": "4771:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4773:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4773:77:7"
																			},
																			"nativeSrc": "4773:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4773:79:7"
																		},
																		"nativeSrc": "4773:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4773:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4746:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4746:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4755:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4755:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4742:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:7"
																		},
																		"nativeSrc": "4742:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4742:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4767:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4767:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4738:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4738:3:7"
																},
																"nativeSrc": "4738:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4738:32:7"
															},
															"nativeSrc": "4735:119:7",
															"nodeType": "YulIf",
															"src": "4735:119:7"
														},
														{
															"nativeSrc": "4864:117:7",
															"nodeType": "YulBlock",
															"src": "4864:117:7",
															"statements": [
																{
																	"nativeSrc": "4879:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4879:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4893:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4893:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4883:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4883:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4908:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4908:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4943:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4943:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4954:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4954:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4939:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4939:3:7"
																				},
																				"nativeSrc": "4939:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4939:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4963:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4963:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4918:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4918:20:7"
																		},
																		"nativeSrc": "4918:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4918:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4908:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4908:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4991:118:7",
															"nodeType": "YulBlock",
															"src": "4991:118:7",
															"statements": [
																{
																	"nativeSrc": "5006:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5006:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5020:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5020:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5010:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5010:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5036:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5036:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5071:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5071:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5082:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5082:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5067:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5067:3:7"
																				},
																				"nativeSrc": "5067:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5067:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5091:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5091:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5046:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5046:20:7"
																		},
																		"nativeSrc": "5046:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5046:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5036:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5036:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5119:118:7",
															"nodeType": "YulBlock",
															"src": "5119:118:7",
															"statements": [
																{
																	"nativeSrc": "5134:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5134:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5138:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5138:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5164:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5164:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5199:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5199:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5210:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5210:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5195:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5195:3:7"
																				},
																				"nativeSrc": "5195:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5195:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5219:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5219:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5174:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5174:20:7"
																		},
																		"nativeSrc": "5174:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5174:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5164:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5164:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4625:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4679:9:7",
														"nodeType": "YulTypedName",
														"src": "4679:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4690:7:7",
														"nodeType": "YulTypedName",
														"src": "4690:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4702:6:7",
														"nodeType": "YulTypedName",
														"src": "4702:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4710:6:7",
														"nodeType": "YulTypedName",
														"src": "4710:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4718:6:7",
														"nodeType": "YulTypedName",
														"src": "4718:6:7",
														"type": ""
													}
												],
												"src": "4625:619:7"
											},
											{
												"body": {
													"nativeSrc": "5293:43:7",
													"nodeType": "YulBlock",
													"src": "5293:43:7",
													"statements": [
														{
															"nativeSrc": "5303:27:7",
															"nodeType": "YulAssignment",
															"src": "5303:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5318:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5318:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5325:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5325:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5314:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5314:3:7"
																},
																"nativeSrc": "5314:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5314:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5303:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5303:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5250:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5275:5:7",
														"nodeType": "YulTypedName",
														"src": "5275:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5285:7:7",
														"nodeType": "YulTypedName",
														"src": "5285:7:7",
														"type": ""
													}
												],
												"src": "5250:86:7"
											},
											{
												"body": {
													"nativeSrc": "5403:51:7",
													"nodeType": "YulBlock",
													"src": "5403:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5420:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5420:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5441:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5441:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5425:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "5425:15:7"
																		},
																		"nativeSrc": "5425:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5425:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5413:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5413:6:7"
																},
																"nativeSrc": "5413:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5413:35:7"
															},
															"nativeSrc": "5413:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "5413:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5342:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5391:5:7",
														"nodeType": "YulTypedName",
														"src": "5391:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5398:3:7",
														"nodeType": "YulTypedName",
														"src": "5398:3:7",
														"type": ""
													}
												],
												"src": "5342:112:7"
											},
											{
												"body": {
													"nativeSrc": "5554:120:7",
													"nodeType": "YulBlock",
													"src": "5554:120:7",
													"statements": [
														{
															"nativeSrc": "5564:26:7",
															"nodeType": "YulAssignment",
															"src": "5564:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5576:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5576:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5587:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5587:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5572:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5572:3:7"
																},
																"nativeSrc": "5572:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5572:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5564:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5564:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5640:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5640:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5653:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5664:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5664:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5649:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5649:3:7"
																		},
																		"nativeSrc": "5649:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5649:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5600:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5600:39:7"
																},
																"nativeSrc": "5600:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5600:67:7"
															},
															"nativeSrc": "5600:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5600:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5460:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5526:9:7",
														"nodeType": "YulTypedName",
														"src": "5526:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5538:6:7",
														"nodeType": "YulTypedName",
														"src": "5538:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5549:4:7",
														"nodeType": "YulTypedName",
														"src": "5549:4:7",
														"type": ""
													}
												],
												"src": "5460:214:7"
											},
											{
												"body": {
													"nativeSrc": "5763:391:7",
													"nodeType": "YulBlock",
													"src": "5763:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5809:83:7",
																"nodeType": "YulBlock",
																"src": "5809:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5811:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5811:77:7"
																			},
																			"nativeSrc": "5811:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5811:79:7"
																		},
																		"nativeSrc": "5811:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5811:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5784:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5784:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5780:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5780:3:7"
																		},
																		"nativeSrc": "5780:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5780:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5805:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5805:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5776:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5776:3:7"
																},
																"nativeSrc": "5776:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5776:32:7"
															},
															"nativeSrc": "5773:119:7",
															"nodeType": "YulIf",
															"src": "5773:119:7"
														},
														{
															"nativeSrc": "5902:117:7",
															"nodeType": "YulBlock",
															"src": "5902:117:7",
															"statements": [
																{
																	"nativeSrc": "5917:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5917:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5931:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5931:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5921:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5921:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5946:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5946:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5981:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5981:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5992:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5992:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5977:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5977:3:7"
																				},
																				"nativeSrc": "5977:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5977:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6001:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6001:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5956:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5956:20:7"
																		},
																		"nativeSrc": "5956:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5956:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5946:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5946:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6029:118:7",
															"nodeType": "YulBlock",
															"src": "6029:118:7",
															"statements": [
																{
																	"nativeSrc": "6044:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6044:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6058:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6058:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6048:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6048:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6074:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6074:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6109:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6109:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6120:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6120:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6105:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6105:3:7"
																				},
																				"nativeSrc": "6105:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6105:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6129:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6129:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6084:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6084:20:7"
																		},
																		"nativeSrc": "6084:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6084:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6074:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6074:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5680:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5725:9:7",
														"nodeType": "YulTypedName",
														"src": "5725:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5736:7:7",
														"nodeType": "YulTypedName",
														"src": "5736:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5748:6:7",
														"nodeType": "YulTypedName",
														"src": "5748:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5756:6:7",
														"nodeType": "YulTypedName",
														"src": "5756:6:7",
														"type": ""
													}
												],
												"src": "5680:474:7"
											},
											{
												"body": {
													"nativeSrc": "6260:519:7",
													"nodeType": "YulBlock",
													"src": "6260:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6306:83:7",
																"nodeType": "YulBlock",
																"src": "6306:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6308:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6308:77:7"
																			},
																			"nativeSrc": "6308:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6308:79:7"
																		},
																		"nativeSrc": "6308:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6308:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6281:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6281:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6290:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6290:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6277:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6277:3:7"
																		},
																		"nativeSrc": "6277:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6277:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6302:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6302:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6273:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6273:3:7"
																},
																"nativeSrc": "6273:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6273:32:7"
															},
															"nativeSrc": "6270:119:7",
															"nodeType": "YulIf",
															"src": "6270:119:7"
														},
														{
															"nativeSrc": "6399:117:7",
															"nodeType": "YulBlock",
															"src": "6399:117:7",
															"statements": [
																{
																	"nativeSrc": "6414:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6414:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6428:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6428:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6418:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6418:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6443:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6443:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6478:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6478:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6489:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6489:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6474:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6474:3:7"
																				},
																				"nativeSrc": "6474:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6474:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6498:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6498:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6453:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6453:20:7"
																		},
																		"nativeSrc": "6453:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6443:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6443:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6526:118:7",
															"nodeType": "YulBlock",
															"src": "6526:118:7",
															"statements": [
																{
																	"nativeSrc": "6541:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6541:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6555:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6555:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6545:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6545:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6571:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6571:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6606:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6606:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6617:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6617:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6602:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6602:3:7"
																				},
																				"nativeSrc": "6602:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6602:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6626:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6626:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6581:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6581:20:7"
																		},
																		"nativeSrc": "6581:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6581:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6571:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6571:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6654:118:7",
															"nodeType": "YulBlock",
															"src": "6654:118:7",
															"statements": [
																{
																	"nativeSrc": "6669:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6669:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6683:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6683:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6730:3:7"
																				},
																				"nativeSrc": "6730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6709:20:7"
																		},
																		"nativeSrc": "6709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6699:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nativeSrc": "6160:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6214:9:7",
														"nodeType": "YulTypedName",
														"src": "6214:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6225:7:7",
														"nodeType": "YulTypedName",
														"src": "6225:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6237:6:7",
														"nodeType": "YulTypedName",
														"src": "6237:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6245:6:7",
														"nodeType": "YulTypedName",
														"src": "6245:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6253:6:7",
														"nodeType": "YulTypedName",
														"src": "6253:6:7",
														"type": ""
													}
												],
												"src": "6160:619:7"
											},
											{
												"body": {
													"nativeSrc": "6851:263:7",
													"nodeType": "YulBlock",
													"src": "6851:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6897:83:7",
																"nodeType": "YulBlock",
																"src": "6897:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6899:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6899:77:7"
																			},
																			"nativeSrc": "6899:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6899:79:7"
																		},
																		"nativeSrc": "6899:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6899:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6872:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6872:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6881:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6881:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6868:3:7"
																		},
																		"nativeSrc": "6868:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6868:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6893:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6893:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6864:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6864:3:7"
																},
																"nativeSrc": "6864:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6864:32:7"
															},
															"nativeSrc": "6861:119:7",
															"nodeType": "YulIf",
															"src": "6861:119:7"
														},
														{
															"nativeSrc": "6990:117:7",
															"nodeType": "YulBlock",
															"src": "6990:117:7",
															"statements": [
																{
																	"nativeSrc": "7005:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7005:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7019:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7019:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7009:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7009:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7034:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7034:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7069:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7069:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7080:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7080:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7065:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7065:3:7"
																				},
																				"nativeSrc": "7065:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7065:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7089:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7089:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7044:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7044:20:7"
																		},
																		"nativeSrc": "7044:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7044:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7034:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7034:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6785:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6821:9:7",
														"nodeType": "YulTypedName",
														"src": "6821:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6832:7:7",
														"nodeType": "YulTypedName",
														"src": "6832:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6844:6:7",
														"nodeType": "YulTypedName",
														"src": "6844:6:7",
														"type": ""
													}
												],
												"src": "6785:329:7"
											},
											{
												"body": {
													"nativeSrc": "7186:263:7",
													"nodeType": "YulBlock",
													"src": "7186:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7232:83:7",
																"nodeType": "YulBlock",
																"src": "7232:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7234:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7234:77:7"
																			},
																			"nativeSrc": "7234:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7234:79:7"
																		},
																		"nativeSrc": "7234:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7234:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7207:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7207:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7216:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7216:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7203:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7203:3:7"
																		},
																		"nativeSrc": "7203:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7203:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7228:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7228:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7199:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7199:3:7"
																},
																"nativeSrc": "7199:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7199:32:7"
															},
															"nativeSrc": "7196:119:7",
															"nodeType": "YulIf",
															"src": "7196:119:7"
														},
														{
															"nativeSrc": "7325:117:7",
															"nodeType": "YulBlock",
															"src": "7325:117:7",
															"statements": [
																{
																	"nativeSrc": "7340:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7340:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7354:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7354:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7344:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7344:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7369:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7369:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7404:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7404:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7415:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7415:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7400:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7400:3:7"
																				},
																				"nativeSrc": "7400:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7400:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7424:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7424:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7379:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7379:20:7"
																		},
																		"nativeSrc": "7379:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7379:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7369:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7369:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7120:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7156:9:7",
														"nodeType": "YulTypedName",
														"src": "7156:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7167:7:7",
														"nodeType": "YulTypedName",
														"src": "7167:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7179:6:7",
														"nodeType": "YulTypedName",
														"src": "7179:6:7",
														"type": ""
													}
												],
												"src": "7120:329:7"
											},
											{
												"body": {
													"nativeSrc": "7581:206:7",
													"nodeType": "YulBlock",
													"src": "7581:206:7",
													"statements": [
														{
															"nativeSrc": "7591:26:7",
															"nodeType": "YulAssignment",
															"src": "7591:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7603:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7603:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7614:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7614:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7599:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7599:3:7"
																},
																"nativeSrc": "7599:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7599:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7591:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7591:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7671:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7671:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7684:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7684:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7695:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7695:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7680:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7680:3:7"
																		},
																		"nativeSrc": "7680:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7680:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7627:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7627:43:7"
																},
																"nativeSrc": "7627:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7627:71:7"
															},
															"nativeSrc": "7627:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7627:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7752:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7752:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7765:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7765:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7776:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7776:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7761:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7761:3:7"
																		},
																		"nativeSrc": "7761:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7761:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7708:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7708:43:7"
																},
																"nativeSrc": "7708:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7708:72:7"
															},
															"nativeSrc": "7708:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7708:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7455:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7545:9:7",
														"nodeType": "YulTypedName",
														"src": "7545:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7557:6:7",
														"nodeType": "YulTypedName",
														"src": "7557:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7565:6:7",
														"nodeType": "YulTypedName",
														"src": "7565:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7576:4:7",
														"nodeType": "YulTypedName",
														"src": "7576:4:7",
														"type": ""
													}
												],
												"src": "7455:332:7"
											},
											{
												"body": {
													"nativeSrc": "7876:391:7",
													"nodeType": "YulBlock",
													"src": "7876:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7922:83:7",
																"nodeType": "YulBlock",
																"src": "7922:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7924:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7924:77:7"
																			},
																			"nativeSrc": "7924:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7924:79:7"
																		},
																		"nativeSrc": "7924:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7924:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7897:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7897:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7906:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7906:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7893:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:7"
																		},
																		"nativeSrc": "7893:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7918:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7918:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7889:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7889:3:7"
																},
																"nativeSrc": "7889:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7889:32:7"
															},
															"nativeSrc": "7886:119:7",
															"nodeType": "YulIf",
															"src": "7886:119:7"
														},
														{
															"nativeSrc": "8015:117:7",
															"nodeType": "YulBlock",
															"src": "8015:117:7",
															"statements": [
																{
																	"nativeSrc": "8030:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8030:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8044:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8044:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8034:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8034:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8059:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8059:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8094:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8094:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8105:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8105:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8090:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8090:3:7"
																				},
																				"nativeSrc": "8090:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8090:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8114:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8114:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8069:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8069:20:7"
																		},
																		"nativeSrc": "8069:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8069:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8059:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8059:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8142:118:7",
															"nodeType": "YulBlock",
															"src": "8142:118:7",
															"statements": [
																{
																	"nativeSrc": "8157:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8157:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8171:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8171:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8161:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8161:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8187:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8187:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8222:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8222:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8233:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8233:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8218:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8218:3:7"
																				},
																				"nativeSrc": "8218:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8218:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8242:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8242:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8197:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8197:20:7"
																		},
																		"nativeSrc": "8197:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8197:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8187:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8187:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "7793:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7838:9:7",
														"nodeType": "YulTypedName",
														"src": "7838:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7849:7:7",
														"nodeType": "YulTypedName",
														"src": "7849:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7861:6:7",
														"nodeType": "YulTypedName",
														"src": "7861:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7869:6:7",
														"nodeType": "YulTypedName",
														"src": "7869:6:7",
														"type": ""
													}
												],
												"src": "7793:474:7"
											},
											{
												"body": {
													"nativeSrc": "8301:152:7",
													"nodeType": "YulBlock",
													"src": "8301:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8318:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8318:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8321:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8321:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8311:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8311:6:7"
																},
																"nativeSrc": "8311:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8311:88:7"
															},
															"nativeSrc": "8311:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8311:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8415:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8415:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8418:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8418:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8408:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:7"
																},
																"nativeSrc": "8408:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8408:15:7"
															},
															"nativeSrc": "8408:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8408:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8439:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8439:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8442:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8442:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8432:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:7"
																},
																"nativeSrc": "8432:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8432:15:7"
															},
															"nativeSrc": "8432:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8432:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8273:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8273:180:7"
											},
											{
												"body": {
													"nativeSrc": "8510:269:7",
													"nodeType": "YulBlock",
													"src": "8510:269:7",
													"statements": [
														{
															"nativeSrc": "8520:22:7",
															"nodeType": "YulAssignment",
															"src": "8520:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8534:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8534:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8540:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8540:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8530:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8530:3:7"
																},
																"nativeSrc": "8530:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8530:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8520:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8520:6:7"
																}
															]
														},
														{
															"nativeSrc": "8551:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8551:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8581:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8581:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8587:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8587:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8577:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8577:3:7"
																},
																"nativeSrc": "8577:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8577:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8555:18:7",
																	"nodeType": "YulTypedName",
																	"src": "8555:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8628:51:7",
																"nodeType": "YulBlock",
																"src": "8628:51:7",
																"statements": [
																	{
																		"nativeSrc": "8642:27:7",
																		"nodeType": "YulAssignment",
																		"src": "8642:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8656:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8656:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8664:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8664:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8652:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8652:3:7"
																			},
																			"nativeSrc": "8652:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8652:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8642:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8642:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8608:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8608:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8601:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8601:6:7"
																},
																"nativeSrc": "8601:26:7",
																"nodeType": "YulFunctionCall",
																"src": "8601:26:7"
															},
															"nativeSrc": "8598:81:7",
															"nodeType": "YulIf",
															"src": "8598:81:7"
														},
														{
															"body": {
																"nativeSrc": "8731:42:7",
																"nodeType": "YulBlock",
																"src": "8731:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8745:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8745:16:7"
																			},
																			"nativeSrc": "8745:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8745:18:7"
																		},
																		"nativeSrc": "8745:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8745:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8695:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8695:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8718:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8718:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8726:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8726:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8715:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8715:2:7"
																		},
																		"nativeSrc": "8715:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8715:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8692:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8692:2:7"
																},
																"nativeSrc": "8692:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8692:38:7"
															},
															"nativeSrc": "8689:84:7",
															"nodeType": "YulIf",
															"src": "8689:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8459:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8494:4:7",
														"nodeType": "YulTypedName",
														"src": "8494:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8503:6:7",
														"nodeType": "YulTypedName",
														"src": "8503:6:7",
														"type": ""
													}
												],
												"src": "8459:320:7"
											},
											{
												"body": {
													"nativeSrc": "8891:63:7",
													"nodeType": "YulBlock",
													"src": "8891:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8913:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8913:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8921:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8921:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8909:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8909:3:7"
																		},
																		"nativeSrc": "8909:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8909:14:7"
																	},
																	{
																		"hexValue": "416c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "8925:21:7",
																		"nodeType": "YulLiteral",
																		"src": "8925:21:7",
																		"type": "",
																		"value": "Already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8902:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8902:6:7"
																},
																"nativeSrc": "8902:45:7",
																"nodeType": "YulFunctionCall",
																"src": "8902:45:7"
															},
															"nativeSrc": "8902:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "8902:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
												"nativeSrc": "8785:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8883:6:7",
														"nodeType": "YulTypedName",
														"src": "8883:6:7",
														"type": ""
													}
												],
												"src": "8785:169:7"
											},
											{
												"body": {
													"nativeSrc": "9106:220:7",
													"nodeType": "YulBlock",
													"src": "9106:220:7",
													"statements": [
														{
															"nativeSrc": "9116:74:7",
															"nodeType": "YulAssignment",
															"src": "9116:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9182:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9182:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9187:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9187:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9123:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9123:58:7"
																},
																"nativeSrc": "9123:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9123:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9116:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9288:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9288:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																	"nativeSrc": "9199:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9199:88:7"
																},
																"nativeSrc": "9199:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9199:93:7"
															},
															"nativeSrc": "9199:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9199:93:7"
														},
														{
															"nativeSrc": "9301:19:7",
															"nodeType": "YulAssignment",
															"src": "9301:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9312:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9312:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9317:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9317:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9308:3:7"
																},
																"nativeSrc": "9308:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9308:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9301:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9301:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8960:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9094:3:7",
														"nodeType": "YulTypedName",
														"src": "9094:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9102:3:7",
														"nodeType": "YulTypedName",
														"src": "9102:3:7",
														"type": ""
													}
												],
												"src": "8960:366:7"
											},
											{
												"body": {
													"nativeSrc": "9503:248:7",
													"nodeType": "YulBlock",
													"src": "9503:248:7",
													"statements": [
														{
															"nativeSrc": "9513:26:7",
															"nodeType": "YulAssignment",
															"src": "9513:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9525:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9525:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9536:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9536:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9521:3:7"
																},
																"nativeSrc": "9521:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9521:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9513:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9513:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9560:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9560:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9571:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9571:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9556:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9556:3:7"
																		},
																		"nativeSrc": "9556:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9556:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9579:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9579:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9585:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9585:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9575:3:7"
																		},
																		"nativeSrc": "9575:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9575:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9549:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9549:6:7"
																},
																"nativeSrc": "9549:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9549:47:7"
															},
															"nativeSrc": "9549:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9549:47:7"
														},
														{
															"nativeSrc": "9605:139:7",
															"nodeType": "YulAssignment",
															"src": "9605:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9739:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9739:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9613:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9613:124:7"
																},
																"nativeSrc": "9613:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9613:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9605:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9605:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9332:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9483:9:7",
														"nodeType": "YulTypedName",
														"src": "9483:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9498:4:7",
														"nodeType": "YulTypedName",
														"src": "9498:4:7",
														"type": ""
													}
												],
												"src": "9332:419:7"
											},
											{
												"body": {
													"nativeSrc": "9863:118:7",
													"nodeType": "YulBlock",
													"src": "9863:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9885:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9885:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9893:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9893:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9881:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9881:3:7"
																		},
																		"nativeSrc": "9881:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9881:14:7"
																	},
																	{
																		"hexValue": "556e697377617056323a20494e53554646494349454e545f4f55545055545f41",
																		"kind": "string",
																		"nativeSrc": "9897:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9897:34:7",
																		"type": "",
																		"value": "UniswapV2: INSUFFICIENT_OUTPUT_A"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9874:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9874:6:7"
																},
																"nativeSrc": "9874:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9874:58:7"
															},
															"nativeSrc": "9874:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9874:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9953:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9953:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9961:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9961:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9949:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9949:3:7"
																		},
																		"nativeSrc": "9949:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9949:15:7"
																	},
																	{
																		"hexValue": "4d4f554e54",
																		"kind": "string",
																		"nativeSrc": "9966:7:7",
																		"nodeType": "YulLiteral",
																		"src": "9966:7:7",
																		"type": "",
																		"value": "MOUNT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9942:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9942:6:7"
																},
																"nativeSrc": "9942:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9942:32:7"
															},
															"nativeSrc": "9942:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "9942:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83",
												"nativeSrc": "9757:224:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9855:6:7",
														"nodeType": "YulTypedName",
														"src": "9855:6:7",
														"type": ""
													}
												],
												"src": "9757:224:7"
											},
											{
												"body": {
													"nativeSrc": "10133:220:7",
													"nodeType": "YulBlock",
													"src": "10133:220:7",
													"statements": [
														{
															"nativeSrc": "10143:74:7",
															"nodeType": "YulAssignment",
															"src": "10143:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10209:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10209:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10214:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10150:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10150:58:7"
																},
																"nativeSrc": "10150:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10150:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10143:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10143:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10315:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83",
																	"nativeSrc": "10226:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10226:88:7"
																},
																"nativeSrc": "10226:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10226:93:7"
															},
															"nativeSrc": "10226:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10226:93:7"
														},
														{
															"nativeSrc": "10328:19:7",
															"nodeType": "YulAssignment",
															"src": "10328:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10339:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10339:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10344:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10344:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:7"
																},
																"nativeSrc": "10335:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10335:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10328:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10328:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9987:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10121:3:7",
														"nodeType": "YulTypedName",
														"src": "10121:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10129:3:7",
														"nodeType": "YulTypedName",
														"src": "10129:3:7",
														"type": ""
													}
												],
												"src": "9987:366:7"
											},
											{
												"body": {
													"nativeSrc": "10530:248:7",
													"nodeType": "YulBlock",
													"src": "10530:248:7",
													"statements": [
														{
															"nativeSrc": "10540:26:7",
															"nodeType": "YulAssignment",
															"src": "10540:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10552:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10552:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10563:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10563:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10548:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10548:3:7"
																},
																"nativeSrc": "10548:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10548:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10540:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10540:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10587:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10587:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10598:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10598:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10583:3:7"
																		},
																		"nativeSrc": "10583:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10583:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10606:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10612:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10612:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10602:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10602:3:7"
																		},
																		"nativeSrc": "10602:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10602:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10576:6:7"
																},
																"nativeSrc": "10576:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10576:47:7"
															},
															"nativeSrc": "10576:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10576:47:7"
														},
														{
															"nativeSrc": "10632:139:7",
															"nodeType": "YulAssignment",
															"src": "10632:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10766:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10766:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10640:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10640:124:7"
																},
																"nativeSrc": "10640:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10640:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10632:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10632:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10359:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10510:9:7",
														"nodeType": "YulTypedName",
														"src": "10510:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10525:4:7",
														"nodeType": "YulTypedName",
														"src": "10525:4:7",
														"type": ""
													}
												],
												"src": "10359:419:7"
											},
											{
												"body": {
													"nativeSrc": "10910:206:7",
													"nodeType": "YulBlock",
													"src": "10910:206:7",
													"statements": [
														{
															"nativeSrc": "10920:26:7",
															"nodeType": "YulAssignment",
															"src": "10920:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10932:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10932:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10943:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10943:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10928:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10928:3:7"
																},
																"nativeSrc": "10928:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10928:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10920:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10920:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11000:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11000:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11013:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11013:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11024:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11024:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11009:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11009:3:7"
																		},
																		"nativeSrc": "11009:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11009:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10956:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10956:43:7"
																},
																"nativeSrc": "10956:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10956:71:7"
															},
															"nativeSrc": "10956:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10956:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11081:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11081:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11094:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11094:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11105:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11105:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11090:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11090:3:7"
																		},
																		"nativeSrc": "11090:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11090:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11037:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11037:43:7"
																},
																"nativeSrc": "11037:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11037:72:7"
															},
															"nativeSrc": "11037:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11037:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10784:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10874:9:7",
														"nodeType": "YulTypedName",
														"src": "10874:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10886:6:7",
														"nodeType": "YulTypedName",
														"src": "10886:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10894:6:7",
														"nodeType": "YulTypedName",
														"src": "10894:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10905:4:7",
														"nodeType": "YulTypedName",
														"src": "10905:4:7",
														"type": ""
													}
												],
												"src": "10784:332:7"
											},
											{
												"body": {
													"nativeSrc": "11162:76:7",
													"nodeType": "YulBlock",
													"src": "11162:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "11216:16:7",
																"nodeType": "YulBlock",
																"src": "11216:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11225:1:7",
																					"nodeType": "YulLiteral",
																					"src": "11225:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11228:1:7",
																					"nodeType": "YulLiteral",
																					"src": "11228:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11218:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11218:6:7"
																			},
																			"nativeSrc": "11218:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11218:12:7"
																		},
																		"nativeSrc": "11218:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11218:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11185:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11185:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11207:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11207:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11192:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "11192:14:7"
																				},
																				"nativeSrc": "11192:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11192:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11182:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11182:2:7"
																		},
																		"nativeSrc": "11182:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11182:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11175:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11175:6:7"
																},
																"nativeSrc": "11175:40:7",
																"nodeType": "YulFunctionCall",
																"src": "11175:40:7"
															},
															"nativeSrc": "11172:60:7",
															"nodeType": "YulIf",
															"src": "11172:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11122:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11155:5:7",
														"nodeType": "YulTypedName",
														"src": "11155:5:7",
														"type": ""
													}
												],
												"src": "11122:116:7"
											},
											{
												"body": {
													"nativeSrc": "11304:77:7",
													"nodeType": "YulBlock",
													"src": "11304:77:7",
													"statements": [
														{
															"nativeSrc": "11314:22:7",
															"nodeType": "YulAssignment",
															"src": "11314:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11329:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11329:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11323:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11323:5:7"
																},
																"nativeSrc": "11323:13:7",
																"nodeType": "YulFunctionCall",
																"src": "11323:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11314:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11314:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11369:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11369:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11345:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "11345:23:7"
																},
																"nativeSrc": "11345:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11345:30:7"
															},
															"nativeSrc": "11345:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "11345:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11244:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11282:6:7",
														"nodeType": "YulTypedName",
														"src": "11282:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11290:3:7",
														"nodeType": "YulTypedName",
														"src": "11290:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11298:5:7",
														"nodeType": "YulTypedName",
														"src": "11298:5:7",
														"type": ""
													}
												],
												"src": "11244:137:7"
											},
											{
												"body": {
													"nativeSrc": "11461:271:7",
													"nodeType": "YulBlock",
													"src": "11461:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "11507:83:7",
																"nodeType": "YulBlock",
																"src": "11507:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11509:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "11509:77:7"
																			},
																			"nativeSrc": "11509:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11509:79:7"
																		},
																		"nativeSrc": "11509:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11509:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11482:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11482:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11491:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11491:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11478:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11478:3:7"
																		},
																		"nativeSrc": "11478:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11478:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11503:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11503:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11474:3:7"
																},
																"nativeSrc": "11474:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11474:32:7"
															},
															"nativeSrc": "11471:119:7",
															"nodeType": "YulIf",
															"src": "11471:119:7"
														},
														{
															"nativeSrc": "11600:125:7",
															"nodeType": "YulBlock",
															"src": "11600:125:7",
															"statements": [
																{
																	"nativeSrc": "11615:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11615:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11629:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11629:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11619:6:7",
																			"nodeType": "YulTypedName",
																			"src": "11619:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11644:71:7",
																	"nodeType": "YulAssignment",
																	"src": "11644:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11687:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11687:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11698:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11698:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11683:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11683:3:7"
																				},
																				"nativeSrc": "11683:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11683:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11707:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11707:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11654:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "11654:28:7"
																		},
																		"nativeSrc": "11654:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11654:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11644:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11644:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11387:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11431:9:7",
														"nodeType": "YulTypedName",
														"src": "11431:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11442:7:7",
														"nodeType": "YulTypedName",
														"src": "11442:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11454:6:7",
														"nodeType": "YulTypedName",
														"src": "11454:6:7",
														"type": ""
													}
												],
												"src": "11387:345:7"
											},
											{
												"body": {
													"nativeSrc": "11801:80:7",
													"nodeType": "YulBlock",
													"src": "11801:80:7",
													"statements": [
														{
															"nativeSrc": "11811:22:7",
															"nodeType": "YulAssignment",
															"src": "11811:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11826:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11826:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11820:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11820:5:7"
																},
																"nativeSrc": "11820:13:7",
																"nodeType": "YulFunctionCall",
																"src": "11820:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11811:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11811:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11869:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11869:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11842:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "11842:26:7"
																},
																"nativeSrc": "11842:33:7",
																"nodeType": "YulFunctionCall",
																"src": "11842:33:7"
															},
															"nativeSrc": "11842:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "11842:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11738:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11779:6:7",
														"nodeType": "YulTypedName",
														"src": "11779:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11787:3:7",
														"nodeType": "YulTypedName",
														"src": "11787:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11795:5:7",
														"nodeType": "YulTypedName",
														"src": "11795:5:7",
														"type": ""
													}
												],
												"src": "11738:143:7"
											},
											{
												"body": {
													"nativeSrc": "11964:274:7",
													"nodeType": "YulBlock",
													"src": "11964:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12010:83:7",
																"nodeType": "YulBlock",
																"src": "12010:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12012:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12012:77:7"
																			},
																			"nativeSrc": "12012:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12012:79:7"
																		},
																		"nativeSrc": "12012:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12012:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11985:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11985:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11994:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11994:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11981:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11981:3:7"
																		},
																		"nativeSrc": "11981:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11981:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12006:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12006:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11977:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11977:3:7"
																},
																"nativeSrc": "11977:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11977:32:7"
															},
															"nativeSrc": "11974:119:7",
															"nodeType": "YulIf",
															"src": "11974:119:7"
														},
														{
															"nativeSrc": "12103:128:7",
															"nodeType": "YulBlock",
															"src": "12103:128:7",
															"statements": [
																{
																	"nativeSrc": "12118:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12118:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12132:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12132:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12122:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12122:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12147:74:7",
																	"nodeType": "YulAssignment",
																	"src": "12147:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12193:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12193:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12204:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12204:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12189:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12189:3:7"
																				},
																				"nativeSrc": "12189:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12189:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12213:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12213:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12157:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "12157:31:7"
																		},
																		"nativeSrc": "12157:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12157:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12147:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12147:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11887:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11934:9:7",
														"nodeType": "YulTypedName",
														"src": "11934:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11945:7:7",
														"nodeType": "YulTypedName",
														"src": "11945:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11957:6:7",
														"nodeType": "YulTypedName",
														"src": "11957:6:7",
														"type": ""
													}
												],
												"src": "11887:351:7"
											},
											{
												"body": {
													"nativeSrc": "12272:152:7",
													"nodeType": "YulBlock",
													"src": "12272:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12289:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12289:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12292:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12292:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12282:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12282:6:7"
																},
																"nativeSrc": "12282:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12282:88:7"
															},
															"nativeSrc": "12282:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12282:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12386:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12386:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12389:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12389:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12379:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12379:6:7"
																},
																"nativeSrc": "12379:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12379:15:7"
															},
															"nativeSrc": "12379:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12379:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12410:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12410:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12413:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12413:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12403:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12403:6:7"
																},
																"nativeSrc": "12403:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12403:15:7"
															},
															"nativeSrc": "12403:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12403:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12244:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12244:180:7"
											},
											{
												"body": {
													"nativeSrc": "12478:362:7",
													"nodeType": "YulBlock",
													"src": "12478:362:7",
													"statements": [
														{
															"nativeSrc": "12488:25:7",
															"nodeType": "YulAssignment",
															"src": "12488:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12511:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12511:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12493:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12493:17:7"
																},
																"nativeSrc": "12493:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12493:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12488:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12488:1:7"
																}
															]
														},
														{
															"nativeSrc": "12522:25:7",
															"nodeType": "YulAssignment",
															"src": "12522:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12545:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12545:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12527:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12527:17:7"
																},
																"nativeSrc": "12527:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12527:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12522:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12522:1:7"
																}
															]
														},
														{
															"nativeSrc": "12556:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12556:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12579:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12579:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12582:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12582:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12575:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12575:3:7"
																},
																"nativeSrc": "12575:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12575:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12560:11:7",
																	"nodeType": "YulTypedName",
																	"src": "12560:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12593:41:7",
															"nodeType": "YulAssignment",
															"src": "12593:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12622:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "12622:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12604:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12604:17:7"
																},
																"nativeSrc": "12604:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12604:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12593:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "12593:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12811:22:7",
																"nodeType": "YulBlock",
																"src": "12811:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12813:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12813:16:7"
																			},
																			"nativeSrc": "12813:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12813:18:7"
																		},
																		"nativeSrc": "12813:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12813:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12744:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12744:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12737:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "12737:6:7"
																				},
																				"nativeSrc": "12737:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12737:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12767:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12767:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12774:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "12774:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12783:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "12783:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12770:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "12770:3:7"
																						},
																						"nativeSrc": "12770:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "12770:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12764:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12764:2:7"
																				},
																				"nativeSrc": "12764:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12764:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12717:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "12717:2:7"
																		},
																		"nativeSrc": "12717:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12717:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12697:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12697:6:7"
																},
																"nativeSrc": "12697:113:7",
																"nodeType": "YulFunctionCall",
																"src": "12697:113:7"
															},
															"nativeSrc": "12694:139:7",
															"nodeType": "YulIf",
															"src": "12694:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12430:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12461:1:7",
														"nodeType": "YulTypedName",
														"src": "12461:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12464:1:7",
														"nodeType": "YulTypedName",
														"src": "12464:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12470:7:7",
														"nodeType": "YulTypedName",
														"src": "12470:7:7",
														"type": ""
													}
												],
												"src": "12430:410:7"
											},
											{
												"body": {
													"nativeSrc": "12952:56:7",
													"nodeType": "YulBlock",
													"src": "12952:56:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12974:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12974:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12982:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12982:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12970:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12970:3:7"
																		},
																		"nativeSrc": "12970:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12970:14:7"
																	},
																	{
																		"hexValue": "556e697377617056323a204b",
																		"kind": "string",
																		"nativeSrc": "12986:14:7",
																		"nodeType": "YulLiteral",
																		"src": "12986:14:7",
																		"type": "",
																		"value": "UniswapV2: K"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12963:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12963:6:7"
																},
																"nativeSrc": "12963:38:7",
																"nodeType": "YulFunctionCall",
																"src": "12963:38:7"
															},
															"nativeSrc": "12963:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "12963:38:7"
														}
													]
												},
												"name": "store_literal_in_memory_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af",
												"nativeSrc": "12846:162:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12944:6:7",
														"nodeType": "YulTypedName",
														"src": "12944:6:7",
														"type": ""
													}
												],
												"src": "12846:162:7"
											},
											{
												"body": {
													"nativeSrc": "13160:220:7",
													"nodeType": "YulBlock",
													"src": "13160:220:7",
													"statements": [
														{
															"nativeSrc": "13170:74:7",
															"nodeType": "YulAssignment",
															"src": "13170:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13236:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13236:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13241:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13241:2:7",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13177:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13177:58:7"
																},
																"nativeSrc": "13177:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13177:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13170:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13342:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13342:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af",
																	"nativeSrc": "13253:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13253:88:7"
																},
																"nativeSrc": "13253:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13253:93:7"
															},
															"nativeSrc": "13253:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13253:93:7"
														},
														{
															"nativeSrc": "13355:19:7",
															"nodeType": "YulAssignment",
															"src": "13355:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13366:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13371:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13371:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13362:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13362:3:7"
																},
																"nativeSrc": "13362:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13362:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13355:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13355:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13014:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13148:3:7",
														"nodeType": "YulTypedName",
														"src": "13148:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13156:3:7",
														"nodeType": "YulTypedName",
														"src": "13156:3:7",
														"type": ""
													}
												],
												"src": "13014:366:7"
											},
											{
												"body": {
													"nativeSrc": "13557:248:7",
													"nodeType": "YulBlock",
													"src": "13557:248:7",
													"statements": [
														{
															"nativeSrc": "13567:26:7",
															"nodeType": "YulAssignment",
															"src": "13567:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13579:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13579:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13590:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13590:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13575:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13575:3:7"
																},
																"nativeSrc": "13575:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13575:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13567:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13567:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13614:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13614:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13625:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13625:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13610:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13610:3:7"
																		},
																		"nativeSrc": "13610:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13610:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13633:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13633:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13639:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13639:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13629:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13629:3:7"
																		},
																		"nativeSrc": "13629:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13629:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13603:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13603:6:7"
																},
																"nativeSrc": "13603:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13603:47:7"
															},
															"nativeSrc": "13603:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13603:47:7"
														},
														{
															"nativeSrc": "13659:139:7",
															"nodeType": "YulAssignment",
															"src": "13659:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13793:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13793:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13667:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13667:124:7"
																},
																"nativeSrc": "13667:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13667:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13659:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13659:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13386:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13537:9:7",
														"nodeType": "YulTypedName",
														"src": "13537:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13552:4:7",
														"nodeType": "YulTypedName",
														"src": "13552:4:7",
														"type": ""
													}
												],
												"src": "13386:419:7"
											},
											{
												"body": {
													"nativeSrc": "13917:64:7",
													"nodeType": "YulBlock",
													"src": "13917:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13939:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13939:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13947:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13947:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13935:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13935:3:7"
																		},
																		"nativeSrc": "13935:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13935:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768206c6971756964697479",
																		"kind": "string",
																		"nativeSrc": "13951:22:7",
																		"nodeType": "YulLiteral",
																		"src": "13951:22:7",
																		"type": "",
																		"value": "Not enough liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13928:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13928:6:7"
																},
																"nativeSrc": "13928:46:7",
																"nodeType": "YulFunctionCall",
																"src": "13928:46:7"
															},
															"nativeSrc": "13928:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "13928:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
												"nativeSrc": "13811:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13909:6:7",
														"nodeType": "YulTypedName",
														"src": "13909:6:7",
														"type": ""
													}
												],
												"src": "13811:170:7"
											},
											{
												"body": {
													"nativeSrc": "14133:220:7",
													"nodeType": "YulBlock",
													"src": "14133:220:7",
													"statements": [
														{
															"nativeSrc": "14143:74:7",
															"nodeType": "YulAssignment",
															"src": "14143:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14209:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14209:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14214:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14150:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14150:58:7"
																},
																"nativeSrc": "14150:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14150:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14143:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14143:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14315:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14315:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																	"nativeSrc": "14226:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14226:88:7"
																},
																"nativeSrc": "14226:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14226:93:7"
															},
															"nativeSrc": "14226:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14226:93:7"
														},
														{
															"nativeSrc": "14328:19:7",
															"nodeType": "YulAssignment",
															"src": "14328:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14339:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14339:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14344:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14344:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14335:3:7"
																},
																"nativeSrc": "14335:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14335:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14328:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14328:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13987:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14121:3:7",
														"nodeType": "YulTypedName",
														"src": "14121:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14129:3:7",
														"nodeType": "YulTypedName",
														"src": "14129:3:7",
														"type": ""
													}
												],
												"src": "13987:366:7"
											},
											{
												"body": {
													"nativeSrc": "14530:248:7",
													"nodeType": "YulBlock",
													"src": "14530:248:7",
													"statements": [
														{
															"nativeSrc": "14540:26:7",
															"nodeType": "YulAssignment",
															"src": "14540:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14552:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14552:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14563:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14563:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14548:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14548:3:7"
																},
																"nativeSrc": "14548:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14548:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14540:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14540:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14587:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14587:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14598:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14598:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14583:3:7"
																		},
																		"nativeSrc": "14583:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14583:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14606:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14612:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14612:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14602:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14602:3:7"
																		},
																		"nativeSrc": "14602:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14602:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14576:6:7"
																},
																"nativeSrc": "14576:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14576:47:7"
															},
															"nativeSrc": "14576:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14576:47:7"
														},
														{
															"nativeSrc": "14632:139:7",
															"nodeType": "YulAssignment",
															"src": "14632:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14766:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14766:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14640:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14640:124:7"
																},
																"nativeSrc": "14640:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14640:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14632:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14632:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14359:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14510:9:7",
														"nodeType": "YulTypedName",
														"src": "14510:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14525:4:7",
														"nodeType": "YulTypedName",
														"src": "14525:4:7",
														"type": ""
													}
												],
												"src": "14359:419:7"
											},
											{
												"body": {
													"nativeSrc": "14812:152:7",
													"nodeType": "YulBlock",
													"src": "14812:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14829:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14829:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14832:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14832:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14822:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14822:6:7"
																},
																"nativeSrc": "14822:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14822:88:7"
															},
															"nativeSrc": "14822:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14822:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14926:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14926:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14929:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14929:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14919:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14919:6:7"
																},
																"nativeSrc": "14919:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14919:15:7"
															},
															"nativeSrc": "14919:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14919:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14950:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14950:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14953:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14953:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14943:6:7"
																},
																"nativeSrc": "14943:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14943:15:7"
															},
															"nativeSrc": "14943:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14943:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14784:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14784:180:7"
											},
											{
												"body": {
													"nativeSrc": "15012:143:7",
													"nodeType": "YulBlock",
													"src": "15012:143:7",
													"statements": [
														{
															"nativeSrc": "15022:25:7",
															"nodeType": "YulAssignment",
															"src": "15022:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15045:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15045:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15027:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15027:17:7"
																},
																"nativeSrc": "15027:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15027:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15022:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15022:1:7"
																}
															]
														},
														{
															"nativeSrc": "15056:25:7",
															"nodeType": "YulAssignment",
															"src": "15056:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15079:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15079:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15061:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15061:17:7"
																},
																"nativeSrc": "15061:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15061:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15056:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15056:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15103:22:7",
																"nodeType": "YulBlock",
																"src": "15103:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15105:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15105:16:7"
																			},
																			"nativeSrc": "15105:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15105:18:7"
																		},
																		"nativeSrc": "15105:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15105:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15100:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15100:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15093:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15093:6:7"
																},
																"nativeSrc": "15093:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15093:9:7"
															},
															"nativeSrc": "15090:35:7",
															"nodeType": "YulIf",
															"src": "15090:35:7"
														},
														{
															"nativeSrc": "15135:14:7",
															"nodeType": "YulAssignment",
															"src": "15135:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15144:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15144:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15147:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15147:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15140:3:7"
																},
																"nativeSrc": "15140:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15140:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15135:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15135:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14970:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15001:1:7",
														"nodeType": "YulTypedName",
														"src": "15001:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15004:1:7",
														"nodeType": "YulTypedName",
														"src": "15004:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15010:1:7",
														"nodeType": "YulTypedName",
														"src": "15010:1:7",
														"type": ""
													}
												],
												"src": "14970:185:7"
											},
											{
												"body": {
													"nativeSrc": "15206:178:7",
													"nodeType": "YulBlock",
													"src": "15206:178:7",
													"statements": [
														{
															"nativeSrc": "15216:25:7",
															"nodeType": "YulAssignment",
															"src": "15216:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15239:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15239:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint112",
																	"nativeSrc": "15221:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15221:17:7"
																},
																"nativeSrc": "15221:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15221:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15216:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15216:1:7"
																}
															]
														},
														{
															"nativeSrc": "15250:25:7",
															"nodeType": "YulAssignment",
															"src": "15250:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15273:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15273:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint112",
																	"nativeSrc": "15255:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15255:17:7"
																},
																"nativeSrc": "15255:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15255:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15250:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15250:1:7"
																}
															]
														},
														{
															"nativeSrc": "15284:17:7",
															"nodeType": "YulAssignment",
															"src": "15284:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15296:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15296:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15299:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15299:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15292:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15292:3:7"
																},
																"nativeSrc": "15292:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15292:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15284:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15284:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15355:22:7",
																"nodeType": "YulBlock",
																"src": "15355:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15357:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15357:16:7"
																			},
																			"nativeSrc": "15357:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15357:18:7"
																		},
																		"nativeSrc": "15357:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15357:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15317:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15317:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15323:30:7",
																		"nodeType": "YulLiteral",
																		"src": "15323:30:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15314:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15314:2:7"
																},
																"nativeSrc": "15314:40:7",
																"nodeType": "YulFunctionCall",
																"src": "15314:40:7"
															},
															"nativeSrc": "15311:66:7",
															"nodeType": "YulIf",
															"src": "15311:66:7"
														}
													]
												},
												"name": "checked_sub_t_uint112",
												"nativeSrc": "15161:223:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15192:1:7",
														"nodeType": "YulTypedName",
														"src": "15192:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15195:1:7",
														"nodeType": "YulTypedName",
														"src": "15195:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15201:4:7",
														"nodeType": "YulTypedName",
														"src": "15201:4:7",
														"type": ""
													}
												],
												"src": "15161:223:7"
											},
											{
												"body": {
													"nativeSrc": "15544:288:7",
													"nodeType": "YulBlock",
													"src": "15544:288:7",
													"statements": [
														{
															"nativeSrc": "15554:26:7",
															"nodeType": "YulAssignment",
															"src": "15554:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15566:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15566:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15577:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15577:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15562:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15562:3:7"
																},
																"nativeSrc": "15562:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15562:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15554:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15554:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15634:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15634:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15647:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15647:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15658:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15658:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15643:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15643:3:7"
																		},
																		"nativeSrc": "15643:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15643:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15590:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15590:43:7"
																},
																"nativeSrc": "15590:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15590:71:7"
															},
															"nativeSrc": "15590:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15590:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15715:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15715:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15728:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15728:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15739:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15739:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15724:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15724:3:7"
																		},
																		"nativeSrc": "15724:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15724:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15671:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15671:43:7"
																},
																"nativeSrc": "15671:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15671:72:7"
															},
															"nativeSrc": "15671:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15671:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15797:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15797:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15810:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15810:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15821:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15821:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15806:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15806:3:7"
																		},
																		"nativeSrc": "15806:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15806:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15753:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15753:43:7"
																},
																"nativeSrc": "15753:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15753:72:7"
															},
															"nativeSrc": "15753:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15753:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15390:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15500:9:7",
														"nodeType": "YulTypedName",
														"src": "15500:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15512:6:7",
														"nodeType": "YulTypedName",
														"src": "15512:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15520:6:7",
														"nodeType": "YulTypedName",
														"src": "15520:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15528:6:7",
														"nodeType": "YulTypedName",
														"src": "15528:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15539:4:7",
														"nodeType": "YulTypedName",
														"src": "15539:4:7",
														"type": ""
													}
												],
												"src": "15390:442:7"
											},
											{
												"body": {
													"nativeSrc": "15992:288:7",
													"nodeType": "YulBlock",
													"src": "15992:288:7",
													"statements": [
														{
															"nativeSrc": "16002:26:7",
															"nodeType": "YulAssignment",
															"src": "16002:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16014:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16014:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16025:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16025:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16010:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16010:3:7"
																},
																"nativeSrc": "16010:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16010:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16002:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16002:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16082:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16082:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16095:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16095:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16106:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16106:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16091:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16091:3:7"
																		},
																		"nativeSrc": "16091:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16091:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16038:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16038:43:7"
																},
																"nativeSrc": "16038:71:7",
																"nodeType": "YulFunctionCall",
																"src": "16038:71:7"
															},
															"nativeSrc": "16038:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "16038:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16163:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16163:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16176:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16176:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16187:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16187:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16172:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16172:3:7"
																		},
																		"nativeSrc": "16172:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16172:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16119:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16119:43:7"
																},
																"nativeSrc": "16119:72:7",
																"nodeType": "YulFunctionCall",
																"src": "16119:72:7"
															},
															"nativeSrc": "16119:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "16119:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16245:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16245:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16258:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16258:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16269:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16269:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16254:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16254:3:7"
																		},
																		"nativeSrc": "16254:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16254:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16201:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16201:43:7"
																},
																"nativeSrc": "16201:72:7",
																"nodeType": "YulFunctionCall",
																"src": "16201:72:7"
															},
															"nativeSrc": "16201:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "16201:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15838:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15948:9:7",
														"nodeType": "YulTypedName",
														"src": "15948:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15960:6:7",
														"nodeType": "YulTypedName",
														"src": "15960:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15968:6:7",
														"nodeType": "YulTypedName",
														"src": "15968:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15976:6:7",
														"nodeType": "YulTypedName",
														"src": "15976:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15987:4:7",
														"nodeType": "YulTypedName",
														"src": "15987:4:7",
														"type": ""
													}
												],
												"src": "15838:442:7"
											},
											{
												"body": {
													"nativeSrc": "16330:147:7",
													"nodeType": "YulBlock",
													"src": "16330:147:7",
													"statements": [
														{
															"nativeSrc": "16340:25:7",
															"nodeType": "YulAssignment",
															"src": "16340:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16363:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16363:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16345:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16345:17:7"
																},
																"nativeSrc": "16345:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16345:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16340:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16340:1:7"
																}
															]
														},
														{
															"nativeSrc": "16374:25:7",
															"nodeType": "YulAssignment",
															"src": "16374:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16397:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16397:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16379:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16379:17:7"
																},
																"nativeSrc": "16379:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16379:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16374:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16374:1:7"
																}
															]
														},
														{
															"nativeSrc": "16408:16:7",
															"nodeType": "YulAssignment",
															"src": "16408:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16419:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16419:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16422:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16422:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16415:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16415:3:7"
																},
																"nativeSrc": "16415:9:7",
																"nodeType": "YulFunctionCall",
																"src": "16415:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16408:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16408:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16448:22:7",
																"nodeType": "YulBlock",
																"src": "16448:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16450:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "16450:16:7"
																			},
																			"nativeSrc": "16450:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16450:18:7"
																		},
																		"nativeSrc": "16450:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16450:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16440:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16440:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16443:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16443:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16437:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16437:2:7"
																},
																"nativeSrc": "16437:10:7",
																"nodeType": "YulFunctionCall",
																"src": "16437:10:7"
															},
															"nativeSrc": "16434:36:7",
															"nodeType": "YulIf",
															"src": "16434:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16286:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16317:1:7",
														"nodeType": "YulTypedName",
														"src": "16317:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16320:1:7",
														"nodeType": "YulTypedName",
														"src": "16320:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16326:3:7",
														"nodeType": "YulTypedName",
														"src": "16326:3:7",
														"type": ""
													}
												],
												"src": "16286:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint112_to_t_uint112_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint112(value))\n    }\n\n    function abi_encode_tuple_t_uint112_t_uint112__to_t_uint112_t_uint112__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint112_to_t_uint112_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint112_to_t_uint112_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83(memPtr) {\n\n        mstore(add(memPtr, 0), \"UniswapV2: INSUFFICIENT_OUTPUT_A\")\n\n        mstore(add(memPtr, 32), \"MOUNT\")\n\n    }\n\n    function abi_encode_t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af(memPtr) {\n\n        mstore(add(memPtr, 0), \"UniswapV2: K\")\n\n    }\n\n    function abi_encode_t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint112(x, y) -> diff {\n        x := cleanup_t_uint112(x)\n        y := cleanup_t_uint112(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80636d9a640a116100955780639cd441da116100645780639cd441da146102b0578063a9059cbb146102e0578063d21220a714610310578063dd62ed3e1461032e576100fe565b80636d9a640a1461021557806370a082311461023157806395d89b41146102615780639c8f9f231461027f576100fe565b806318160ddd116100d157806318160ddd1461018d57806323b872dd146101ab578063313ce567146101db578063485cc955146101f9576100fe565b806306fdde03146101025780630902f1ac14610120578063095ea7b31461013f5780630dfe16811461016f575b5f80fd5b61010a61035e565b6040516101179190611859565b60405180910390f35b6101286103ee565b6040516101369291906118a1565b60405180910390f35b61015960048036038101906101549190611959565b610431565b60405161016691906119b1565b60405180910390f35b610177610453565b60405161018491906119d9565b60405180910390f35b610195610478565b6040516101a29190611a01565b60405180910390f35b6101c560048036038101906101c09190611a1a565b610481565b6040516101d291906119b1565b60405180910390f35b6101e36104af565b6040516101f09190611a85565b60405180910390f35b610213600480360381019061020e9190611a9e565b6104b7565b005b61022f600480360381019061022a9190611adc565b610622565b005b61024b60048036038101906102469190611b2c565b61099c565b6040516102589190611a01565b60405180910390f35b6102696109e1565b6040516102769190611859565b60405180910390f35b61029960048036038101906102949190611b57565b610a71565b6040516102a7929190611b82565b60405180910390f35b6102ca60048036038101906102c59190611ba9565b610d23565b6040516102d79190611a01565b60405180910390f35b6102fa60048036038101906102f59190611959565b610f53565b60405161030791906119b1565b60405180910390f35b610318610f75565b60405161032591906119d9565b60405180910390f35b61034860048036038101906103439190611a9e565b610f9a565b6040516103559190611a01565b60405180910390f35b60606003805461036d90611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461039990611c14565b80156103e45780601f106103bb576101008083540402835291602001916103e4565b820191905f5260205f20905b8154815290600101906020018083116103c757829003601f168201915b5050505050905090565b5f8060085f9054906101000a90046dffffffffffffffffffffffffffff1691506008600e9054906101000a90046dffffffffffffffffffffffffffff1690509091565b5f8061043b61101c565b9050610448818585611023565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f8061048b61101c565b9050610498858285611035565b6104a38585856110c7565b60019150509392505050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561055f57505f73ffffffffffffffffffffffffffffffffffffffff1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b61059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590611c8e565b60405180910390fd5b8160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61062a6111b7565b5f83118061063757505f82115b610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90611d1c565b60405180910390fd5b5f806106806103ee565b915091505f85111561072a5760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84876040518363ffffffff1660e01b81526004016106e8929190611d3a565b6020604051808303815f875af1158015610704573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107289190611d8b565b505b5f8411156107d05760075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b815260040161078e929190611d3a565b6020604051808303815f875af11580156107aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ce9190611d8b565b505b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161082b91906119d9565b602060405180830381865afa158015610846573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061086a9190611dca565b90505f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108c791906119d9565b602060405180830381865afa1580156108e2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109069190611dca565b9050826dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff166109349190611e22565b81836109409190611e22565b1015610981576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097890611ead565b60405180910390fd5b61098b82826111fd565b5050505061099761126a565b505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546109f090611c14565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1c90611c14565b8015610a675780601f10610a3e57610100808354040283529160200191610a67565b820191905f5260205f20905b815481529060010190602001808311610a4a57829003601f168201915b5050505050905090565b5f80610a7b6111b7565b82610a853361099c565b1015610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd90611f15565b60405180910390fd5b5f610acf610478565b90508060085f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1685610b099190611e22565b610b139190611f60565b9250806008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1685610b4e9190611e22565b610b589190611f60565b9150610b643385611274565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610bc0929190611d3a565b6020604051808303815f875af1158015610bdc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c009190611d8b565b5060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610c5d929190611d3a565b6020604051808303815f875af1158015610c79573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c9d9190611d8b565b50610d158360085f9054906101000a90046dffffffffffffffffffffffffffff16610cc89190611f90565b6dffffffffffffffffffffffffffff16836008600e9054906101000a90046dffffffffffffffffffffffffffff16610d009190611f90565b6dffffffffffffffffffffffffffff166111fd565b50610d1e61126a565b915091565b5f610d2c6111b7565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d8a93929190611fd1565b6020604051808303815f875af1158015610da6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dca9190611d8b565b5060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e2993929190611fd1565b6020604051808303815f875af1158015610e45573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e699190611d8b565b505f610e73610478565b03610e9357610e8c8284610e879190611e22565b6112f3565b9050610f31565b610f2e60085f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610eca610478565b85610ed59190611e22565b610edf9190611f60565b6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610f14610478565b85610f1f9190611e22565b610f299190611f60565b61136a565b90505b610f3b3382611382565b610f4583836111fd565b610f4d61126a565b92915050565b5f80610f5d61101c565b9050610f6a8185856110c7565b600191505092915050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6110308383836001611401565b505050565b5f6110408484610f9a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110c157818110156110b2578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110a993929190612006565b60405180910390fd5b6110c084848484035f611401565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611137575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161112e91906119d9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111a7575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161119e91906119d9565b60405180910390fd5b6111b28383836115d0565b505050565b6002600554036111f3576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600581905550565b8160085f6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550806008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055505050565b6001600581905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112e4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112db91906119d9565b60405180910390fd5b6112ef825f836115d0565b5050565b5f6003821115611358578190505f60016002846113109190611f60565b61131a919061203b565b90505b818110156113525780915060028182856113379190611f60565b611341919061203b565b61134b9190611f60565b905061131d565b50611365565b5f821461136457600190505b5b919050565b5f818310611378578161137a565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113f2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113e991906119d9565b60405180910390fd5b6113fd5f83836115d0565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611471575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161146891906119d9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114e1575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114d891906119d9565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156115ca578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115c19190611a01565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611620578060025f828254611614919061203b565b925050819055506116ee565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156116a9578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116a093929190612006565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611735578060025f828254039250508190555061177f565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117dc9190611a01565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61182b826117e9565b61183581856117f3565b9350611845818560208601611803565b61184e81611811565b840191505092915050565b5f6020820190508181035f8301526118718184611821565b905092915050565b5f6dffffffffffffffffffffffffffff82169050919050565b61189b81611879565b82525050565b5f6040820190506118b45f830185611892565b6118c16020830184611892565b9392505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118f5826118cc565b9050919050565b611905816118eb565b811461190f575f80fd5b50565b5f81359050611920816118fc565b92915050565b5f819050919050565b61193881611926565b8114611942575f80fd5b50565b5f813590506119538161192f565b92915050565b5f806040838503121561196f5761196e6118c8565b5b5f61197c85828601611912565b925050602061198d85828601611945565b9150509250929050565b5f8115159050919050565b6119ab81611997565b82525050565b5f6020820190506119c45f8301846119a2565b92915050565b6119d3816118eb565b82525050565b5f6020820190506119ec5f8301846119ca565b92915050565b6119fb81611926565b82525050565b5f602082019050611a145f8301846119f2565b92915050565b5f805f60608486031215611a3157611a306118c8565b5b5f611a3e86828701611912565b9350506020611a4f86828701611912565b9250506040611a6086828701611945565b9150509250925092565b5f60ff82169050919050565b611a7f81611a6a565b82525050565b5f602082019050611a985f830184611a76565b92915050565b5f8060408385031215611ab457611ab36118c8565b5b5f611ac185828601611912565b9250506020611ad285828601611912565b9150509250929050565b5f805f60608486031215611af357611af26118c8565b5b5f611b0086828701611945565b9350506020611b1186828701611945565b9250506040611b2286828701611912565b9150509250925092565b5f60208284031215611b4157611b406118c8565b5b5f611b4e84828501611912565b91505092915050565b5f60208284031215611b6c57611b6b6118c8565b5b5f611b7984828501611945565b91505092915050565b5f604082019050611b955f8301856119f2565b611ba260208301846119f2565b9392505050565b5f8060408385031215611bbf57611bbe6118c8565b5b5f611bcc85828601611945565b9250506020611bdd85828601611945565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c2b57607f821691505b602082108103611c3e57611c3d611be7565b5b50919050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f611c786013836117f3565b9150611c8382611c44565b602082019050919050565b5f6020820190508181035f830152611ca581611c6c565b9050919050565b7f556e697377617056323a20494e53554646494349454e545f4f55545055545f415f8201527f4d4f554e54000000000000000000000000000000000000000000000000000000602082015250565b5f611d066025836117f3565b9150611d1182611cac565b604082019050919050565b5f6020820190508181035f830152611d3381611cfa565b9050919050565b5f604082019050611d4d5f8301856119ca565b611d5a60208301846119f2565b9392505050565b611d6a81611997565b8114611d74575f80fd5b50565b5f81519050611d8581611d61565b92915050565b5f60208284031215611da057611d9f6118c8565b5b5f611dad84828501611d77565b91505092915050565b5f81519050611dc48161192f565b92915050565b5f60208284031215611ddf57611dde6118c8565b5b5f611dec84828501611db6565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e2c82611926565b9150611e3783611926565b9250828202611e4581611926565b91508282048414831517611e5c57611e5b611df5565b5b5092915050565b7f556e697377617056323a204b00000000000000000000000000000000000000005f82015250565b5f611e97600c836117f3565b9150611ea282611e63565b602082019050919050565b5f6020820190508181035f830152611ec481611e8b565b9050919050565b7f4e6f7420656e6f756768206c69717569646974790000000000000000000000005f82015250565b5f611eff6014836117f3565b9150611f0a82611ecb565b602082019050919050565b5f6020820190508181035f830152611f2c81611ef3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f6a82611926565b9150611f7583611926565b925082611f8557611f84611f33565b5b828204905092915050565b5f611f9a82611879565b9150611fa583611879565b925082820390506dffffffffffffffffffffffffffff811115611fcb57611fca611df5565b5b92915050565b5f606082019050611fe45f8301866119ca565b611ff160208301856119ca565b611ffe60408301846119f2565b949350505050565b5f6060820190506120195f8301866119ca565b61202660208301856119f2565b61203360408301846119f2565b949350505050565b5f61204582611926565b915061205083611926565b925082820190508082111561206857612067611df5565b5b9291505056fea26469706673582212203e4a10f6c1ffc13ed6390cc00c1723459835fff29386ec06c5ffba92c2815f3e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D9A640A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6D9A640A EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x27F JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x1F9 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x16F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP3 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1A1A JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH2 0x622 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36D SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x399 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x43B PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH2 0x448 DUP2 DUP6 DUP6 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x48B PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH2 0x498 DUP6 DUP3 DUP6 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x4A3 DUP6 DUP6 DUP6 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x55F JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x595 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x62A PUSH2 0x11B7 JUMP JUMPDEST PUSH0 DUP4 GT DUP1 PUSH2 0x637 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66D SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x680 PUSH2 0x3EE JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP6 GT ISZERO PUSH2 0x72A JUMPI PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E8 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x704 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP JUMPDEST PUSH0 DUP5 GT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP3 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x846 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86A SWAP2 SWAP1 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 POP DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x934 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST DUP2 DUP4 PUSH2 0x940 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST LT ISZERO PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP1 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98B DUP3 DUP3 PUSH2 0x11FD JUMP JUMPDEST POP POP POP POP PUSH2 0x997 PUSH2 0x126A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9F0 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA1C SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA3E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA7B PUSH2 0x11B7 JUMP JUMPDEST DUP3 PUSH2 0xA85 CALLER PUSH2 0x99C JUMP JUMPDEST LT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABD SWAP1 PUSH2 0x1F15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xACF PUSH2 0x478 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST SWAP2 POP PUSH2 0xB64 CALLER DUP6 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC0 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBDC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5D SWAP3 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC79 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP PUSH2 0xD15 DUP4 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD00 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11FD JUMP JUMPDEST POP PUSH2 0xD1E PUSH2 0x126A JUMP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0xD2C PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE45 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE69 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST POP PUSH0 PUSH2 0xE73 PUSH2 0x478 JUMP JUMPDEST SUB PUSH2 0xE93 JUMPI PUSH2 0xE8C DUP3 DUP5 PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0x12F3 JUMP JUMPDEST SWAP1 POP PUSH2 0xF31 JUMP JUMPDEST PUSH2 0xF2E PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xECA PUSH2 0x478 JUMP JUMPDEST DUP6 PUSH2 0xED5 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0xEDF SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF14 PUSH2 0x478 JUMP JUMPDEST DUP6 PUSH2 0xF1F SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0xF29 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x136A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xF3B CALLER DUP3 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0xF45 DUP4 DUP4 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0xF4D PUSH2 0x126A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF5D PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH2 0xF6A DUP2 DUP6 DUP6 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1030 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1401 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1040 DUP5 DUP5 PUSH2 0xF9A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x10C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10B2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1401 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1137 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112E SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119E SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B2 DUP4 DUP4 DUP4 PUSH2 0x15D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x11F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DB SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12EF DUP3 PUSH0 DUP4 PUSH2 0x15D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1358 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1310 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x131A SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1352 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x1341 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x134B SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST SWAP1 POP PUSH2 0x131D JUMP JUMPDEST POP PUSH2 0x1365 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1364 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1378 JUMPI DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13F2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E9 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13FD PUSH0 DUP4 DUP4 PUSH2 0x15D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1471 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15CA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1620 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16EE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16A9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1735 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x177F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x182B DUP3 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0x1835 DUP2 DUP6 PUSH2 0x17F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1845 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x184E DUP2 PUSH2 0x1811 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1871 DUP2 DUP5 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189B DUP2 PUSH2 0x1879 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18B4 PUSH0 DUP4 ADD DUP6 PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x18C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1892 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18F5 DUP3 PUSH2 0x18CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1905 DUP2 PUSH2 0x18EB JUMP JUMPDEST DUP2 EQ PUSH2 0x190F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1920 DUP2 PUSH2 0x18FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1938 DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP2 EQ PUSH2 0x1942 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1953 DUP2 PUSH2 0x192F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x196F JUMPI PUSH2 0x196E PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197C DUP6 DUP3 DUP7 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x198D DUP6 DUP3 DUP7 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19AB DUP2 PUSH2 0x1997 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x19A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D3 DUP2 PUSH2 0x18EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19EC PUSH0 DUP4 ADD DUP5 PUSH2 0x19CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19FB DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A14 PUSH0 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A31 JUMPI PUSH2 0x1A30 PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A3E DUP7 DUP3 DUP8 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A4F DUP7 DUP3 DUP8 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A60 DUP7 DUP3 DUP8 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7F DUP2 PUSH2 0x1A6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A98 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB4 JUMPI PUSH2 0x1AB3 PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AD2 DUP6 DUP3 DUP7 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AF3 JUMPI PUSH2 0x1AF2 PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B00 DUP7 DUP3 DUP8 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B11 DUP7 DUP3 DUP8 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B22 DUP7 DUP3 DUP8 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4E DUP5 DUP3 DUP6 ADD PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B6C JUMPI PUSH2 0x1B6B PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B79 DUP5 DUP3 DUP6 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B95 PUSH0 DUP4 ADD DUP6 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1BA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BBF JUMPI PUSH2 0x1BBE PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BCC DUP6 DUP3 DUP7 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BDD DUP6 DUP3 DUP7 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C3E JUMPI PUSH2 0x1C3D PUSH2 0x1BE7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C78 PUSH1 0x13 DUP4 PUSH2 0x17F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C83 DUP3 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CA5 DUP2 PUSH2 0x1C6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E697377617056323A20494E53554646494349454E545F4F55545055545F41 PUSH0 DUP3 ADD MSTORE PUSH32 0x4D4F554E54000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D06 PUSH1 0x25 DUP4 PUSH2 0x17F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D11 DUP3 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D33 DUP2 PUSH2 0x1CFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D4D PUSH0 DUP4 ADD DUP6 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x1D5A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1D6A DUP2 PUSH2 0x1997 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D74 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D85 DUP2 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA0 JUMPI PUSH2 0x1D9F PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DAD DUP5 DUP3 DUP6 ADD PUSH2 0x1D77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DC4 DUP2 PUSH2 0x192F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x18C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DEC DUP5 DUP3 DUP6 ADD PUSH2 0x1DB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E2C DUP3 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E37 DUP4 PUSH2 0x1926 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E45 DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E5C JUMPI PUSH2 0x1E5B PUSH2 0x1DF5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E697377617056323A204B0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E97 PUSH1 0xC DUP4 PUSH2 0x17F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA2 DUP3 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EC4 DUP2 PUSH2 0x1E8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768206C6971756964697479000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EFF PUSH1 0x14 DUP4 PUSH2 0x17F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0A DUP3 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F2C DUP2 PUSH2 0x1EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F6A DUP3 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F75 DUP4 PUSH2 0x1926 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F85 JUMPI PUSH2 0x1F84 PUSH2 0x1F33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9A DUP3 PUSH2 0x1879 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA5 DUP4 PUSH2 0x1879 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCB JUMPI PUSH2 0x1FCA PUSH2 0x1DF5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FE4 PUSH0 DUP4 ADD DUP7 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x1FF1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x1FFE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2019 PUSH0 DUP4 ADD DUP7 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x2026 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x2033 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2045 DUP3 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP PUSH2 0x2050 DUP4 PUSH2 0x1926 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2068 JUMPI PUSH2 0x2067 PUSH2 0x1DF5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY BLOBBASEFEE LT 0xF6 0xC1 SELFDESTRUCT 0xC1 RETURNDATACOPY 0xD6 CODECOPY 0xC 0xC0 0xC OR 0x23 GASLIMIT SWAP9 CALLDATALOAD SELFDESTRUCT CALLCODE SWAP4 DUP7 0xEC MOD 0xC5 SELFDESTRUCT 0xBA SWAP3 0xC2 DUP2 PUSH0 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "231:3040:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:149:6;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4293:186:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;286:21:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;462:208:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2065:645;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1449:565:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;864:541;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;313:21:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;676:149:6:-;720:17;739;780:8;;;;;;;;;;;768:20;;810:8;;;;;;;;;;;798:20;;676:149;;:::o;4293:186:1:-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;286:21:6:-;;;;;;;;;;;;;:::o;3144:97:1:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;462:208:6:-;561:1;543:20;;:6;;;;;;;;;;;:20;;;:44;;;;;585:1;567:20;;:6;;;;;;;;;;;:20;;;543:44;535:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;630:7;621:6;;:16;;;;;;;;;;;;;;;;;;656:7;647:6;;:16;;;;;;;;;;;;;;;;;;462:208;;:::o;2065:645::-;2356:21:5;:19;:21::i;:::-;2178:1:6::1;2165:10;:14;:32;;;;2196:1;2183:10;:14;2165:32;2157:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2250:17;2269::::0;2290:13:::1;:11;:13::i;:::-;2249:54;;;;2331:1;2318:10;:14;2314:59;;;2341:6;;;;;;;;;;;2334:23;;;2358:2;2362:10;2334:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2314:59;2400:1;2387:10;:14;2383:59;;;2410:6;;;;;;;;;;;2403:23;;;2427:2;2431:10;2403:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2383:59;2453:13;2476:6;;;;;;;;;;;2469:24;;;2502:4;2469:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2453:55;;2518:13;2541:6;;;;;;;;;;;2534:24;;;2567:4;2534:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2518:55;;2638:9;2633:15;;2620:9;2615:15;;:33;;;;:::i;:::-;2603:8;2592;:19;;;;:::i;:::-;:56;;2584:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2676:27;2684:8;2694;2676:7;:27::i;:::-;2147:563;;;;2398:20:5::0;:18;:20::i;:::-;2065:645:6;;;:::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;1449:565:6:-;1521:12;1535;2356:21:5;:19;:21::i;:::-;1592:9:6::1;1567:21;1577:10;1567:9;:21::i;:::-;:34;;1559:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1637:17;1657:13;:11;:13::i;:::-;1637:33;;1715:12;1703:8;;;;;;;;;;;1691:20;;:9;:20;;;;:::i;:::-;1690:37;;;;:::i;:::-;1680:47;;1772:12;1760:8;;;;;;;;;;;1748:20;;:9;:20;;;;:::i;:::-;1747:37;;;;:::i;:::-;1737:47;;1795:28;1801:10;1813:9;1795:5;:28::i;:::-;1840:6;;;;;;;;;;;1833:23;;;1857:10;1869:7;1833:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1894:6;;;;;;;;;;;1887:23;;;1911:10;1923:7;1887:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1942:65;1969:7;1950:8;;;;;;;;;;;:27;;;;:::i;:::-;1942:65;;1998:7;1979:8;;;;;;;;;;;:27;;;;:::i;:::-;1942:65;;:7;:65::i;:::-;1549:465;2398:20:5::0;:18;:20::i;:::-;1449:565:6;;;:::o;864:541::-;945:14;2356:21:5;:19;:21::i;:::-;978:6:6::1;;;;;;;;;;;971:27;;;999:10;1019:4;1026:7;971:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1051:6;;;;;;;;;;;1044:27;;;1072:10;1092:4;1099:7;1044:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1139:1;1122:13;:11;:13::i;:::-;:18:::0;1118:206:::1;;1168:23;1183:7;1173;:17;;;;:::i;:::-;1168:4;:23::i;:::-;1156:35;;1118:206;;;1234:79;1266:8;;;;;;;;;;;1238:36;;1249:13;:11;:13::i;:::-;1239:7;:23;;;;:::i;:::-;1238:36;;;;:::i;:::-;1304:8;;;;;;;;;;;1276:36;;1287:13;:11;:13::i;:::-;1277:7;:23;;;;:::i;:::-;1276:36;;;;:::i;:::-;1234:3;:79::i;:::-;1222:91;;1118:206;1334:28;1340:10;1352:9;1334:5;:28::i;:::-;1373:25;1381:7;1390;1373;:25::i;:::-;2398:20:5::0;:18;:20::i;:::-;864:541:6;;;;:::o;3610:178:1:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;313:21:6:-;;;;;;;;;;;;;:::o;3846:140:1:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;2431:307:5:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;;;;2431:307::o;2716:138:6:-;2800:8;2781;;:28;;;;;;;;;;;;;;;;;;2838:8;2819;;:28;;;;;;;;;;;;;;;;;;2716:138;;:::o;2744:208:5:-;1713:1;2924:7;:21;;;;2744:208::o;8247:206:1:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2860:309:6:-;2904:6;2930:1;2926;:5;2922:223;;;2951:1;2947:5;;2966:6;2983:1;2979;2975;:5;;;;:::i;:::-;:9;;;;:::i;:::-;2966:18;;2998:89;3009:1;3005;:5;2998:89;;;3034:1;3030:5;;3071:1;3066;3062;3058;:5;;;;:::i;:::-;:9;;;;:::i;:::-;3057:15;;;;:::i;:::-;3053:19;;2998:89;;;2933:164;2922:223;;;3112:1;3107;:6;3103:42;;3133:1;3129:5;;3103:42;2922:223;2860:309;;;:::o;3175:94::-;3226:4;3253:1;3249;:5;:13;;3261:1;3249:13;;;3257:1;3249:13;3242:20;;3175:94;;;;:::o;7721:208:1:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:114::-;1279:7;1319:30;1312:5;1308:42;1297:53;;1242:114;;;:::o;1362:118::-;1449:24;1467:5;1449:24;:::i;:::-;1444:3;1437:37;1362:118;;:::o;1486:332::-;1607:4;1645:2;1634:9;1630:18;1622:26;;1658:71;1726:1;1715:9;1711:17;1702:6;1658:71;:::i;:::-;1739:72;1807:2;1796:9;1792:18;1783:6;1739:72;:::i;:::-;1486:332;;;;;:::o;1905:117::-;2014:1;2011;2004:12;2151:126;2188:7;2228:42;2221:5;2217:54;2206:65;;2151:126;;;:::o;2283:96::-;2320:7;2349:24;2367:5;2349:24;:::i;:::-;2338:35;;2283:96;;;:::o;2385:122::-;2458:24;2476:5;2458:24;:::i;:::-;2451:5;2448:35;2438:63;;2497:1;2494;2487:12;2438:63;2385:122;:::o;2513:139::-;2559:5;2597:6;2584:20;2575:29;;2613:33;2640:5;2613:33;:::i;:::-;2513:139;;;;:::o;2658:77::-;2695:7;2724:5;2713:16;;2658:77;;;:::o;2741:122::-;2814:24;2832:5;2814:24;:::i;:::-;2807:5;2804:35;2794:63;;2853:1;2850;2843:12;2794:63;2741:122;:::o;2869:139::-;2915:5;2953:6;2940:20;2931:29;;2969:33;2996:5;2969:33;:::i;:::-;2869:139;;;;:::o;3014:474::-;3082:6;3090;3139:2;3127:9;3118:7;3114:23;3110:32;3107:119;;;3145:79;;:::i;:::-;3107:119;3265:1;3290:53;3335:7;3326:6;3315:9;3311:22;3290:53;:::i;:::-;3280:63;;3236:117;3392:2;3418:53;3463:7;3454:6;3443:9;3439:22;3418:53;:::i;:::-;3408:63;;3363:118;3014:474;;;;;:::o;3494:90::-;3528:7;3571:5;3564:13;3557:21;3546:32;;3494:90;;;:::o;3590:109::-;3671:21;3686:5;3671:21;:::i;:::-;3666:3;3659:34;3590:109;;:::o;3705:210::-;3792:4;3830:2;3819:9;3815:18;3807:26;;3843:65;3905:1;3894:9;3890:17;3881:6;3843:65;:::i;:::-;3705:210;;;;:::o;3921:118::-;4008:24;4026:5;4008:24;:::i;:::-;4003:3;3996:37;3921:118;;:::o;4045:222::-;4138:4;4176:2;4165:9;4161:18;4153:26;;4189:71;4257:1;4246:9;4242:17;4233:6;4189:71;:::i;:::-;4045:222;;;;:::o;4273:118::-;4360:24;4378:5;4360:24;:::i;:::-;4355:3;4348:37;4273:118;;:::o;4397:222::-;4490:4;4528:2;4517:9;4513:18;4505:26;;4541:71;4609:1;4598:9;4594:17;4585:6;4541:71;:::i;:::-;4397:222;;;;:::o;4625:619::-;4702:6;4710;4718;4767:2;4755:9;4746:7;4742:23;4738:32;4735:119;;;4773:79;;:::i;:::-;4735:119;4893:1;4918:53;4963:7;4954:6;4943:9;4939:22;4918:53;:::i;:::-;4908:63;;4864:117;5020:2;5046:53;5091:7;5082:6;5071:9;5067:22;5046:53;:::i;:::-;5036:63;;4991:118;5148:2;5174:53;5219:7;5210:6;5199:9;5195:22;5174:53;:::i;:::-;5164:63;;5119:118;4625:619;;;;;:::o;5250:86::-;5285:7;5325:4;5318:5;5314:16;5303:27;;5250:86;;;:::o;5342:112::-;5425:22;5441:5;5425:22;:::i;:::-;5420:3;5413:35;5342:112;;:::o;5460:214::-;5549:4;5587:2;5576:9;5572:18;5564:26;;5600:67;5664:1;5653:9;5649:17;5640:6;5600:67;:::i;:::-;5460:214;;;;:::o;5680:474::-;5748:6;5756;5805:2;5793:9;5784:7;5780:23;5776:32;5773:119;;;5811:79;;:::i;:::-;5773:119;5931:1;5956:53;6001:7;5992:6;5981:9;5977:22;5956:53;:::i;:::-;5946:63;;5902:117;6058:2;6084:53;6129:7;6120:6;6109:9;6105:22;6084:53;:::i;:::-;6074:63;;6029:118;5680:474;;;;;:::o;6160:619::-;6237:6;6245;6253;6302:2;6290:9;6281:7;6277:23;6273:32;6270:119;;;6308:79;;:::i;:::-;6270:119;6428:1;6453:53;6498:7;6489:6;6478:9;6474:22;6453:53;:::i;:::-;6443:63;;6399:117;6555:2;6581:53;6626:7;6617:6;6606:9;6602:22;6581:53;:::i;:::-;6571:63;;6526:118;6683:2;6709:53;6754:7;6745:6;6734:9;6730:22;6709:53;:::i;:::-;6699:63;;6654:118;6160:619;;;;;:::o;6785:329::-;6844:6;6893:2;6881:9;6872:7;6868:23;6864:32;6861:119;;;6899:79;;:::i;:::-;6861:119;7019:1;7044:53;7089:7;7080:6;7069:9;7065:22;7044:53;:::i;:::-;7034:63;;6990:117;6785:329;;;;:::o;7120:::-;7179:6;7228:2;7216:9;7207:7;7203:23;7199:32;7196:119;;;7234:79;;:::i;:::-;7196:119;7354:1;7379:53;7424:7;7415:6;7404:9;7400:22;7379:53;:::i;:::-;7369:63;;7325:117;7120:329;;;;:::o;7455:332::-;7576:4;7614:2;7603:9;7599:18;7591:26;;7627:71;7695:1;7684:9;7680:17;7671:6;7627:71;:::i;:::-;7708:72;7776:2;7765:9;7761:18;7752:6;7708:72;:::i;:::-;7455:332;;;;;:::o;7793:474::-;7861:6;7869;7918:2;7906:9;7897:7;7893:23;7889:32;7886:119;;;7924:79;;:::i;:::-;7886:119;8044:1;8069:53;8114:7;8105:6;8094:9;8090:22;8069:53;:::i;:::-;8059:63;;8015:117;8171:2;8197:53;8242:7;8233:6;8222:9;8218:22;8197:53;:::i;:::-;8187:63;;8142:118;7793:474;;;;;:::o;8273:180::-;8321:77;8318:1;8311:88;8418:4;8415:1;8408:15;8442:4;8439:1;8432:15;8459:320;8503:6;8540:1;8534:4;8530:12;8520:22;;8587:1;8581:4;8577:12;8608:18;8598:81;;8664:4;8656:6;8652:17;8642:27;;8598:81;8726:2;8718:6;8715:14;8695:18;8692:38;8689:84;;8745:18;;:::i;:::-;8689:84;8510:269;8459:320;;;:::o;8785:169::-;8925:21;8921:1;8913:6;8909:14;8902:45;8785:169;:::o;8960:366::-;9102:3;9123:67;9187:2;9182:3;9123:67;:::i;:::-;9116:74;;9199:93;9288:3;9199:93;:::i;:::-;9317:2;9312:3;9308:12;9301:19;;8960:366;;;:::o;9332:419::-;9498:4;9536:2;9525:9;9521:18;9513:26;;9585:9;9579:4;9575:20;9571:1;9560:9;9556:17;9549:47;9613:131;9739:4;9613:131;:::i;:::-;9605:139;;9332:419;;;:::o;9757:224::-;9897:34;9893:1;9885:6;9881:14;9874:58;9966:7;9961:2;9953:6;9949:15;9942:32;9757:224;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:332::-;10905:4;10943:2;10932:9;10928:18;10920:26;;10956:71;11024:1;11013:9;11009:17;11000:6;10956:71;:::i;:::-;11037:72;11105:2;11094:9;11090:18;11081:6;11037:72;:::i;:::-;10784:332;;;;;:::o;11122:116::-;11192:21;11207:5;11192:21;:::i;:::-;11185:5;11182:32;11172:60;;11228:1;11225;11218:12;11172:60;11122:116;:::o;11244:137::-;11298:5;11329:6;11323:13;11314:22;;11345:30;11369:5;11345:30;:::i;:::-;11244:137;;;;:::o;11387:345::-;11454:6;11503:2;11491:9;11482:7;11478:23;11474:32;11471:119;;;11509:79;;:::i;:::-;11471:119;11629:1;11654:61;11707:7;11698:6;11687:9;11683:22;11654:61;:::i;:::-;11644:71;;11600:125;11387:345;;;;:::o;11738:143::-;11795:5;11826:6;11820:13;11811:22;;11842:33;11869:5;11842:33;:::i;:::-;11738:143;;;;:::o;11887:351::-;11957:6;12006:2;11994:9;11985:7;11981:23;11977:32;11974:119;;;12012:79;;:::i;:::-;11974:119;12132:1;12157:64;12213:7;12204:6;12193:9;12189:22;12157:64;:::i;:::-;12147:74;;12103:128;11887:351;;;;:::o;12244:180::-;12292:77;12289:1;12282:88;12389:4;12386:1;12379:15;12413:4;12410:1;12403:15;12430:410;12470:7;12493:20;12511:1;12493:20;:::i;:::-;12488:25;;12527:20;12545:1;12527:20;:::i;:::-;12522:25;;12582:1;12579;12575:9;12604:30;12622:11;12604:30;:::i;:::-;12593:41;;12783:1;12774:7;12770:15;12767:1;12764:22;12744:1;12737:9;12717:83;12694:139;;12813:18;;:::i;:::-;12694:139;12478:362;12430:410;;;;:::o;12846:162::-;12986:14;12982:1;12974:6;12970:14;12963:38;12846:162;:::o;13014:366::-;13156:3;13177:67;13241:2;13236:3;13177:67;:::i;:::-;13170:74;;13253:93;13342:3;13253:93;:::i;:::-;13371:2;13366:3;13362:12;13355:19;;13014:366;;;:::o;13386:419::-;13552:4;13590:2;13579:9;13575:18;13567:26;;13639:9;13633:4;13629:20;13625:1;13614:9;13610:17;13603:47;13667:131;13793:4;13667:131;:::i;:::-;13659:139;;13386:419;;;:::o;13811:170::-;13951:22;13947:1;13939:6;13935:14;13928:46;13811:170;:::o;13987:366::-;14129:3;14150:67;14214:2;14209:3;14150:67;:::i;:::-;14143:74;;14226:93;14315:3;14226:93;:::i;:::-;14344:2;14339:3;14335:12;14328:19;;13987:366;;;:::o;14359:419::-;14525:4;14563:2;14552:9;14548:18;14540:26;;14612:9;14606:4;14602:20;14598:1;14587:9;14583:17;14576:47;14640:131;14766:4;14640:131;:::i;:::-;14632:139;;14359:419;;;:::o;14784:180::-;14832:77;14829:1;14822:88;14929:4;14926:1;14919:15;14953:4;14950:1;14943:15;14970:185;15010:1;15027:20;15045:1;15027:20;:::i;:::-;15022:25;;15061:20;15079:1;15061:20;:::i;:::-;15056:25;;15100:1;15090:35;;15105:18;;:::i;:::-;15090:35;15147:1;15144;15140:9;15135:14;;14970:185;;;;:::o;15161:223::-;15201:4;15221:20;15239:1;15221:20;:::i;:::-;15216:25;;15255:20;15273:1;15255:20;:::i;:::-;15250:25;;15299:1;15296;15292:9;15284:17;;15323:30;15317:4;15314:40;15311:66;;;15357:18;;:::i;:::-;15311:66;15161:223;;;;:::o;15390:442::-;15539:4;15577:2;15566:9;15562:18;15554:26;;15590:71;15658:1;15647:9;15643:17;15634:6;15590:71;:::i;:::-;15671:72;15739:2;15728:9;15724:18;15715:6;15671:72;:::i;:::-;15753;15821:2;15810:9;15806:18;15797:6;15753:72;:::i;:::-;15390:442;;;;;;:::o;15838:::-;15987:4;16025:2;16014:9;16010:18;16002:26;;16038:71;16106:1;16095:9;16091:17;16082:6;16038:71;:::i;:::-;16119:72;16187:2;16176:9;16172:18;16163:6;16119:72;:::i;:::-;16201;16269:2;16258:9;16254:18;16245:6;16201:72;:::i;:::-;15838:442;;;;;;:::o;16286:191::-;16326:3;16345:20;16363:1;16345:20;:::i;:::-;16340:25;;16379:20;16397:1;16379:20;:::i;:::-;16374:25;;16422:1;16419;16415:9;16408:16;;16443:3;16440:1;16437:10;16434:36;;;16450:18;;:::i;:::-;16434:36;16286:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1671200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "405",
								"getReserves()": "infinite",
								"initialize(address,address)": "infinite",
								"name()": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"swap(uint256,uint256,address)": "infinite",
								"symbol()": "infinite",
								"token0()": "2598",
								"token1()": "2574",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_update(uint256,uint256)": "48596",
								"min(uint256,uint256)": "63",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 3271,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 401,
									"end": 456,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 401,
									"end": 456,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 401,
									"end": 456,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 401,
									"end": 456,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 401,
									"end": 456,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 401,
									"end": 456,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 456,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 401,
									"end": 456,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 401,
									"end": 456,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 401,
									"end": 456,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 401,
									"end": 456,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "556E6973776170205632204C5020546F6B656E00000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "554E492D56320000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 3271,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e4a10f6c1ffc13ed6390cc00c1723459835fff29386ec06c5ffba92c2815f3e64736f6c634300081a0033",
									".code": [
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "6D9A640A"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "9CD441DA"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "9CD441DA"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "D21220A7"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "6D9A640A"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "9C8F9F23"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "485CC955"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "902F1AC"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "DFE1681"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 3271,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 676,
											"end": 825,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 676,
											"end": 825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 676,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 676,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 676,
											"end": 825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 825,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 676,
											"end": 825,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 676,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 676,
											"end": 825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 825,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 286,
											"end": 307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 286,
											"end": 307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 462,
											"end": 670,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 462,
											"end": 670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 462,
											"end": 670,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 670,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 462,
											"end": 670,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 462,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 462,
											"end": 670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 462,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 462,
											"end": 670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2065,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2065,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1449,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1449,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1449,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 864,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 864,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 864,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 313,
											"end": 334,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 313,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 313,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 825,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 676,
											"end": 825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 720,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 756,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 780,
											"end": 788,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 780,
											"end": 788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 780,
											"end": 788,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 780,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 780,
											"end": 788,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 780,
											"end": 788,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 780,
											"end": 788,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 780,
											"end": 788,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 780,
											"end": 788,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 768,
											"end": 788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 768,
											"end": 788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 810,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 810,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 810,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 810,
											"end": 818,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 810,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 810,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 810,
											"end": 818,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 810,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 810,
											"end": 818,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 810,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 818,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 798,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 818,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 676,
											"end": 825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 462,
											"end": 670,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 462,
											"end": 670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 563,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 543,
											"end": 563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 543,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 543,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 549,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 543,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 543,
											"end": 549,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 543,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 543,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 543,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 543,
											"end": 563,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 543,
											"end": 563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 543,
											"end": 563,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 543,
											"end": 587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 587,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 543,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 543,
											"end": 587,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 585,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 567,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 573,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 567,
											"end": 573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 567,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 567,
											"end": 587,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 543,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 543,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 535,
											"end": 611,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 535,
											"end": 611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 535,
											"end": 611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 535,
											"end": 611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 535,
											"end": 611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 535,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 535,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 535,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 630,
											"end": 637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 621,
											"end": 637,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 621,
											"end": 637,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 621,
											"end": 637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 621,
											"end": 637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 647,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 647,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 647,
											"end": 663,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 647,
											"end": 663,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 647,
											"end": 663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 647,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2175,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2179,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2165,
											"end": 2197,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2197,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2193,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2197,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2165,
											"end": 2197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2157,
											"end": 2239,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2157,
											"end": 2239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2290,
											"end": 2301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2290,
											"end": 2303,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2290,
											"end": 2303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2303,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2303,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2331,
											"end": 2332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2328,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2332,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2314,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2341,
											"end": 2347,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2334,
											"end": 2357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2358,
											"end": 2360,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2372,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2334,
											"end": 2373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2373,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2334,
											"end": 2373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2314,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2400,
											"end": 2401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2397,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2401,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2383,
											"end": 2442,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2383,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2383,
											"end": 2442,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2426,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2427,
											"end": 2429,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2403,
											"end": 2442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2442,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2403,
											"end": 2442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2383,
											"end": 2442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2383,
											"end": 2442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2476,
											"end": 2482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2469,
											"end": 2493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2502,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2469,
											"end": 2508,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2508,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2469,
											"end": 2508,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2469,
											"end": 2508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2558,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2567,
											"end": 2571,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2534,
											"end": 2573,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2573,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2534,
											"end": 2573,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2534,
											"end": 2573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2573,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2647,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2633,
											"end": 2648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2615,
											"end": 2630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2615,
											"end": 2648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2615,
											"end": 2648,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2615,
											"end": 2648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2592,
											"end": 2611,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2592,
											"end": 2611,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2592,
											"end": 2611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2648,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2648,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2584,
											"end": 2665,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2584,
											"end": 2665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2684,
											"end": 2692,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2702,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2676,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2676,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1601,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1577,
											"end": 1587,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1567,
											"end": 1588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1567,
											"end": 1588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1601,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1601,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1559,
											"end": 1626,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1559,
											"end": 1626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1657,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1657,
											"end": 1670,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 1670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1657,
											"end": 1670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1670,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1727,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1703,
											"end": 1711,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1700,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1691,
											"end": 1711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1690,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1690,
											"end": 1727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1690,
											"end": 1727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1727,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1768,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1757,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1748,
											"end": 1768,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1748,
											"end": 1768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1747,
											"end": 1784,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1747,
											"end": 1784,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1747,
											"end": 1784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1784,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1801,
											"end": 1811,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1795,
											"end": 1823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1795,
											"end": 1823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1857,
											"end": 1867,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1876,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1833,
											"end": 1877,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1877,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1833,
											"end": 1877,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1900,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1910,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1911,
											"end": 1921,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1930,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1887,
											"end": 1931,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1887,
											"end": 1931,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1969,
											"end": 1976,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1950,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1950,
											"end": 1977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1950,
											"end": 1977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1942,
											"end": 2007,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2005,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1979,
											"end": 2006,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1979,
											"end": 2006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1979,
											"end": 2006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1942,
											"end": 2007,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1942,
											"end": 2007,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2007,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1942,
											"end": 2007,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2014,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 2014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 945,
											"end": 959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 998,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 999,
											"end": 1009,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1023,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1033,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 971,
											"end": 1034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 971,
											"end": 1034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1034,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1071,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1072,
											"end": 1082,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1096,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1099,
											"end": 1106,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1044,
											"end": 1107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1044,
											"end": 1107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1107,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1122,
											"end": 1133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1122,
											"end": 1135,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1122,
											"end": 1135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1122,
											"end": 1135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1122,
											"end": 1140,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1118,
											"end": 1324,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1183,
											"end": 1190,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1180,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1173,
											"end": 1190,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1173,
											"end": 1190,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1173,
											"end": 1190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1168,
											"end": 1191,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1168,
											"end": 1191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1118,
											"end": 1324,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1118,
											"end": 1324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1266,
											"end": 1274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1238,
											"end": 1274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1249,
											"end": 1260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1249,
											"end": 1262,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1249,
											"end": 1262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1239,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1239,
											"end": 1262,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1239,
											"end": 1262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1238,
											"end": 1274,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1238,
											"end": 1274,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1274,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1238,
											"end": 1274,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1312,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1287,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1287,
											"end": 1300,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1287,
											"end": 1300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1284,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1277,
											"end": 1300,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1277,
											"end": 1300,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1277,
											"end": 1300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1276,
											"end": 1312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1234,
											"end": 1313,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1234,
											"end": 1313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1118,
											"end": 1324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1340,
											"end": 1350,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1362,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1381,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1397,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1373,
											"end": 1398,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1373,
											"end": 1398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 334,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 313,
											"end": 334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2854,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2716,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2808,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2781,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2838,
											"end": 2846,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2827,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2819,
											"end": 2827,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 3169,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2860,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3145,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2922,
											"end": 3145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2975,
											"end": 2980,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2975,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2980,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2975,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2975,
											"end": 2984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2975,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2975,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 2984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 2984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2998,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3087,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2998,
											"end": 3087,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3058,
											"end": 3063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3058,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3063,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3058,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3058,
											"end": 3067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3057,
											"end": 3072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3057,
											"end": 3072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3072,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3057,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2998,
											"end": 3087,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2998,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2922,
											"end": 3145,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3145,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2922,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3103,
											"end": 3145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3129,
											"end": 3134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3145,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3103,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3145,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2922,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 3169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 3169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 3169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 3169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3269,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3175,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3226,
											"end": 3230,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3250,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3254,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3269,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3269,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1356,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 1242,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1349,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1350,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1356,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1356,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1480,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 1362,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1467,
											"end": 1472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 1449,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1444,
											"end": 1447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1818,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1486,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1724,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 1658,
											"end": 1729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1729,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1658,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 1807,
											"end": 1809,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1805,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 1810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 1739,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1811,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 1739,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1818,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1818,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 2022,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1905,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2016,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2151,
											"end": 2277,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2151,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2270,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2271,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2206,
											"end": 2271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2206,
											"end": 2271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2151,
											"end": 2277,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2151,
											"end": 2277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2151,
											"end": 2277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2151,
											"end": 2277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2379,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2283,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2327,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2349,
											"end": 2373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2373,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2349,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2379,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2379,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2507,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 2385,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 2476,
											"end": 2481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2458,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2482,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 2458,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2483,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2438,
											"end": 2501,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2495,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2499,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2501,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2438,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2604,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 2613,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2646,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2613,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 2832,
											"end": 2837,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2814,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 2996,
											"end": 3001,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2969,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 3008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3488,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3014,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3141,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3136,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3125,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3137,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3142,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3226,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3107,
											"end": 3226,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3145,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 3145,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3145,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3145,
											"end": 3224,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 3145,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3107,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3335,
											"end": 3342,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 3290,
											"end": 3343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3343,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3290,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3394,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3463,
											"end": 3470,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3443,
											"end": 3452,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3418,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3471,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3418,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3471,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3363,
											"end": 3481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3488,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3488,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3584,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3494,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3535,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3577,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3546,
											"end": 3578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3546,
											"end": 3578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3584,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3699,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3590,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3671,
											"end": 3692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3692,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3671,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3659,
											"end": 3693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3915,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3705,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3832,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3833,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3807,
											"end": 3833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3807,
											"end": 3833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3894,
											"end": 3903,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3843,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3908,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 3843,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3915,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 4039,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 3921,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4026,
											"end": 4031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4008,
											"end": 4032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4033,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 4039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 4039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 4039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4267,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4045,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4178,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4165,
											"end": 4174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4189,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 4257,
											"end": 4258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4233,
											"end": 4239,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4189,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4189,
											"end": 4260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4189,
											"end": 4260,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 4189,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4267,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4267,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4273,
											"end": 4391,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4273,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4378,
											"end": 4383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 4360,
											"end": 4384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4384,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4360,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4385,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4273,
											"end": 4391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4273,
											"end": 4391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4273,
											"end": 4391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4397,
											"end": 4619,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4397,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4490,
											"end": 4494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4530,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4517,
											"end": 4526,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4531,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 4609,
											"end": 4610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 4611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4541,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4612,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 4541,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4397,
											"end": 4619,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4397,
											"end": 4619,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4397,
											"end": 4619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4397,
											"end": 4619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4397,
											"end": 4619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5244,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4625,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4702,
											"end": 4708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4716,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4769,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4755,
											"end": 4764,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4753,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4765,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4738,
											"end": 4770,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4854,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 4735,
											"end": 4854,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4773,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4854,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 4735,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4893,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 4963,
											"end": 4970,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 4960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4952,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4939,
											"end": 4961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 4918,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 4971,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 4918,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4971,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5022,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5046,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5091,
											"end": 5098,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5082,
											"end": 5088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5067,
											"end": 5089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5046,
											"end": 5099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5099,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5046,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5036,
											"end": 5099,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5036,
											"end": 5099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4991,
											"end": 5109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5219,
											"end": 5226,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5208,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5174,
											"end": 5227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5227,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5119,
											"end": 5237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5244,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5244,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5244,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5250,
											"end": 5336,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5250,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5285,
											"end": 5292,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5318,
											"end": 5323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5330,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5250,
											"end": 5336,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5250,
											"end": 5336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5250,
											"end": 5336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5250,
											"end": 5336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5454,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 5342,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5425,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 5441,
											"end": 5446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5425,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5425,
											"end": 5447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5425,
											"end": 5447,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 5425,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5674,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 5460,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5589,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5576,
											"end": 5585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5600,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5664,
											"end": 5665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5649,
											"end": 5666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5600,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 5600,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5600,
											"end": 5667,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5600,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5674,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5674,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 6154,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 5680,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5805,
											"end": 5807,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5802,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5791,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5808,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5892,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 5773,
											"end": 5892,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5811,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5811,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5811,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5892,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 5773,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5931,
											"end": 5932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6001,
											"end": 6008,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5992,
											"end": 5998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5981,
											"end": 5990,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5956,
											"end": 6009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6009,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 5956,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 6009,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 6009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5902,
											"end": 6019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6060,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6129,
											"end": 6136,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6127,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6084,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6137,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6084,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6074,
											"end": 6137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6074,
											"end": 6137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6029,
											"end": 6147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 6154,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 6154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 6154,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 6154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 6154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 6154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6779,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 6160,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6245,
											"end": 6251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6304,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6290,
											"end": 6299,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6288,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6300,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6273,
											"end": 6305,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6389,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6270,
											"end": 6389,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6308,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6308,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 6308,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6308,
											"end": 6387,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6308,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6389,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6270,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 6498,
											"end": 6505,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6489,
											"end": 6495,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6478,
											"end": 6487,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6474,
											"end": 6496,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6453,
											"end": 6506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6506,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 6453,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6506,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6399,
											"end": 6516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6555,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6581,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6626,
											"end": 6633,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6615,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6581,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6581,
											"end": 6634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6581,
											"end": 6634,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6581,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6634,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6526,
											"end": 6644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6685,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6709,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 6754,
											"end": 6761,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6745,
											"end": 6751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6743,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6730,
											"end": 6752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6709,
											"end": 6762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6762,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 6709,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6654,
											"end": 6772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6779,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6779,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6779,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 7114,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 6785,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6890,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6891,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6864,
											"end": 6896,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6980,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 6861,
											"end": 6980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6899,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 6899,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 6899,
											"end": 6978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6899,
											"end": 6978,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 6899,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6980,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 6861,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7019,
											"end": 7020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7044,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7089,
											"end": 7096,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7080,
											"end": 7086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7069,
											"end": 7078,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7065,
											"end": 7087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7044,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7044,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7044,
											"end": 7097,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7044,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7034,
											"end": 7097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7034,
											"end": 7097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6990,
											"end": 7107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 7114,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 7114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 7114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 7114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 7114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7449,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 7120,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7179,
											"end": 7185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7228,
											"end": 7230,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7214,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7203,
											"end": 7226,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7231,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7315,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7196,
											"end": 7315,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7234,
											"end": 7313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 7234,
											"end": 7313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7313,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7234,
											"end": 7313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7315,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7196,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 7424,
											"end": 7431,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7413,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 7379,
											"end": 7432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7432,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 7379,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7369,
											"end": 7432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7369,
											"end": 7432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7449,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7449,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7787,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 7455,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7576,
											"end": 7580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7614,
											"end": 7616,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7603,
											"end": 7612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 7695,
											"end": 7696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7693,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7677,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7627,
											"end": 7698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7698,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 7627,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 7776,
											"end": 7778,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7774,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7761,
											"end": 7779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7758,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7708,
											"end": 7780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7780,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 7708,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7787,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7787,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 8267,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7793,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 7867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7906,
											"end": 7915,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7897,
											"end": 7904,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7889,
											"end": 7921,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8005,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 7886,
											"end": 8005,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 7924,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 7924,
											"end": 8003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 8003,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 7924,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8005,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 7886,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8114,
											"end": 8121,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8094,
											"end": 8103,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8090,
											"end": 8112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8069,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 8069,
											"end": 8122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8069,
											"end": 8122,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8069,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8059,
											"end": 8122,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8059,
											"end": 8122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8015,
											"end": 8132,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8197,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8242,
											"end": 8249,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8222,
											"end": 8231,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8218,
											"end": 8240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 8197,
											"end": 8250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8250,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8197,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8250,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 8267,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 8267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 8267,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 8267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 8267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 8267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8273,
											"end": 8453,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 8273,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8398,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8318,
											"end": 8319,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8311,
											"end": 8399,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8418,
											"end": 8422,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8415,
											"end": 8416,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8408,
											"end": 8423,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8446,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8439,
											"end": 8440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8432,
											"end": 8447,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8779,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 8459,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8541,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8534,
											"end": 8538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8542,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8520,
											"end": 8542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8520,
											"end": 8542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8587,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8581,
											"end": 8585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8589,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8608,
											"end": 8626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8598,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8598,
											"end": 8679,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 8668,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 8656,
											"end": 8662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8652,
											"end": 8669,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8598,
											"end": 8679,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8598,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8728,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8718,
											"end": 8724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 8729,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8713,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8692,
											"end": 8730,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 8689,
											"end": 8773,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8745,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 8745,
											"end": 8763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8763,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8745,
											"end": 8763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8773,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 8689,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8779,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8779,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8785,
											"end": 8954,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 8785,
											"end": 8954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8925,
											"end": 8946,
											"name": "PUSH",
											"source": 7,
											"value": "416C726561647920696E697469616C697A656400000000000000000000000000"
										},
										{
											"begin": 8921,
											"end": 8922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8909,
											"end": 8923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8902,
											"end": 8947,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8785,
											"end": 8954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8785,
											"end": 8954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 9326,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 8960,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9123,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 9182,
											"end": 9185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9123,
											"end": 9190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9190,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9123,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9288,
											"end": 9291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 9199,
											"end": 9292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9292,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9199,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9317,
											"end": 9319,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9312,
											"end": 9315,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9308,
											"end": 9320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 9326,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 9326,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 9326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 9326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9498,
											"end": 9502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9536,
											"end": 9538,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9525,
											"end": 9534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9521,
											"end": 9539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9585,
											"end": 9594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9579,
											"end": 9583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9560,
											"end": 9569,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9549,
											"end": 9596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 9739,
											"end": 9743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 9613,
											"end": 9744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9332,
											"end": 9751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9757,
											"end": 9981,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 9757,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9897,
											"end": 9931,
											"name": "PUSH",
											"source": 7,
											"value": "556E697377617056323A20494E53554646494349454E545F4F55545055545F41"
										},
										{
											"begin": 9893,
											"end": 9894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9885,
											"end": 9891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9881,
											"end": 9895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9874,
											"end": 9932,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9966,
											"end": 9973,
											"name": "PUSH",
											"source": 7,
											"value": "4D4F554E54000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9961,
											"end": 9963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9953,
											"end": 9959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9949,
											"end": 9964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9942,
											"end": 9974,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9757,
											"end": 9981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9757,
											"end": 9981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10129,
											"end": 10132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 10209,
											"end": 10212,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 10150,
											"end": 10217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 10226,
											"end": 10319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10344,
											"end": 10346,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10342,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10335,
											"end": 10347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10328,
											"end": 10347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10328,
											"end": 10347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10565,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10552,
											"end": 10561,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10548,
											"end": 10566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10540,
											"end": 10566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10540,
											"end": 10566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10612,
											"end": 10621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10606,
											"end": 10610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10602,
											"end": 10622,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10587,
											"end": 10596,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10583,
											"end": 10600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10576,
											"end": 10623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 10766,
											"end": 10770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 10640,
											"end": 10771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10632,
											"end": 10771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10632,
											"end": 10771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10359,
											"end": 10778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 11116,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 10784,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10943,
											"end": 10945,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10932,
											"end": 10941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10920,
											"end": 10946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10920,
											"end": 10946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 11024,
											"end": 11025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11022,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11000,
											"end": 11006,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 10956,
											"end": 11027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 11027,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 10956,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11037,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 11105,
											"end": 11107,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11094,
											"end": 11103,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11087,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11037,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 11037,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11037,
											"end": 11109,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 11037,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 11116,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 11116,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 11116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 11116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 11116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11122,
											"end": 11238,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11122,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11192,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 11207,
											"end": 11212,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11192,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 11192,
											"end": 11213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11192,
											"end": 11213,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 11192,
											"end": 11213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11185,
											"end": 11190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11214,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11172,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 11172,
											"end": 11232,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11228,
											"end": 11229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11225,
											"end": 11226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11218,
											"end": 11230,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11172,
											"end": 11232,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 11172,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11122,
											"end": 11238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11122,
											"end": 11238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11381,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 11244,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11298,
											"end": 11303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11323,
											"end": 11336,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11314,
											"end": 11336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11314,
											"end": 11336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11345,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 11369,
											"end": 11374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11345,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11345,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11345,
											"end": 11375,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 11345,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11381,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11381,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11387,
											"end": 11732,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 11387,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11454,
											"end": 11460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11503,
											"end": 11505,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11491,
											"end": 11500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11482,
											"end": 11489,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11478,
											"end": 11501,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11474,
											"end": 11506,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 11471,
											"end": 11590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11471,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 11471,
											"end": 11590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11509,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 11509,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 11509,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11509,
											"end": 11588,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 11509,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11471,
											"end": 11590,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 11471,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11629,
											"end": 11630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11654,
											"end": 11715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11707,
											"end": 11714,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11698,
											"end": 11704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11687,
											"end": 11696,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11683,
											"end": 11705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11654,
											"end": 11715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 11654,
											"end": 11715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11654,
											"end": 11715,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11654,
											"end": 11715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11644,
											"end": 11715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11644,
											"end": 11715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11600,
											"end": 11725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11387,
											"end": 11732,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11387,
											"end": 11732,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11387,
											"end": 11732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11387,
											"end": 11732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11387,
											"end": 11732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11881,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 11738,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11795,
											"end": 11800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11826,
											"end": 11832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11820,
											"end": 11833,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11811,
											"end": 11833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11811,
											"end": 11833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11842,
											"end": 11875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11869,
											"end": 11874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11842,
											"end": 11875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 11842,
											"end": 11875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11842,
											"end": 11875,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11842,
											"end": 11875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11881,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 12238,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 11887,
											"end": 12238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11957,
											"end": 11963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12006,
											"end": 12008,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11994,
											"end": 12003,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 11992,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 12004,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 11974,
											"end": 12093,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11974,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11974,
											"end": 12093,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 12012,
											"end": 12091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 12012,
											"end": 12091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12091,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 12012,
											"end": 12091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11974,
											"end": 12093,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11974,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12132,
											"end": 12133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12157,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 12213,
											"end": 12220,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12210,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12193,
											"end": 12202,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12189,
											"end": 12211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12157,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 12157,
											"end": 12221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12157,
											"end": 12221,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 12157,
											"end": 12221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12147,
											"end": 12221,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12147,
											"end": 12221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12103,
											"end": 12231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 12238,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 12238,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 12238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 12238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 12238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12424,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 12244,
											"end": 12424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12292,
											"end": 12369,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12289,
											"end": 12290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12282,
											"end": 12370,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12389,
											"end": 12393,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 12386,
											"end": 12387,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12379,
											"end": 12394,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12413,
											"end": 12417,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12410,
											"end": 12411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12403,
											"end": 12418,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12840,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 12430,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12470,
											"end": 12477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12493,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 12511,
											"end": 12512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12493,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 12493,
											"end": 12513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12493,
											"end": 12513,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 12493,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12488,
											"end": 12513,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12488,
											"end": 12513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12527,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 12545,
											"end": 12546,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12527,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 12527,
											"end": 12547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12527,
											"end": 12547,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 12527,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12522,
											"end": 12547,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12522,
											"end": 12547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12582,
											"end": 12583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12580,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12575,
											"end": 12584,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12604,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 12622,
											"end": 12633,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12604,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 12604,
											"end": 12634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12604,
											"end": 12634,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 12604,
											"end": 12634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12593,
											"end": 12634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12593,
											"end": 12634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12783,
											"end": 12784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12774,
											"end": 12781,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12770,
											"end": 12785,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12767,
											"end": 12768,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12786,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12744,
											"end": 12745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12737,
											"end": 12746,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12717,
											"end": 12800,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 12694,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 12694,
											"end": 12833,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 12813,
											"end": 12831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12694,
											"end": 12833,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 12694,
											"end": 12833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12478,
											"end": 12840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12840,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12846,
											"end": 13008,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 12846,
											"end": 13008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12986,
											"end": 13000,
											"name": "PUSH",
											"source": 7,
											"value": "556E697377617056323A204B0000000000000000000000000000000000000000"
										},
										{
											"begin": 12982,
											"end": 12983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12974,
											"end": 12980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12970,
											"end": 12984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 13001,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12846,
											"end": 13008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12846,
											"end": 13008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13014,
											"end": 13380,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 13014,
											"end": 13380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13156,
											"end": 13159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13177,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 13241,
											"end": 13243,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 13236,
											"end": 13239,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13177,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 13177,
											"end": 13244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13177,
											"end": 13244,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 13177,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13170,
											"end": 13244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13170,
											"end": 13244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 13342,
											"end": 13345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 13253,
											"end": 13346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13346,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 13253,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13371,
											"end": 13373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13366,
											"end": 13369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13362,
											"end": 13374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13355,
											"end": 13374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13355,
											"end": 13374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13014,
											"end": 13380,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13014,
											"end": 13380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13014,
											"end": 13380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13014,
											"end": 13380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13386,
											"end": 13805,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 13386,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13552,
											"end": 13556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13592,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13579,
											"end": 13588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13575,
											"end": 13593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13567,
											"end": 13593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13567,
											"end": 13593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13639,
											"end": 13648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13633,
											"end": 13637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13629,
											"end": 13649,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13625,
											"end": 13626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13614,
											"end": 13623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13610,
											"end": 13627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13603,
											"end": 13650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 13793,
											"end": 13797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 13667,
											"end": 13798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13798,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 13667,
											"end": 13798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13659,
											"end": 13798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13659,
											"end": 13798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13386,
											"end": 13805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13386,
											"end": 13805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13386,
											"end": 13805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13386,
											"end": 13805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13811,
											"end": 13981,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 13811,
											"end": 13981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13951,
											"end": 13973,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F756768206C6971756964697479000000000000000000000000"
										},
										{
											"begin": 13947,
											"end": 13948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13939,
											"end": 13945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13935,
											"end": 13949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13928,
											"end": 13974,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13811,
											"end": 13981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13811,
											"end": 13981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14353,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 13987,
											"end": 14353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14129,
											"end": 14132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14150,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 14214,
											"end": 14216,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 14209,
											"end": 14212,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14150,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 14150,
											"end": 14217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14150,
											"end": 14217,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 14150,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14143,
											"end": 14217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14143,
											"end": 14217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14226,
											"end": 14319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 14315,
											"end": 14318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14226,
											"end": 14319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 14226,
											"end": 14319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14226,
											"end": 14319,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 14226,
											"end": 14319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14344,
											"end": 14346,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14339,
											"end": 14342,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14335,
											"end": 14347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14328,
											"end": 14347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14328,
											"end": 14347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14359,
											"end": 14778,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 14359,
											"end": 14778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14525,
											"end": 14529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14563,
											"end": 14565,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14552,
											"end": 14561,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14548,
											"end": 14566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14540,
											"end": 14566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14540,
											"end": 14566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14612,
											"end": 14621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14606,
											"end": 14610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14602,
											"end": 14622,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14598,
											"end": 14599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14587,
											"end": 14596,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14583,
											"end": 14600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14576,
											"end": 14623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14640,
											"end": 14771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 14766,
											"end": 14770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14640,
											"end": 14771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 14640,
											"end": 14771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14640,
											"end": 14771,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 14640,
											"end": 14771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14632,
											"end": 14771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14632,
											"end": 14771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14359,
											"end": 14778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14359,
											"end": 14778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14359,
											"end": 14778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14359,
											"end": 14778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14784,
											"end": 14964,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 14784,
											"end": 14964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14832,
											"end": 14909,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14829,
											"end": 14830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14822,
											"end": 14910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14929,
											"end": 14933,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 14926,
											"end": 14927,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14919,
											"end": 14934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14953,
											"end": 14957,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14950,
											"end": 14951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14958,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 15155,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 14970,
											"end": 15155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15010,
											"end": 15011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15027,
											"end": 15047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 15045,
											"end": 15046,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15027,
											"end": 15047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 15027,
											"end": 15047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15027,
											"end": 15047,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 15027,
											"end": 15047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15022,
											"end": 15047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15022,
											"end": 15047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15061,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 15079,
											"end": 15080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15061,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 15061,
											"end": 15081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15061,
											"end": 15081,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 15061,
											"end": 15081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15056,
											"end": 15081,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15056,
											"end": 15081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15100,
											"end": 15101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 15090,
											"end": 15125,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15105,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 15105,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 15105,
											"end": 15123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15105,
											"end": 15123,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 15105,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15125,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 15090,
											"end": 15125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15147,
											"end": 15148,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15144,
											"end": 15145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15140,
											"end": 15149,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15135,
											"end": 15149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15135,
											"end": 15149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 15155,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 15155,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 15155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 15155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 15155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15161,
											"end": 15384,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 15161,
											"end": 15384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15201,
											"end": 15205,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15221,
											"end": 15241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 15239,
											"end": 15240,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15221,
											"end": 15241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 15221,
											"end": 15241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15221,
											"end": 15241,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 15221,
											"end": 15241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15216,
											"end": 15241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15216,
											"end": 15241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 15273,
											"end": 15274,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 15255,
											"end": 15275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15275,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 15255,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15250,
											"end": 15275,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15250,
											"end": 15275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15299,
											"end": 15300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15296,
											"end": 15297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15292,
											"end": 15301,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15284,
											"end": 15301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15284,
											"end": 15301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15323,
											"end": 15353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15317,
											"end": 15321,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15314,
											"end": 15354,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15311,
											"end": 15377,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15311,
											"end": 15377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 15311,
											"end": 15377,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15357,
											"end": 15375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 15357,
											"end": 15375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 15357,
											"end": 15375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15357,
											"end": 15375,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 15357,
											"end": 15375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15311,
											"end": 15377,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 15311,
											"end": 15377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15161,
											"end": 15384,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15161,
											"end": 15384,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15161,
											"end": 15384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15161,
											"end": 15384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15161,
											"end": 15384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15390,
											"end": 15832,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 15390,
											"end": 15832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15539,
											"end": 15543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15577,
											"end": 15579,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 15566,
											"end": 15575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15562,
											"end": 15580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15554,
											"end": 15580,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15554,
											"end": 15580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15590,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 15658,
											"end": 15659,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15647,
											"end": 15656,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15643,
											"end": 15660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15634,
											"end": 15640,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 15590,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 15590,
											"end": 15661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15590,
											"end": 15661,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 15590,
											"end": 15661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15671,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 15739,
											"end": 15741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15728,
											"end": 15737,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15724,
											"end": 15742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15715,
											"end": 15721,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15671,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 15671,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15671,
											"end": 15743,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 15671,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15753,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 15821,
											"end": 15823,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15810,
											"end": 15819,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15806,
											"end": 15824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15797,
											"end": 15803,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15753,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 15753,
											"end": 15825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15753,
											"end": 15825,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 15753,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15390,
											"end": 15832,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 15390,
											"end": 15832,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15390,
											"end": 15832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15390,
											"end": 15832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15390,
											"end": 15832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15390,
											"end": 15832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15390,
											"end": 15832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15987,
											"end": 15991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16025,
											"end": 16027,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 16014,
											"end": 16023,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16010,
											"end": 16028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16002,
											"end": 16028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16002,
											"end": 16028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16038,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 16106,
											"end": 16107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16095,
											"end": 16104,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16091,
											"end": 16108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16082,
											"end": 16088,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16038,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 16038,
											"end": 16109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16038,
											"end": 16109,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 16038,
											"end": 16109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 16187,
											"end": 16189,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16176,
											"end": 16185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16172,
											"end": 16190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16163,
											"end": 16169,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 16119,
											"end": 16191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16191,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 16119,
											"end": 16191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 16269,
											"end": 16271,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16258,
											"end": 16267,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16245,
											"end": 16251,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 16201,
											"end": 16273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 16280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 16280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16477,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 16286,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16326,
											"end": 16329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16345,
											"end": 16365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 16363,
											"end": 16364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 16345,
											"end": 16365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16365,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 16345,
											"end": 16365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16340,
											"end": 16365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16340,
											"end": 16365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16379,
											"end": 16399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 16397,
											"end": 16398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16379,
											"end": 16399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 16379,
											"end": 16399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16379,
											"end": 16399,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 16379,
											"end": 16399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16374,
											"end": 16399,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16374,
											"end": 16399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16422,
											"end": 16423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16419,
											"end": 16420,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16415,
											"end": 16424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16408,
											"end": 16424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16408,
											"end": 16424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16443,
											"end": 16446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16440,
											"end": 16441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16437,
											"end": 16447,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16434,
											"end": 16470,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16434,
											"end": 16470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 16434,
											"end": 16470,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16450,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 16450,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 16450,
											"end": 16468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16450,
											"end": 16468,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 16450,
											"end": 16468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16434,
											"end": 16470,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 16434,
											"end": 16470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16477,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/UniswapV2Pair.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"name()": "06fdde03",
							"removeLiquidity(uint256)": "9c8f9f23",
							"swap(uint256,uint256,address)": "6d9a640a",
							"symbol()": "95d89b41",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV2Pair.sol\":\"UniswapV2Pair\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/UniswapV2Pair.sol\":{\"keccak256\":\"0x7753b07df81d2f240a6f768ecba009ee9faa59010a2344d9d77b9e2208cc706c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b0c209988fe3f8168bd61f6affa6b850c2e6d12cccbf084167141bddc940443\",\"dweb:/ipfs/Qma62qHhs2EZLWnpESkKGryD2Bgf3neCopf46SQ1LqZrZp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 796,
								"contract": "contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "_status",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 865,
								"contract": "contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "token0",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 867,
								"contract": "contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "token1",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 869,
								"contract": "contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "reserve0",
								"offset": 0,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 871,
								"contract": "contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "reserve1",
								"offset": 14,
								"slot": "8",
								"type": "t_uint112"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							854
						]
					},
					"id": 855,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 788,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 854,
							"linearizedBaseContracts": [
								854
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 791,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "1674:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 789,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 790,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 794,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "1720:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 792,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 793,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "1763:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 795,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:5",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 799,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:5"
									},
									"src": "1850:37:5"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "1907:38:5",
										"statements": [
											{
												"expression": {
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 802,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "1917:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 803,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1927:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:5"
											}
										]
									},
									"id": 807,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:5"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:5"
									},
									"scope": 854,
									"src": "1893:52:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "2346:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 810,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "2356:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:5"
											},
											{
												"id": 813,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 814,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "2398:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:5"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 818,
									"name": "nonReentrant",
									"nameLocation": "2331:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:5"
									},
									"src": "2322:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "2470:268:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 821,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "2558:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 822,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2569:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "2554:86:5",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "2578:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 824,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "2599:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 826,
															"nodeType": "RevertStatement",
															"src": "2592:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 829,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "2714:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 830,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2724:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:5"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:5"
									},
									"scope": 854,
									"src": "2431:307:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "2782:170:5",
										"statements": [
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 837,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "2924:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "2934:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:5"
											}
										]
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:5"
									},
									"scope": 854,
									"src": "2744:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "3195:42:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 848,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3212:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 849,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3223:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 847,
												"id": 851,
												"nodeType": "Return",
												"src": "3205:25:5"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:5"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3189:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 845,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:5"
									},
									"scope": 854,
									"src": "3131:106:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 855,
							"src": "886:2353:5",
							"usedErrors": [
								799
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:5"
				},
				"id": 5
			},
			"contracts/UniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "contracts/UniswapV2Pair.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"ReentrancyGuard": [
							854
						],
						"UniswapV2Pair": [
							1291
						]
					},
					"id": 1292,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 856,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 857,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1292,
							"sourceUnit": 652,
							"src": "57:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1292,
							"sourceUnit": 730,
							"src": "113:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 859,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1292,
							"sourceUnit": 855,
							"src": "170:59:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 860,
										"name": "ERC20",
										"nameLocations": [
											"257:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "257:5:6"
									},
									"id": 861,
									"nodeType": "InheritanceSpecifier",
									"src": "257:5:6"
								},
								{
									"baseName": {
										"id": 862,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"264:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 854,
										"src": "264:15:6"
									},
									"id": 863,
									"nodeType": "InheritanceSpecifier",
									"src": "264:15:6"
								}
							],
							"canonicalName": "UniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1291,
							"linearizedBaseContracts": [
								1291,
								854,
								651,
								41,
								755,
								729,
								785
							],
							"name": "UniswapV2Pair",
							"nameLocation": "240:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 865,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "301:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "286:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 864,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 867,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "328:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "313:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 866,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 869,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "356:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "340:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 868,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "340:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 871,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "386:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "370:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 870,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "370:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "454:2:6",
										"statements": []
									},
									"id": 879,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "556e6973776170205632204c5020546f6b656e",
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "421:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_642f1ed9827c58d4bb244593c072e2468f7d4b942948e57be405fd2291329fe0",
														"typeString": "literal_string \"Uniswap V2 LP Token\""
													},
													"value": "Uniswap V2 LP Token"
												},
												{
													"hexValue": "554e492d5632",
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "444:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0c49a525f6758cfb27d0ada1467d2a2e99733995423d47ae30ae4ba2ba563255",
														"typeString": "literal_string \"UNI-V2\""
													},
													"value": "UNI-V2"
												}
											],
											"id": 876,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 873,
												"name": "ERC20",
												"nameLocations": [
													"415:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "415:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "415:38:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:6"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:0:6"
									},
									"scope": 1291,
									"src": "401:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "525:145:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 887,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "543:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "561:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "553:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 888,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "553:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "553:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "543:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 893,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "567:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "585:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "577:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 894,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "577:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "577:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "567:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "543:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "589:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "535:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "535:76:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "535:76:6"
											},
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 903,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "621:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 904,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "630:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "621:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "621:16:6"
											},
											{
												"expression": {
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 907,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "647:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 908,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "656:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "647:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "647:16:6"
											}
										]
									},
									"functionSelector": "485cc955",
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "471:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "490:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "482:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "507:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "499:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:34:6"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:0:6"
									},
									"scope": 1291,
									"src": "462:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "758:67:6",
										"statements": [
											{
												"expression": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 919,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "768:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 920,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "780:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "768:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "768:20:6"
											},
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 923,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "798:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 924,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "810:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "798:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "798:20:6"
											}
										]
									},
									"functionSelector": "0902f1ac",
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "685:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:2:6"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "_reserve0",
												"nameLocation": "728:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "720:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 914,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "_reserve1",
												"nameLocation": "747:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "739:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 916,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:38:6"
									},
									"scope": 1291,
									"src": "676:149:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "961:444:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 943,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "999:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1003:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "999:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 947,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1019:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1291",
																		"typeString": "contract UniswapV2Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1291",
																		"typeString": "contract UniswapV2Pair"
																	}
																],
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1011:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 945,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1011:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1011:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "1026:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 940,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "978:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 939,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "971:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "971:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "986:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "971:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "971:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "971:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 956,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1072:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1076:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1072:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 960,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1092:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1291",
																		"typeString": "contract UniswapV2Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1291",
																		"typeString": "contract UniswapV2Pair"
																	}
																],
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1084:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 958,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1084:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1084:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "1099:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 953,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "1051:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 952,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "1044:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1044:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1059:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "1044:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1044:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "1044:63:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 965,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1122:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1122:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1139:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1122:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "1208:116:6",
													"statements": [
														{
															"expression": {
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 978,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "1222:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 983,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 980,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 930,
																							"src": "1239:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 981,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 224,
																								"src": "1249:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 982,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1249:13:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1239:23:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 984,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1238:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 985,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 869,
																				"src": "1266:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "1238:36:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 990,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 987,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 932,
																							"src": "1277:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 988,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 224,
																								"src": "1287:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 989,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1287:13:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1277:23:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 991,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1276:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 992,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 871,
																				"src": "1304:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "1276:36:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 979,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1290,
																		"src": "1234:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1234:79:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1222:91:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 996,
															"nodeType": "ExpressionStatement",
															"src": "1222:91:6"
														}
													]
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "1118:206:6",
												"trueBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "1142:60:6",
													"statements": [
														{
															"expression": {
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 969,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "1156:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 971,
																				"name": "amount0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 930,
																				"src": "1173:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 972,
																				"name": "amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 932,
																				"src": "1183:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1173:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 970,
																		"name": "sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "1168:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1168:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1156:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 976,
															"nodeType": "ExpressionStatement",
															"src": "1156:35:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1000,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1340:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1344:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1340:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "1352:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 999,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1334:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "1334:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1006,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "1381:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1007,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "1390:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1005,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1217,
															458
														],
														"referencedDeclaration": 1217,
														"src": "1373:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "1373:25:6"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 934,
												"name": "nonReentrant",
												"nameLocations": [
													"923:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 818,
												"src": "923:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "923:12:6"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "873:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "891:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "886:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "886:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "905:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "900:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "900:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:28:6"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "950:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "945:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "945:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:16:6"
									},
									"scope": 1291,
									"src": "864:541:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "1549:465:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1024,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1577:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1581:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1577:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1023,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "1567:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1567:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1027,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "1592:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1567:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206c6971756964697479",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1603:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															},
															"value": "Not enough liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															}
														],
														"id": 1022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1559:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1559:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "1559:67:6"
											},
											{
												"assignments": [
													1033
												],
												"declarations": [
													{
														"constant": false,
														"id": 1033,
														"mutability": "mutable",
														"name": "_totalSupply",
														"nameLocation": "1642:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1094,
														"src": "1637:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1032,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1637:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1036,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1034,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1657:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1637:33:6"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1037,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1680:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "1691:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1039,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "1703:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"src": "1691:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1041,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1690:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1042,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "1715:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1690:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1680:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "1680:47:6"
											},
											{
												"expression": {
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1046,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "1737:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1047,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "1748:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1048,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "1760:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"src": "1748:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1050,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1747:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1051,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "1772:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1747:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1737:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "1737:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1056,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1801:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1805:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1801:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "1813:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1055,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "1795:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1795:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "1795:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1065,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1857:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1861:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1857:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "1869:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1062,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "1840:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1061,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "1833:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1833:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1848:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "1833:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1833:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "1833:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1074,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1911:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1915:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1911:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "1923:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1071,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "1894:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1070,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "1887:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1887:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1902:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "1887:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1887:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1887:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1080,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "1950:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1083,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "1969:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1961:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 1081,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "1961:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1961:16:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"src": "1950:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "1979:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1089,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "1998:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1990:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 1087,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "1990:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1990:16:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"src": "1979:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1079,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1217,
															458
														],
														"referencedDeclaration": 1217,
														"src": "1942:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "1942:65:6"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1016,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1015,
												"name": "nonReentrant",
												"nameLocations": [
													"1499:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 818,
												"src": "1499:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1499:12:6"
										}
									],
									"name": "removeLiquidity",
									"nameLocation": "1458:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1479:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1474:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1474:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1473:16:6"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1521:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1521:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1540:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1535:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1535:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:28:6"
									},
									"scope": 1291,
									"src": "1449:565:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "2147:563:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1107,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "2165:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2178:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2165:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1110,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "2183:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2196:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2183:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2165:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2199:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2157:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:82:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "2157:82:6"
											},
											{
												"assignments": [
													1118,
													1120
												],
												"declarations": [
													{
														"constant": false,
														"id": 1118,
														"mutability": "mutable",
														"name": "_reserve0",
														"nameLocation": "2258:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1194,
														"src": "2250:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1117,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "2250:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1120,
														"mutability": "mutable",
														"name": "_reserve1",
														"nameLocation": "2277:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1194,
														"src": "2269:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1119,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "2269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1123,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1121,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "2290:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$",
															"typeString": "function () view returns (uint112,uint112)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
														"typeString": "tuple(uint112,uint112)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2249:54:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1124,
														"name": "amount0Out",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "2318:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2331:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2318:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "2314:59:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 1131,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2358:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1132,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "2362:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1128,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "2341:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1127,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "2334:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2334:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2349:8:6",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 696,
															"src": "2334:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2334:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1134,
													"nodeType": "ExpressionStatement",
													"src": "2334:39:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1136,
														"name": "amount1Out",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "2387:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2400:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2387:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1147,
												"nodeType": "IfStatement",
												"src": "2383:59:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 1143,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2427:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1144,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "2431:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1140,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "2410:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1139,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "2403:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2403:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2418:8:6",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 696,
															"src": "2403:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2403:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1146,
													"nodeType": "ExpressionStatement",
													"src": "2403:39:6"
												}
											},
											{
												"assignments": [
													1149
												],
												"declarations": [
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "balance0",
														"nameLocation": "2458:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1194,
														"src": "2453:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1148,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2453:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1159,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1156,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2502:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1291",
																		"typeString": "contract UniswapV2Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1291",
																		"typeString": "contract UniswapV2Pair"
																	}
																],
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2494:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1154,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2494:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2494:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1151,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "2476:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1150,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "2469:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2469:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2484:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "2469:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2469:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2453:55:6"
											},
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "balance1",
														"nameLocation": "2523:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1194,
														"src": "2518:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1160,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2518:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1168,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2567:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1291",
																		"typeString": "contract UniswapV2Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1291",
																		"typeString": "contract UniswapV2Pair"
																	}
																],
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2559:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2559:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2559:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1163,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "2541:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1162,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "2534:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2534:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2549:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "2534:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2534:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2518:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1173,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "2592:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1174,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "2603:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2592:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1178,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "2620:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2615:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1176,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2615:4:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2615:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1182,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "2638:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2633:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1180,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2633:4:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2633:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2615:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2592:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e697377617056323a204b",
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2650:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af",
																"typeString": "literal_string \"UniswapV2: K\""
															},
															"value": "UniswapV2: K"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af",
																"typeString": "literal_string \"UniswapV2: K\""
															}
														],
														"id": 1172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2584:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2584:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "2584:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1190,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "2684:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1191,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "2694:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1189,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1217,
															458
														],
														"referencedDeclaration": 1217,
														"src": "2676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "2676:27:6"
											}
										]
									},
									"functionSelector": "6d9a640a",
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1103,
												"name": "nonReentrant",
												"nameLocations": [
													"2134:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 818,
												"src": "2134:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:12:6"
										}
									],
									"name": "swap",
									"nameLocation": "2074:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2084:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2079:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2101:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2096:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2096:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2121:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2113:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:46:6"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:0:6"
									},
									"scope": 1291,
									"src": "2065:645:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "2771:83:6",
										"statements": [
											{
												"expression": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1202,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2781:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1205,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "2800:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2792:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 1203,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "2792:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2792:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "2781:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "2781:28:6"
											},
											{
												"expression": {
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1209,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "2819:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1212,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "2838:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2830:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": {
																"id": 1210,
																"name": "uint112",
																"nodeType": "ElementaryTypeName",
																"src": "2830:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2830:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "2819:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "2819:28:6"
											}
										]
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2725:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "balance0",
												"nameLocation": "2738:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2733:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2733:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "balance1",
												"nameLocation": "2753:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2748:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2748:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2732:30:6"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:0:6"
									},
									"scope": 1291,
									"src": "2716:138:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "2912:257:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1224,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "2926:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2930:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "2926:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1260,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "3107:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3112:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3107:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1268,
													"nodeType": "IfStatement",
													"src": "3103:42:6",
													"trueBody": {
														"id": 1267,
														"nodeType": "Block",
														"src": "3115:30:6",
														"statements": [
															{
																"expression": {
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1263,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "3129:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3133:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3129:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1266,
																"nodeType": "ExpressionStatement",
																"src": "3129:5:6"
															}
														]
													}
												},
												"id": 1269,
												"nodeType": "IfStatement",
												"src": "2922:223:6",
												"trueBody": {
													"id": 1259,
													"nodeType": "Block",
													"src": "2933:164:6",
													"statements": [
														{
															"expression": {
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1227,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "2947:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1228,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "2951:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2947:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1230,
															"nodeType": "ExpressionStatement",
															"src": "2947:5:6"
														},
														{
															"assignments": [
																1232
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1232,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "2971:1:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1259,
																	"src": "2966:6:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1231,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2966:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1238,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1233,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "2975:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2979:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2975:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2983:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2975:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2966:18:6"
														},
														{
															"body": {
																"id": 1257,
																"nodeType": "Block",
																"src": "3012:75:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1242,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1222,
																				"src": "3030:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1243,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "3034:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3030:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1245,
																		"nodeType": "ExpressionStatement",
																		"src": "3030:5:6"
																	},
																	{
																		"expression": {
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1246,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "3053:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1251,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1249,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1247,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1219,
																									"src": "3058:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 1248,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1232,
																									"src": "3062:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3058:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1250,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1232,
																								"src": "3066:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3058:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1252,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3057:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1253,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3071:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "3057:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3053:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1256,
																		"nodeType": "ExpressionStatement",
																		"src": "3053:19:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1239,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "3005:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1240,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "3009:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3005:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1258,
															"nodeType": "WhileStatement",
															"src": "2998:89:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1270,
													"name": "z",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1222,
													"src": "3161:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1223,
												"id": 1271,
												"nodeType": "Return",
												"src": "3154:8:6"
											}
										]
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "2869:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2879:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2874:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2874:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:8:6"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "2909:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2904:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2904:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:8:6"
									},
									"scope": 1291,
									"src": "2860:309:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "3232:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1282,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "3249:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1283,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "3253:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3249:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1286,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "3261:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3249:13:6",
													"trueExpression": {
														"id": 1285,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "3257:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1281,
												"id": 1288,
												"nodeType": "Return",
												"src": "3242:20:6"
											}
										]
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3184:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3193:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3188:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3188:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3201:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3196:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3196:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3187:16:6"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3226:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3226:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:6:6"
									},
									"scope": 1291,
									"src": "3175:94:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1292,
							"src": "231:3040:6",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								799
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "32:3240:6"
				},
				"id": 6
			}
		}
	}
}